<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Aayush Ahuja</title>
 <link href="http://hyades.github.io/atom.xml" rel="self"></link>
 <link href="http://hyades.github.io/"></link>
 <updated>2013-08-07T22:42:13+05:30</updated>
 <id>http://hyades.github.com</id>
 <author>
   <name>Aayush Ahuja</name>
 </author>
 
 
 <entry>
   <title>Installing Gst-Switch</title>
   <link href="http://hyades.github.io/blog/Installing-Gst-Switch"></link>
   <updated>2013-08-03T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installing-Gst-Switch</id>
   <content type="html">&lt;p&gt;Using this method I was able to correctly install gst-switch (builds as of now).&lt;/p&gt;


&lt;h2&gt;Dependencies&lt;/h2&gt;


&lt;p&gt;The later parts of this post will take care of most of the dependencies. However, one has to be still fixed.&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146073.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Clone Repositories&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146097.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Setup Config Paths&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146078.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Build gst-switch&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146103.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Checking if it built correctly&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146110.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Python API&lt;/h2&gt;


&lt;p&gt;Since some recent changes were made into the gst-switch speaker-tracking branch, my repository is not currently updated with it. As of now the API will work even if gst-switch is installed. The path to the gst-switch installation has to be provided while starting the server. The path is given as an argument to the Server.&lt;/p&gt;


&lt;p&gt;For getting the Python-API code you can do this in any directory of your system (Not in ~/gst/)&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146121.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Now we are ready. Hope this works :)&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/SoC-Midterm-Evaluations&quot; title=&quot;Previous Post: SoC Midterm Evaluations&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;         &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>SoC Midterm Evaluations</title>
   <link href="http://hyades.github.io/blog/SoC-Midterm-Evaluations"></link>
   <updated>2013-07-28T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/SoC-Midterm-Evaluations</id>
   <content type="html">&lt;p&gt;
    &lt;b&gt;TARGET:&lt;/b&gt; Create a Python API for gst-switch
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;https://github.com/hyades/gst-switch&quot;&gt;Gst-switch&lt;/a&gt; is a replacement of &lt;a href=&quot;http://dvswitch.alioth.debian.org/wiki/&quot;&gt;DVswitch&lt;/a&gt;. Gst-switch has a huge advantage that it is capable of using gstreamer elements and pipelines. A Python API is needed not only to control the gst-switch, but to also allow extensive testing of gst-switch components.
&lt;/p&gt;




&lt;h2&gt;A (Quick) Recap&lt;/h2&gt;




&lt;p&gt;
    The GSoC started from 28th May and the coding period officially started on 17th June. The intermediate time was &quot;Community Bonding Period&quot;. It was an excellent time to think over the things to do ahead, along with trying them out a bit, and understanding difficulties.
&lt;/p&gt;


&lt;p&gt;
    The Community Bonding period also served as a great time to read up existing code and figure how things work out. I mainly concentrated on reading the files: gstswitchserver.c, gstswitchcontroller.c, gstswitchclient.c and test_switch_server.c. 
&lt;/p&gt;




&lt;h2&gt;Installing&lt;/h2&gt;




&lt;p&gt;
      The first task was to explore gst-switch and also learn how to get it working. Gst-switch uses &lt;a href=&quot;http://gstreamer.freedesktop.org/&quot;&gt;gstreamer-1.0&lt;/a&gt;. In the start, I installed gstreamer-1.0 from ubuntu's repository (which is wrong). Then I did something like this:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6105352.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
    Here, I my mistake was that I did not include any arguments to the &lt;b&gt;./autogen&lt;/b&gt;
&lt;/p&gt;


&lt;p&gt;
    Initially, I was not aware of this. By executing the above lines, some executables - gst-switch-srv, gst-switch-ui were created in the gst-switch/tools/ directory. 
    Since building gst-switch was done, I could learn how to play around with it. I figured how the gst-switch-ui causes changes in the output. The only page of documentation of gst-switch is perhaps the Readme file :)
&lt;/p&gt;


&lt;p&gt;The above things worked fine for the master branch. I tried to build the speakertrack branch of gst-switch by doing:&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6105669.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;This time running the executables made me realize that I was on the wrong path.&lt;/p&gt;


&lt;p&gt;I realized that the the speakertrack branch needs a custom version of gstreamer's gst-plugins-bad. This is hosted at &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad.git&quot;&gt;https://github.com/duzy/gst-plugins-bad.git&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;I followed installation instructions which I have posted at &lt;a href=&quot;http://hyades.github.io/blog/Speakertrack-working&quot;&gt;http://hyades.github.io/blog/Speakertrack-working&lt;/a&gt;. I use gstreamer's uninstalled script for this.
&lt;/p&gt;




&lt;h2&gt;The components of gst-switch&lt;/h2&gt;


&lt;p&gt;
    Gst-switch works something like this:
    &lt;ul&gt;
        &lt;li&gt;First the gst-switch-srv is run and input sources are added to it&lt;/li&gt;
        &lt;li&gt;Then the UI/output is connected.&lt;/li&gt;
        &lt;li&gt;The communication between the server and the UI/output occurs over &lt;a href=&quot;http://www.freedesktop.org/wiki/Software/dbus/&quot;&gt;DBus&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;p&gt;DBus is a system of inter-process communication. DBus has two components: the dbus daemon and dbus library. The dbus daemon runs an actual bus over which messages can be transported. Any number of processes can connect to the daemon using the library. Mutiple buses can be active at the same time on any system. In a GNOME environment, two buses - &lt;i&gt;System Bus&lt;/i&gt;: for    miscellaneous system-wide communication and &lt;i&gt;Session Bus&lt;/i&gt;: used by a single user's ongoing GNOME session. A bus has some properties. A very nice analogy is given &lt;a href=&quot;http://www.freedesktop.org/wiki/Software/DBusAnalogy&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Gst-switch uses a custom dbus for communication. The address of this bus is &lt;i&gt;unix:abstract=gstswitch&lt;/i&gt;.&lt;/p&gt;




&lt;p&gt;
    Interacting through DBus is one of the most important and challenging part of making API. My first step towards learning dbus was through command-line tools namely &lt;i&gt;dbus-monitor&lt;/i&gt; and &lt;i&gt;dbus-send&lt;/i&gt;. &lt;i&gt;dbus-monitor&lt;/i&gt; is used to view all messages over a specified bus. &lt;i&gt;dbus-call&lt;/i&gt; can be used to send a message over dbus. These tools work great while interacting with &lt;i&gt;session bus&lt;/i&gt; and &lt;i&gt;system bus&lt;/i&gt;. However on a custom message bus, these methods require an object at path &lt;i&gt;/org/freedesktop/DBus&lt;/i&gt;. It gives an error:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6106323.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;These dbus modules also have a higher level &lt;a href=&quot;http://dbus.freedesktop.org/doc/dbus-python/&quot;&gt;Python API&lt;/a&gt;. But this also results in same problem. I have mentioned these &lt;a href=&quot;http://hyades.github.io/blog/Experiments-with-dbus/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;
    Along with doing all these I also started writing code for creating gst-switch processes. Initially this code could simply run the gst-switch-srv and gst-switch-ui and then later kill them off.
&lt;/p&gt;


&lt;p&gt;
    Another command line tool is &lt;p&gt;gdbus&lt;/p&gt;. This also interacts with dbus, but does so at a lower level. Using this tool one can do the same things as dbus-monitor and dbus-call. Every message bus should have a &lt;i&gt;introspect&lt;/i&gt; interface. The introspect is an XML containing interfaces and property values for the remote object. Gst-switch's introspection is available at &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/test/introspect.txt&quot;&gt;introspect.txt&lt;/a&gt;.
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6106616.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
     Since it has low level interactions, most of the usage and documentation for this is available in C &lt;a href=&quot;https://developer.gnome.org/glibmm/stable/group__DBus.html&quot;&gt;here&lt;/a&gt;. Similar thing for python is also available. It can be accessed using &lt;i&gt;from gi.repository import Gio&lt;/i&gt;. The only problem here was the lack of any proper documentation or examples. The only page regarding this is &lt;a href=&quot;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&quot;&gt;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&lt;/a&gt;. The Python API for Gio is merly a wrapper over the C code. Thus almost all functions perform the same task. For example
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107208.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;becomes:&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107229.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
    Help also came from reading the D-Feet source code. D-Feet is a GUI based DBus debugger written in python. The file &lt;a href=&quot;https://git.gnome.org/browse/d-feet/tree/src/dfeet/bus_watch.py&quot;&gt;bus_watch.py&lt;/a&gt; was very uselful to me in understanding how to interact using the python bindings of Gio.
&lt;/p&gt;


&lt;p&gt;
    This served as a base for writing modules which provide access to remote methods for the gst-switch. Currently I have two files: &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/connection.py&quot;&gt;connection.py&lt;/a&gt; and &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/controller.py&quot;&gt;controller.py&lt;/a&gt; which have almost the same function names defined inside them. The difference here is that the functions mentioned in connection.py interact at the low-level. They ensure things like making a dbus connection and how to call a remote method. I would also like to add information about GVariants here. There is very very less information on this available in python. In python GVariants are used like this:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107403.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;Note that each remote object call also returns a GVariant which can be parsed using __str__ method of GVariant. Thus one can simply do &lt;i&gt;str(variant)&lt;/i&gt; to obtain a tuple containing the desired information. The format of this information can be obtained from the introspection of the method.&lt;/p&gt;




&lt;h2&gt;Exception Handling &amp; Unittests&lt;/h2&gt;




&lt;p&gt;
    This is perhaps the part which I personally don't like. It is boring but is hugely &lt;i&gt;important&lt;/i&gt;. I was completely new to the concept of exception handling in python before this. In beginning I was putting &lt;i&gt;bare&lt;/i&gt; exception statements everywhere. Now, I am catching the possible exceptions and raising appropriate messages. I have covered most of the exceptions, but one or two are still left, and I am still thinking what to do with them.
&lt;/p&gt;


&lt;p&gt;
    &lt;b&gt;Unittests and Integration Tests&lt;/b&gt;
&lt;/p&gt;


&lt;p&gt;
    &lt;i&gt;Unittests&lt;/i&gt; are tests which check the functionality of a small portion or code. For example, if a particular code does some calculation and finally returns a value, an exception might occur while doing the computation. Thus we need to check if the exception is raised properly. For this a unit test is run where only this particular part of the code is executed. Any external methods are generally mocked. This can be done in two ways - use &lt;a href=&quot;https://pypi.python.org/pypi/pymock&quot;&gt;pymock&lt;/a&gt; or create your own mocking objects and functions. Some functions which require external libraries can be mocked using &lt;a href=&quot;http://pytest.org/latest/monkeypatch.html&quot;&gt;monkeypatch&lt;/a&gt;. For running unittests I am using &lt;a href=&quot;http://pytest.org/latest/&quot;&gt;py.test&lt;/a&gt;. ANother important point about unittests is that it should always have 100% coverage. Coverage is the percentage of statements executed in the code. 
&lt;/p&gt;


&lt;p&gt;
    &lt;i&gt;Integration Tests&lt;/i&gt; are tests which check if modules of the software work well together as a group. This may not have 100% coverage. However one must aim to get a higher percentage.
&lt;/p&gt;


&lt;p&gt;I have also added a Makefile for generating pylint, py.test and coverage reports. The commands are &lt;i&gt;make lint&lt;/i&gt; and &lt;i&gt;make coverage&lt;/i&gt;.&lt;/p&gt;


&lt;p&gt;Pylint report can be viewed at &lt;a href=&quot;http://hyades.github.io/gst-switch/reports/pylint/pylint_global.html&quot;&gt;http://hyades.github.io/gst-switch/reports/pylint/pylint_global.html&lt;/a&gt;. The &lt;i&gt;pylint_global&lt;/i&gt; term in the url can be replaced by filename from &lt;a href=&quot;https://github.com/hyades/gst-switch/tree/gh-pages/reports/pylint&quot;&gt;https://github.com/hyades/gst-switch/tree/gh-pages/reports/pylint&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;The coverage part can be viewed at &lt;a href=&quot;http://hyades.github.io/gst-switch/reports/coverage/&quot;&gt;http://hyades.github.io/gst-switch/reports/coverage/&lt;/a&gt;. The testsource file requires some work here.&lt;/p&gt;


&lt;p&gt;Currently, a partial integration test is &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/test.py&quot;&gt;test.py&lt;/a&gt;. This is not exactly an integration test, but it demonstrates how the API works.&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Makefile%2C-Unittests-and-Lint&quot; title=&quot;Previous Post: Makefile, Unittests and Lint&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Installing-Gst-Switch&quot; title=&quot;Next Post: Installing Gst-Switch&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Makefile, Unittests and Lint</title>
   <link href="http://hyades.github.io/blog/Makefile%2C-Unittests-and-Lint"></link>
   <updated>2013-07-27T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Makefile,-Unittests-and-Lint</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Coverage and unittests - test_controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/28a2e3b72629870e2ff43d59205d992168a5ecb5&quot;&gt;28a2e3b72629870e2ff43d59205d992168a5ecb5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint-testsource.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c62fd9be3e276497125f44fe92b492c96b5aec86&quot;&gt;c62fd9be3e276497125f44fe92b492c96b5aec86&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified Makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/836e41f953fe99419f0e913d6ba5cdf19d043a69&quot;&gt;836e41f953fe99419f0e913d6ba5cdf19d043a69&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint helpers: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1761c8006e4c2a06b820c9f6f3a40cc82911b1f8&quot;&gt;1761c8006e4c2a06b820c9f6f3a40cc82911b1f8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8094c21e4a578559e2bdcc1dc4960314393ad63d&quot;&gt;8094c21e4a578559e2bdcc1dc4960314393ad63d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/df03803b679192a3535cc798332ce4080e6790b6&quot;&gt;df03803b679192a3535cc798332ce4080e6790b6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified .gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e4c0e9d9f990f7469375ae4050e190481858d911&quot;&gt;e4c0e9d9f990f7469375ae4050e190481858d911&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added Makefile - pylint: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f3f119ed86ed8dc19a3d40978f31e19c3e73f599&quot;&gt;f3f119ed86ed8dc19a3d40978f31e19c3e73f599&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;improved syntax - pylint: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/828d5b06566e27043b0cfe3a2f679fed9b7e718a&quot;&gt;828d5b06566e27043b0cfe3a2f679fed9b7e718a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pylint: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/deea82673be84ce1db99add6a9fc507ec1201b70&quot;&gt;deea82673be84ce1db99add6a9fc507ec1201b70&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A bit of pylint - -server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c3b73951b0e0795b1ae860442f08877a21af4330&quot;&gt;c3b73951b0e0795b1ae860442f08877a21af4330&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added __init__.py. Added __all__ to all files. Added a test.py file: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7dc299753b194a8ea5e78a1c40f0c35354174fe7&quot;&gt;7dc299753b194a8ea5e78a1c40f0c35354174fe7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;meaningful names to call_sync parameters: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ef2b4a490f1dc6a3b46fe1a1d5cb60902521d824&quot;&gt;ef2b4a490f1dc6a3b46fe1a1d5cb60902521d824&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified MockConnection() and its usage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/53c9a0c5cb420749be6c87feeab4e0c145bc62ed&quot;&gt;53c9a0c5cb420749be6c87feeab4e0c145bc62ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;properties and doc string in place: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/07c3348c13a2025a5373e4cd7a5f7c9a2b1cc8ec&quot;&gt;07c3348c13a2025a5373e4cd7a5f7c9a2b1cc8ec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;




&lt;h2&gt;Makefile&lt;/h2&gt;


&lt;p&gt;
I made a makefile to automate running py.test, coverage and pylint on the code. This is first time I am writing one :) The one i wrote assumes that py.test (with coverage.py plugin) and pylint is installed on your system. 
&lt;/p&gt;


&lt;p&gt;For running py.test along with coverage:
&lt;/p&gt;


&lt;p&gt;
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;make coverage
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;&lt;/p&gt;

&lt;p&gt;
    For running pylint over the code:
&lt;/p&gt;


&lt;p&gt;
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;make lint
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;The result is generated as html files in a folder &lt;b&gt;reports&lt;/b&gt; in the present working directory.&lt;/p&gt;


&lt;h2&gt;Linting the code&lt;/h2&gt;


&lt;p&gt;I ran pylint on my code. Ofc it gave a very huge list of warning/errors! Slowly, they were solved. I tried my best to remove those, but some of those just cannot be removed :) Running pylint using Makefile gives a better estimate of the situation.&lt;/p&gt;




&lt;h2&gt;Exceptions and Unittests&lt;/h2&gt;


&lt;p&gt;I also added exceptions and unittests for helper.py and testsource.py. Now the unittests part is almost complete with 100% coverage.&lt;/p&gt;


&lt;h2&gt;Others..&lt;/h2&gt;


&lt;p&gt;Some small changes were also made which are reflected from the git commit message history.&lt;/p&gt;


&lt;h2&gt;TODO:&lt;/h2&gt;


&lt;ul&gt;
    &lt;li&gt;Integration tests&lt;/li&gt;
&lt;/ul&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Unittests-Mocking-and-Coverage&quot; title=&quot;Previous Post: Unittests Mocking and Coverage&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/SoC-Midterm-Evaluations&quot; title=&quot;Next Post: SoC Midterm Evaluations&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Unittests Mocking and Coverage</title>
   <link href="http://hyades.github.io/blog/Unittests-Mocking-and-Coverage"></link>
   <updated>2013-07-24T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Unittests-Mocking-and-Coverage</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Added properties - controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0c75a0590a0e683bfbaaba55488fb780e33579b5&quot;&gt;0c75a0590a0e683bfbaaba55488fb780e33579b5&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Unittests for connection.py - 100%coverage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2a5086326b8a72ed406b6a61ccf33b09d02345a5&quot;&gt;2a5086326b8a72ed406b6a61ccf33b09d02345a5&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Changes in connection.py. Added unittests for connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9ad1ed7e21dcec56b54e4a53e32d075db9c2dcf3&quot;&gt;9ad1ed7e21dcec56b54e4a53e32d075db9c2dcf3&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittests server.py - 100% coverage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9c74a37a24e7704973427cd939111b740a492fc8&quot;&gt;9c74a37a24e7704973427cd939111b740a492fc8&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;test for OSError in terminate: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/fab6c53deafb1bc5b5005a9fdccacd763972e51f&quot;&gt;fab6c53deafb1bc5b5005a9fdccacd763972e51f&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;remove unnecessarry: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e8c38b7a7e6a82e3d1d235214b0255642aa3256a&quot;&gt;e8c38b7a7e6a82e3d1d235214b0255642aa3256a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;modify gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7a4db71936352e6e51a9f27f38ca22f70abb608b&quot;&gt;7a4db71936352e6e51a9f27f38ca22f70abb608b&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;modify gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b7d83a907598b77df7ee1927907c814e615ede63&quot;&gt;b7d83a907598b77df7ee1927907c814e615ede63&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/bafe6905dfceed7870087bd95152ae0f2e89f7de&quot;&gt;bafe6905dfceed7870087bd95152ae0f2e89f7de&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/eb0895dbb0625b9b58d01bcd815607b0abc1aacf&quot;&gt;eb0895dbb0625b9b58d01bcd815607b0abc1aacf&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/03895c871a61f5c0ed4a930d7a69802a5d927a3c&quot;&gt;03895c871a61f5c0ed4a930d7a69802a5d927a3c&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d74829c50a8aa1f3e61f1d6211ee20ac2f619fe5&quot;&gt;d74829c50a8aa1f3e61f1d6211ee20ac2f619fe5&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/p&gt;


&lt;h2&gt;Things done&lt;/h2&gt;


&lt;p&gt;
    Last two days were almost devoted to unittests. I learnt how to use pytest-cov. The command issued by me is
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;py.test --cov-report html --cov &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;file/files to be checked&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;file having unittests&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
py.test --cov-report html --cov server.py test_server.py
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;
    I also learnt how to make mock classes and functions. I also learnt about monkeypatch techniques. Some links about these are:
&lt;/p&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;http://holgerkrekel.net/2009/03/03/monkeypatching-in-unit-tests-done-right/
&quot;&gt;http://holgerkrekel.net/2009/03/03/monkeypatching-in-unit-tests-done-right/
&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://pytest.org/latest/monkeypatch.html#_pytest.monkeypatch.monkeypatch.setattr
&quot;&gt;http://pytest.org/latest/monkeypatch.html#_pytest.monkeypatch.monkeypatch.setattr
&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6018040/py-test-use-monkeypatch-in-custom-funcargs&quot;&gt;http://stackoverflow.com/questions/6018040/py-test-use-monkeypatch-in-custom-funcargs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    I have achieved 100% coverage for server.py and connection
&lt;/p&gt;




&lt;h2&gt;Next..&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Write Makefile for pylint and pep8&lt;/li&gt;
        &lt;li&gt;100% coverage for rest files&lt;/li&gt;
        &lt;li&gt;Integration tests&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Exception-Handling---connection.py&quot; title=&quot;Previous Post: Exception Handling - connection.py&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Makefile%2C-Unittests-and-Lint&quot; title=&quot;Next Post: Makefile, Unittests and Lint&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Exception Handling - connection.py</title>
   <link href="http://hyades.github.io/blog/Exception-Handling---connection.py"></link>
   <updated>2013-07-22T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Exception-Handling---connection.py</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Added unittests for bus: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7c6f1ea8ed5e5f68aaa1d55fd1641a0e7a997190&quot;&gt;7c6f1ea8ed5e5f68aaa1d55fd1641a0e7a997190&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Changed naming in test_server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a3d31f10be8696d9f1ea0203bf5c53b0387a4e9a&quot;&gt;a3d31f10be8696d9f1ea0203bf5c53b0387a4e9a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittests connection.py - address: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8c8663100f09b968c8ce678fe87e2315916abfdd&quot;&gt;8c8663100f09b968c8ce678fe87e2315916abfdd&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added properties and exception - connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/76ce5337daebeefd62c9194f96abad8f7fc1054a&quot;&gt;76ce5337daebeefd62c9194f96abad8f7fc1054a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;GError Exception Handling connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f1506f87654dda984772b5c9ad493a5b8414d56a&quot;&gt;f1506f87654dda984772b5c9ad493a5b8414d56a&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Things I did&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;b&gt;Added exceptions in connection.py&lt;/b&gt;
            &lt;br&gt;
            The functions in connection.py interact with the low level GDbus API. It is the API at gi.repository.Gio. Using this API, I am making new connection over dbus and invoking remote methods. Exception handling is done using 'GError'. This exception which occurred is sys.exc_info()[1]. lets say :
            
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exc_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

            Then the error message is contained in error.message and the domain in error.domain.
            
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;
            
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

        &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Added properties in connection.py&lt;/b&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Added unittests&lt;/b&gt; based on py.test modules in connection.py. I covered a small chunk of it. Address and bus_name are done.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Problems I faced&lt;/h2&gt;


&lt;p&gt;
    The Exception of DBus (GError) are located at the file /usr/lib/python2.7/dist-packages/gi/_glib/option.py and /usr/lib/python2.7/dist-packages/gi/_glib/__init__.py. However, including in my PYTHON_PATH was a problem. Somehow doing this worked
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gi.repository.GLib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GError&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;


&lt;p&gt;
    Some good links I found are:
    &lt;br&gt;
    &lt;a href=&quot;https://developer.gnome.org/glib/2.34/glib-Error-Reporting.html&quot;&gt;https://developer.gnome.org/glib/2.34/glib-Error-Reporting.html&lt;/a&gt;: Explains the error reporting procedure in C.
&lt;/p&gt;


&lt;h2&gt;What Next..&lt;/h2&gt;


&lt;p&gt;Writing unittests for connection.py. At present it covers only 5-10% of connection.py&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Exception-Handling-and-Unittests&quot; title=&quot;Previous Post: Exception Handling and Unittests&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Unittests-Mocking-and-Coverage&quot; title=&quot;Next Post: Unittests Mocking and Coverage&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Exception Handling and Unittests</title>
   <link href="http://hyades.github.io/blog/Exception-Handling-and-Unittests"></link>
   <updated>2013-07-20T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Exception-Handling-and-Unittests</id>
   <content type="html">&lt;h2&gt;
    Commits:
&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Added unittests for server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e93df29e12b92c87cfbdf2878682920fb0513437&quot;&gt;e93df29e12b92c87cfbdf2878682920fb0513437&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added properties for server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b1fb7f1bd5226f666c47555b360a97c208951499&quot;&gt;b1fb7f1bd5226f666c47555b360a97c208951499&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation: server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/be12843f29839b6f9875b71c59c386e044256170&quot;&gt;be12843f29839b6f9875b71c59c386e044256170&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h3&gt;
    What I Did Today..
&lt;/h3&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;I modified &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/server.py&quot;&gt;server.py&lt;/a&gt;. I finally learnt what the decorator operator in Python does. I added properties for path, video_port, audio_port, control_port and record_file. This allowed me to add exception handlers. Also detection of errors and raising is possible.&lt;/li&gt;
        &lt;li&gt;I wrote unittests &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/test_server.py&quot;&gt;test_server.py&lt;/a&gt;&lt;/li&gt;. These cover almost all errors that may come up in server.py
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h3&gt;Problems I Faced..&lt;/h3&gt;


&lt;ul&gt;
    &lt;li&gt;
        Using properties: Very nicely explained at:
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6618002/python-property-versus-getters-and-setters#answer-6618176&quot;&gt;http://stackoverflow.com/questions/6618002/python-property-versus-getters-and-setters#answer-6618176&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6304040/real-world-example-about-how-to-use-property-feature-in-python&quot;&gt;http://stackoverflow.com/questions/6304040/real-world-example-about-how-to-use-property-feature-in-python&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Next What..&lt;/h3&gt;


&lt;p&gt;
    Do the same for all other files (Write properties wherever required and unittests)
&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Correcting-lots-of-stuff&quot; title=&quot;Previous Post: Correcting lots of stuff&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Exception-Handling---connection.py&quot; title=&quot;Next Post: Exception Handling - connection.py&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Correcting lots of stuff</title>
   <link href="http://hyades.github.io/blog/Correcting-lots-of-stuff"></link>
   <updated>2013-07-20T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Correcting-lots-of-stuff</id>
   <content type="html">&lt;h2&gt;
    What was Wrong
&lt;/h2&gt;


&lt;p&gt;
    While writing unittests I went off-track. Thankfully, mithro guided me at correct time. Two major wrong things I was doing were:
    &lt;ol&gt;
        &lt;li&gt;For testing purposes, to each and every function in my code I was adding input validation statements, so that I did not get any TypeError or ValueError while running it. Instead of doing this, I should have made exception handlers. So my last few commits were not useful at all and I had to remove them.&lt;/li&gt;
        &lt;li&gt;I was using setters and getters in my code. I had added them to give extra abstraction to the user. However, I learnt that in python these are seldom used. So, I had to remove these lines from the code.&lt;/li&gt;
    &lt;/ol&gt;
    These things were the reason I delayed writing this blog post.
&lt;/p&gt;


&lt;h2&gt;
    Commits:
&lt;/h2&gt;


&lt;p&gt;
    A rather long list of commits:
    &lt;ul&gt;
        &lt;li&gt;exceptions for run, terminate and kill: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/af1bd7c8645b82fd2a725655fd6905709d6d8d45&quot;&gt;af1bd7c8645b82fd2a725655fd6905709d6d8d45&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;exceptions for run, terminate and kill: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/51dada1c0b16e8e3fd90eb7a967fb583b87d76f8&quot;&gt;51dada1c0b16e8e3fd90eb7a967fb583b87d76f8&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Exception handling for Server.run and py.tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8807d07c2d98d5d39b8a0c22eabfc77b619369e1&quot;&gt;8807d07c2d98d5d39b8a0c22eabfc77b619369e1&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;exception handling for server process creation: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/832e0cb1948c601faa20292b6883a4d4d12bb1dc&quot;&gt;832e0cb1948c601faa20292b6883a4d4d12bb1dc&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;added exception for subprocess: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8ef1346d40822b47e3cba16fd42848843a265783&quot;&gt;8ef1346d40822b47e3cba16fd42848843a265783&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-option added and updated connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9f8434cb9f06a25d6f9e3fec22a04289d2ba458e&quot;&gt;9f8434cb9f06a25d6f9e3fec22a04289d2ba458e&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed wrong unittests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/269d307d5edd1b6d621457038b9148152bf14e12&quot;&gt;269d307d5edd1b6d621457038b9148152bf14e12&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made helpers.py and testsource.py pythonic: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/18608b8702826279711ed9d749f435b4340607ee&quot;&gt;18608b8702826279711ed9d749f435b4340607ee&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made server.py pythonic: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/abecf31fb2d429a84288026008e44feae3e8640c&quot;&gt;abecf31fb2d429a84288026008e44feae3e8640c&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made connection.py pythonic and removed dbus.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2c7c7c03b527885c6bc0043dd73a0aeb7d29444d&quot;&gt;2c7c7c03b527885c6bc0043dd73a0aeb7d29444d&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made connection.py pythonic and removed dbus.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/82cd61beadbd499f9424409c218bcae5b4840217&quot;&gt;82cd61beadbd499f9424409c218bcae5b4840217&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;fixed typo: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e11aaea2b080d63f55a95b682593d4e6c50c1606&quot;&gt;e11aaea2b080d63f55a95b682593d4e6c50c1606&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Fixed problems: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/48e1742478627741b7c6def34ab2c2f972609b82&quot;&gt;48e1742478627741b7c6def34ab2c2f972609b82&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;h2&gt;
    Exception Handling
&lt;/h2&gt;


&lt;p&gt;
    From above experience I learnt that I had to put exception handlers in my code. I had very little knowledge of exception handlers and absolutely no experience.
&lt;/p&gt;


&lt;p&gt;
    Some good links that I found were very useful in the field of exception handling and testing:
    &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;http://pythontesting.net/framework/pytest/pytest-introduction/&quot;&gt;http://pythontesting.net/framework/pytest/pytest-introduction&lt;/a&gt; : This page nicely explains how to use py.test.&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.itmaybeahack.com/book/python-2.6/html/p02/p02c07_exceptions.html&quot;&gt;http://www.itmaybeahack.com/book/python-2.6/html/p02/p02c07_exceptions.html&lt;/a&gt;: A very long and very good page which explains exception handling to its core.&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6180185/custom-python-exceptions-with-error-codes-and-error-messages&quot;&gt;http://stackoverflow.com/questions/6180185/custom-python-exceptions-with-error-codes-and-error-messages&lt;/a&gt;: Nicely explains how to create custom exception classes&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://blog.ianbicking.org/2007/09/12/re-raising-exceptions/&quot;&gt;http://blog.ianbicking.org/2007/09/12/re-raising-exceptions/&lt;/a&gt;: Nicely explains how to raise and re-raise exceptions in python&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    After spending lots of time on reading exception handling in python, I made a few changes to the code, where I defined some custom Exceptions like PathError: Raised when a wrong path is specified to the run the gst-switch-srv process. Another one is ServerProcessError: Raised when something wrong happens with the process running like a OSError indicating some internal fault.
&lt;/p&gt;


&lt;h2&gt;Things to do..&lt;/h2&gt;


&lt;p&gt;
    Add exception handling for all modules and write py.test testing modules for testing them
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Writing-unittests&quot; title=&quot;Previous Post: Writing unittests&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Exception-Handling-and-Unittests&quot; title=&quot;Next Post: Exception Handling and Unittests&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Writing unittests</title>
   <link href="http://hyades.github.io/blog/Writing-unittests"></link>
   <updated>2013-07-16T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Writing-unittests</id>
   <content type="html">&lt;h3&gt;
    What I am doing
&lt;/h3&gt;


&lt;p&gt;
    I am beginning to get an idea of what unittests are. They try to test a particular small portion of your code and ensure that it will behave normally in all test cases.
&lt;/p&gt;


&lt;p&gt; 
    For example I was writing unittests for a function - set_video_port(video_port)
    Mithro pointed out that if I give an argument like -1, my code will not work correctly. So this type of error where the port numbers are not in range should induce a &lt;b&gt;ValueError&lt;/b&gt;. Similary, putting a string as an argument will should also raise an exception - &lt;b&gt;TypeError&lt;/b&gt;.
&lt;/p&gt;


&lt;p&gt;
    I am making a class for each function, and the functions in the class are corresponding tests
    The format is like:
    &lt;script src=&quot;https://gist.github.com/hyades/6009468.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    I run these tests by simply issuing a command like 
    &lt;script src=&quot;https://gist.github.com/hyades/6009520.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    The commits made are
    &lt;ul&gt;
        &lt;li&gt;Added unittest for BaseServer.get_record_file: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b5e4a4002c33d9f9a2c97184e6d9eacbeaad06a3&quot;&gt;b5e4a4002c33d9f9a2c97184e6d9eacbeaad06a3&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.get_control_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f4ce165cb8f5d6b54c1ae3836025f1e0600ade6d&quot;&gt;f4ce165cb8f5d6b54c1ae3836025f1e0600ade6d&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.get_audio_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c8f2ccdf9675dd4ce3b146e35feda6289cce307a&quot;&gt;c8f2ccdf9675dd4ce3b146e35feda6289cce307a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.get_video_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/933598967c845f394d2744322b1063b583bb53a9&quot;&gt;933598967c845f394d2744322b1063b583bb53a9&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_record_file: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a403b96a3baaab320578530b2ebfc502cf1973b3&quot;&gt;a403b96a3baaab320578530b2ebfc502cf1973b3&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_control_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ab2743e221b45c980a75a9e9464f6ea61f6748a0&quot;&gt;ab2743e221b45c980a75a9e9464f6ea61f6748a0&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_control_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b4584d1c9214a555af052b7542adfa707acc9a1b&quot;&gt;b4584d1c9214a555af052b7542adfa707acc9a1b&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_audio_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/761fd99c5519da82c79ee5e31f77cf07769a0b65&quot;&gt;761fd99c5519da82c79ee5e31f77cf07769a0b65&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_video_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/6963aa5bbbddbe8d25e776ca4727a509132485e5&quot;&gt;6963aa5bbbddbe8d25e776ca4727a509132485e5&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/p&gt;


&lt;h3&gt;
    What I am planning to do
&lt;/h3&gt;


&lt;p&gt;
    I will be continuing with writing unittests for each function of the code :)
&lt;/p&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
    An off-topic thing. Getting all commits I had made in the last days on the blog page was such a headache. I have made this small little script for getting these commits and generating html code out of it &lt;a href=&quot;https://github.com/hyades/hyades.github.com/blob/master/commits.py&quot;&gt;https://github.com/hyades/hyades.github.com/blob/master/commits.py&lt;/a&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Sphinx-Documentation&quot; title=&quot;Previous Post: Sphinx Documentation&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Correcting-lots-of-stuff&quot; title=&quot;Next Post: Correcting lots of stuff&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Sphinx Documentation</title>
   <link href="http://hyades.github.io/blog/Sphinx-Documentation"></link>
   <updated>2013-07-15T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Sphinx-Documentation</id>
   <content type="html">&lt;p&gt;
    Got a bit bored from testing modules, so went into writing documentation.
&lt;/p&gt;


&lt;h3&gt;What I have done&lt;/h3&gt;


&lt;p&gt;
    I am writing documentation so that it can be made into nice looking HTML pages by &lt;a href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;. I have completed documentation for controller.py, connection.py, dbus.py and server.py.
    &lt;br&gt;
    The commits made are:
    &lt;ul&gt;
        &lt;li&gt;test for set_compose_mode;set_encode_mode doesn't work: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/5311985a8872aeb215aebbfa89182e8cf2b6848b&quot;&gt;5311985a88&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added sphinx compatible documentation - controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/10c1e4b43402d2da5f999c9cea4605ba9cef2c1f&quot;&gt;10c1e4b434&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation - connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a6fafa1b71a9fd35335a0a177fd66aa595a0d13c&quot;&gt;a6fafa1b71&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation-dbus.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/38c6166674af56706b7718c106fbfe26e842f27a&quot;&gt;38c6166674&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f78f8d1aa35e58996a01fceb2c26d10fc8d76c42&quot;&gt;f78f8d1aa3&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    The compile the documentation by using a command like
    &lt;script src=&quot;https://gist.github.com/hyades/6000586.js&quot;&gt;&lt;/script&gt;
    And then do
    &lt;script src=&quot;https://gist.github.com/hyades/6000600.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    The documentation looks something like this. Its present only for files I have mentioned above.
    &lt;a href=&quot;http://hyades.github.io/gst-switch/&quot;&gt;Gst-Switch Python API&lt;/a&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/testing-testing-testing&quot; title=&quot;Previous Post: testing testing testing&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Writing-unittests&quot; title=&quot;Next Post: Writing unittests&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>testing testing testing</title>
   <link href="http://hyades.github.io/blog/testing-testing-testing"></link>
   <updated>2013-07-13T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/testing-testing-testing</id>
   <content type="html">&lt;h3&gt;What I achieved&lt;/h3&gt;


&lt;p&gt;
    The commits are:
    &lt;ul&gt;
        &lt;li&gt;Removed unncessary files:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d0e2cf4e001b9da785071448d56bb2a4399b1218&quot;&gt;d0e2cf4e00&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Created separate helpers class. Removed logging:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9a9f2412522f711cbe648faafcb77ecdd468b020&quot;&gt;9a9f241252&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;small change:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/14e871ad40d929c43cfcf61d2f90256c6cddc677&quot;&gt; 14e871ad40&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;removed unneccesarry commented code:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/aa50ca622e407df6213d8deb3b77de9d63842d8b&quot;&gt;aa50ca622e&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;DBus methods getting data working:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/804436e8effaed7a402cf7363972825722b4be06&quot;&gt;804436e8ef&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Fixed typos, modified tests:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/df00cd368aadf544055ea675d9e2503d163d579e&quot;&gt;df00cd368a&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    For testing the methods, I had to create a new test.py file. After these tests, all the methods which &quot;get&quot; information from the gst-switch-srv are working. Also the method set_compose_mode is working.
&lt;/p&gt;


&lt;h3&gt;
    What problems I'm currently having.
&lt;/h3&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;The method set_encode_mode is not working. Looking at how its implemented in the code of gst-switch, I found that its not implemented at all. &lt;a href=&quot;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L69&quot;&gt;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L69&lt;/a&gt; The method table has no mention of this method &lt;a href=&quot;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L969&quot;&gt;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L969&lt;/a&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h3&gt;
    What I am planning to do
&lt;/h3&gt;


&lt;p&gt;
    Mithro had correctly pointed out that I will need a fully automatic test suite for testing the python api as well as the gst-switch. I am reading about how to use these. I have gone through py.test documentation. I will be using it for creating this test suite after I am done with very basic tests. Added to the to-do list :)
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Working-on-previews-and-plans-ahead&quot; title=&quot;Previous Post: Working on previews and plans ahead&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Sphinx-Documentation&quot; title=&quot;Next Post: Sphinx Documentation&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Working on previews and plans ahead</title>
   <link href="http://hyades.github.io/blog/Working-on-previews-and-plans-ahead"></link>
   <updated>2013-07-10T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Working-on-previews-and-plans-ahead</id>
   <content type="html">&lt;h3&gt;
    What I achieved
&lt;/h3&gt;


&lt;p&gt;
    Today I spent most of the time debugging the previously written code for preview outputs. I had written this module a week back but did not test it. I was using the alternate method of creating separate processes and dealing with them. A few tweaks were needed to get it to work. The commit link is &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/fbbf832e887834964d306053a02839d380f9c16f&quot;&gt;fbbf832e88&lt;/a&gt;. I have also made a few changes to the Controller class. Till now I have just coded the Controller class but not tested till now. So these changes were needed for this purpose.
&lt;/p&gt;




&lt;h3&gt;
    Problems that will mostly arise and things that need to be done
&lt;/h3&gt;


&lt;p&gt;
    Trying to jot down whatever is coming to my mind. This list is surely not complete and I will add whatever will comes to mind later.
    &lt;ul&gt;
    &lt;li&gt;In my &lt;a href=&quot;http://hyades.github.io/blog/Connections-and-calling-methods&quot;&gt;last post&lt;/a&gt; I had talked about what methods will be implemented over the dbus. Some of these are pretty easy and straight-forward. These are the methods: get_compose_port, get_encode_port, get_audio_port, get_preview_ports. These are very simple and give simple return values.The method set_composite_mode has been tested by me in a separate script, so I don't expect any problems with that. Four methods: set_encode_mode, adjust_pip, switch and click_video will surely require some amount of testing before they are working good. I got no idea on how speakertracking related methods: mark_face and mark_tracking. I am expecting that the speakertrack system integration will take time.&lt;/li&gt;
    &lt;li&gt;Preview ports for viewing outputs is done. However previews for inputs are still remaining.&lt;/li&gt;
    &lt;li&gt;Exception handling is fully left.&lt;/li&gt;
    &lt;li&gt;Logging is partially implemented.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Connections-and-calling-methods&quot; title=&quot;Previous Post: Connections and calling methods&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/testing-testing-testing&quot; title=&quot;Next Post: testing testing testing&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Connections and calling methods</title>
   <link href="http://hyades.github.io/blog/Connections-and-calling-methods"></link>
   <updated>2013-07-07T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Connections-and-calling-methods</id>
   <content type="html">&lt;p&gt;
Blog post after a few days now. Moved on to a new city, and sadly I don't have a reliable internet connection here.Hopefully my new 3G SIM gets activated really fast! (im realizing life without fast internet is so hard :( )
&lt;/p&gt;


&lt;p&gt;
    Working mostly offline, for past few days I am trying to implement to Controller class I had earlier just made and left there. 
&lt;/p&gt;


&lt;p&gt;
    The remote methods allowed to interact with the gst-switch-srv through  dbus are:
    &lt;ul&gt;
        &lt;li&gt;get_compose_port: Returns compose port (default is 3001)&lt;/li&gt;
        &lt;li&gt;get_encode_port: Returns encode port&lt;/li&gt;
        &lt;li&gt;get_audio_port: Returns audio port&lt;/li&gt;
        &lt;li&gt;get_preview_ports: Returns a string of all preview ports&lt;/li&gt;
        &lt;li&gt;set_composite_mode: Sets the PIP mode (0 to 3). Returns true/false&lt;/li&gt;
        &lt;li&gt;set_encode_mode: Sets the encode mode (A or B). Returns true/false&lt;/li&gt;
        &lt;li&gt;new_record&lt;/li&gt;
        &lt;li&gt;adjust_pip: Inputs are dx, dy, dw, dh&lt;/li&gt;
        &lt;li&gt;switch: Inputs are channel and port&lt;/li&gt;
        &lt;li&gt;click_video: Inputs are x, y, fw, fh&lt;/li&gt;
        &lt;li&gt;mark_face: Input is dictionary (a, b, c, d) of faces&lt;/li&gt;
        &lt;li&gt;mark_tracking: Inputs is faces(dictionary)&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    The main controller class uses a dbus Connection class. This Connection class provides the low level interaction with the dbus. The Controller class is majorly a top level interface which hides all the dbus interactions from the user. 
&lt;/p&gt;


&lt;p&gt;
    The functons defined in the Controller class are almost stubs, but each of them have different parsers based on what the function does. Giving defination of each and every method will be too long, so I have tried to put some in-line documentation.
&lt;/p&gt;


&lt;p&gt;
    The Connection class handles making connection to the dbus and then calling remote functions. Each function has a different type of calling and objects returned are different and have to be parsed accordingly. I have implemented most of these functions, though still some are left. The interesting functions which will require more attention are adjust_pip, switch, click_video, mark_face, and mark_tracking. 
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Few-Changes&quot; title=&quot;Previous Post: Few Changes&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Working-on-previews-and-plans-ahead&quot; title=&quot;Next Post: Working on previews and plans ahead&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Few Changes</title>
   <link href="http://hyades.github.io/blog/Few-Changes"></link>
   <updated>2013-06-28T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Few-Changes</id>
   <content type="html">&lt;p&gt;
    The entire code is now PEP8 compliant maing it a lot easier to view. I found out a plugin for my text editor and all my future code will surely be the same.
&lt;/p&gt;


&lt;p&gt;
    Earlier i wrote about how I was not getting output correctly. The video was not &quot;pretty&quot; and clear. I had given a screenshot for comparison. This was due to a typo in the caps. Now, the video is perfect.
&lt;/p&gt;


&lt;p&gt;
    You can have a look &lt;a href=&quot;/video/record 2013-06-27 201241.data&quot;&gt;here&lt;/a&gt;. This file opens fine with vlc for me.
&lt;/p&gt;


&lt;p&gt;
    I have also made some changes in the code so that the major variables are distinguished from the unimportant ones. This will be helpful especially when debugging code.
&lt;/p&gt;


&lt;p&gt;
    Also as mithro pointed out, the path of executables is now passed as parameter to the Server. This path can also be made an optional argument in case all the executables are in some default location after build and install.
&lt;/p&gt;


&lt;p&gt;
    Also now with everything installed correctly in place, I get warnings both in the gst-switch-srv and gst-switch-ui like:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gst-switch-ui:11231&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: GStreamer-WARNING **: gstpad.c:3677:gst_pad_chain_data_unchecked:&amp;lt;overlay:sink&amp;gt; Got data flow before stream-start event
 
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;gst-switch-ui:11231&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: GStreamer-WARNING **: gstpad.c:3908:gst_pad_push_data:&amp;lt;overlay:src&amp;gt; Got data flow before stream-start event
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;
    Audio is another problem. I ran gst-switch-srv followed by gst-switch-ui. I then added a audio test source on port 4000. This resulted in crashing the gst-switch-ui. The log looks something like this. 
    &lt;script src=&quot;https://gist.github.com/hyades/5884014.js&quot;&gt;&lt;/script&gt;
    It seems that an element &lt;b&gt;monoscope&lt;/b&gt; is missing. However according to &lt;a href=&quot;http://gstreamer.freedesktop.org/documentation/plugins.html&quot;&gt;http://gstreamer.freedesktop.org/documentation/plugins.html&lt;/a&gt; monoscope is a part of gst-plugins-good which is already installed.
&lt;/p&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5&gt;
    Some things to do:
&lt;/h5&gt;


&lt;p&gt;
    There is a need for a error reporting mechanism. This will be utilizing python's Exception class. Presently, I have little knowledge of using this. I am learning how to make use of this Exception class. I have a file &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/exception.py&quot;&gt;exception.py&lt;/a&gt; where I will be defining some common exceptions. These will be raised at appropriate places. Work needs to be done here.
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Speakertrack-working&quot; title=&quot;Previous Post: Speakertrack working&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Connections-and-calling-methods&quot; title=&quot;Next Post: Connections and calling methods&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Speakertrack working</title>
   <link href="http://hyades.github.io/blog/Speakertrack-working"></link>
   <updated>2013-06-25T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Speakertrack-working</id>
   <content type="html">&lt;h2&gt;Gstreamer Uninstalled Script&lt;/h2&gt;


&lt;p&gt;
    I was earlier experiencing many problems installing the gstreamer package for running the speakertrack modules. This task was made easy by the gst-uninstalled script (&lt;a href=&quot;http://cgit.freedesktop.org/gstreamer/gstreamer/plain/scripts/create-uninstalled-setup.sh&quot;&gt;http://cgit.freedesktop.org/gstreamer/gstreamer/plain/scripts/create-uninstalled-setup.sh&lt;/a&gt;). I downloaded the script and ran it. This script clones the gstreamer git modules (gstreamer, gst-plugins-base, gst-plugins-good, gst-plugins-bad, gst-plugins-ugly) into &quot;~/gst/master&quot;. I replaced the gst-plugins-bad module by &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad.git&quot;&gt;Duzy's&lt;/a&gt; one from speakertrack_new branch. The gst-uninstalled script generates a script gst-master at &quot;~/gst&quot;. This script is useful in setting the environment variables correctly. These environment variables are needed to install gstreamer in a custom location so that the plugins know where the gstreamer package was installed.
    Now after doing this I followed the setting up instructions. I built like this:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107999.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
    Doing this builds the gstreamer WITHOUT any build errors. The executables - gst-launch-1.0, gst-inpect-1.0 etc are now located at ~/gst/master/gstreamer/tools/.libs/ or ~/gst/master/gstreamer/tools/ Now, I built the gst-switch in speakertrack branch doing ./autogen and then make and copied the executables from /tools/ - gst-switch-srv, gst-switch-ui and gst-switch-cap to the previous location. Now, running gst-switch-srv and gst-switch-cap worked perfectly with the modules capable of detecting my face :)
&lt;/p&gt;


&lt;p&gt;
    The environment variables can also be set using a script like this:
    &lt;script src=&quot;https://gist.github.com/6176137.js&quot;&gt; &lt;/script&gt;
&lt;/p&gt;


&lt;h2&gt;
    The Code
&lt;/h2&gt;


&lt;p&gt;
    I have made some edits. 
    &lt;ol&gt;
        &lt;li&gt;The path of the executables now needs to be specified. This will be set to some default value later.&lt;/li&gt;
        &lt;li&gt;Earlier if the server was running and while testing I get a python exception. Now since server.end() call is made afterwards, the gst-switch-srv would have kept on running in the background. Running &quot;ps -ef | grep gst-switch-srv&quot; will confirm it. Now, there is a function which can be called like server.brute_end(). This should be added to except portion in the test script like this script:
            &lt;script src=&quot;https://gist.github.com/6176144.js&quot;&gt; &lt;/script&gt;
        &lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Installation-and-Changes-to-Structure&quot; title=&quot;Previous Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Few-Changes&quot; title=&quot;Next Post: Few Changes&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Installation and Changes in Structure</title>
   <link href="http://hyades.github.io/blog/Installation-and-Changes-to-Structure"></link>
   <updated>2013-06-23T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installation-and-Changes-to-Structure</id>
   <content type="html">&lt;h2&gt;
    Installation
&lt;/h2&gt;


&lt;p&gt;
    Installation of the gst-switch from master branch works good. However I am unable to install gst-switch for the speaker-track branch. 
&lt;/p&gt;


&lt;p&gt;
    I am running Quantal and had gstreamer-1.0 installed along with all the plugins (good, bad, ugly) installed through the ubuntu repository. The version of gstreamer was 1.0.6. However, gst-switch requires the latest development version-1.1.1 to be installed. 
&lt;/p&gt;


&lt;p&gt;
    Also I would mention that installing the speakertrack branch of gst-switch does not work out correctly. Firstly the gstreamer plugins were not installed correctly. Also, I did not find the file gst-switch-cap in ~/gst/stage/bin indicating that the installation process actually installed the master branch instead of installing the speakertrack branch.
    &lt;br&gt;
    I have installed all the git packages of gstreamer and its plugin from duzy repo at &lt;a href=&quot;https://github.com/duzy&quot;&gt;https://github.com/duzy&lt;/a&gt;. I installed the following packages:
    &lt;ul&gt;
        &lt;li&gt;gstreamer &lt;a href=&quot;https://github.com/duzy/gstreamer&quot;&gt;https://github.com/duzy/gstreamer&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-base &lt;a href=&quot;https://github.com/duzy/gst-plugins-base&quot;&gt;https://github.com/duzy/gst-plugins-base&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-good &lt;a href=&quot;https://github.com/duzy/gst-plugins-good&quot;&gt;https://github.com/duzy/gst-plugins-good&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-ugly &lt;a href=&quot;https://github.com/duzy/gst-plugins-ugly&quot;&gt;https://github.com/duzy/gst-plugins-ugly&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugin-bad &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad&quot;&gt;https://github.com/duzy/gst-plugins-bad&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    Installing the gst-plugins-bad gives errors. First I try installing from the master branch. I encountered this error while doing make:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       In file included from gstcamerabinpreview.c:31:0:&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       ../../../gst-libs/gst/glib-compat-private.h:84:30: error: unknown type name &amp;#39;&lt;/span&gt;GStaticRecMutex&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: *** [libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    Didn't work out well. So I did a checkout to the speakertrack branch, ran the ./autogen. So I get this now:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
        + running aclocal -I m4 -I common/m4 ...
        + running autoheader ...
        + running autoconf ...
        configure.ac:204: error: possibly undefined macro: AG_GST_CHECK_GST_PLUGINS_LIBAV
              If this token and others are legitimate, please use m4_pattern_allow.
              See the Autoconf documentation.

        autoconf failed
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    I also tried out the speakertrack_new branch, ran the ./autogen and then did make. This time I get this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstdvbsuboverlay_la-gstdvbsuboverlay.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:71:43: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:78:1: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: *** [libgstdvbsuboverlay_la-gstdvbsuboverlay.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;




&lt;h2&gt;
    Code Improvements
&lt;/h2&gt;


&lt;p&gt;
    I have tried to bring some new improvements to the code. I have made a new structure for the server class so that it is extensible. Now, the main Server class is derived from three classes:
    &lt;ol&gt;
        &lt;li&gt;
            BaseServer : Handles the various properties of the Server.
        &lt;/li&gt;
        &lt;li&gt;ServerProcess : Handles all processes created by the Server. These include both controlling the server process as well as the various test sources which can be created to test the server.&lt;/li&gt;
        &lt;li&gt;ServerDBusController : Handles all interactions of the Server with the DBus&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;


&lt;p&gt;
    I have added two files:
    &lt;ol&gt;
        &lt;li&gt;connection.py : This file will have classes which will take care of the various connections which have to be made with the gst-switch-srv over dbus.&lt;/li&gt;
        &lt;li&gt;dbus.py : This file will have classes which will help in interaction with the remote objects present on the gst-switch-srv. This will be utilizing the methods defined in connection.py.&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Installation-and-Changes-in-Structure&quot; title=&quot;Previous Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Speakertrack-working&quot; title=&quot;Next Post: Speakertrack working&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Installation and Changes in Structure</title>
   <link href="http://hyades.github.io/blog/Installation-and-Changes-in-Structure"></link>
   <updated>2013-06-23T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installation-and-Changes-in-Structure</id>
   <content type="html">&lt;h2&gt;
    Installation
&lt;/h2&gt;


&lt;p&gt;
    Installation of the gst-switch from master branch works good. However I am unable to install gst-switch for the speaker-track branch. 
&lt;/p&gt;


&lt;p&gt;
    I am running Quantal and had gstreamer-1.0 installed along with all the plugins (good, bad, ugly) installed through the ubuntu repository. The version of gstreamer was 1.0.6. However, gst-switch requires the latest development version-1.1.1 to be installed. 
&lt;/p&gt;


&lt;p&gt;
    Also I would mention that installing the speakertrack branch of gst-switch does not work out correctly. Firstly the gstreamer plugins were not installed correctly. Also, I did not find the file gst-switch-cap in ~/gst/stage/bin indicating that the installation process actually installed the master branch instead of installing the speakertrack branch.
    &lt;br&gt;
    I have installed all the git packages of gstreamer and its plugin from duzy repo at &lt;a href=&quot;https://github.com/duzy&quot;&gt;https://github.com/duzy&lt;/a&gt;. I installed the following packages:
    &lt;ul&gt;
        &lt;li&gt;gstreamer &lt;a href=&quot;https://github.com/duzy/gstreamer&quot;&gt;https://github.com/duzy/gstreamer&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-base &lt;a href=&quot;https://github.com/duzy/gst-plugins-base&quot;&gt;https://github.com/duzy/gst-plugins-base&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-good &lt;a href=&quot;https://github.com/duzy/gst-plugins-good&quot;&gt;https://github.com/duzy/gst-plugins-good&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-ugly &lt;a href=&quot;https://github.com/duzy/gst-plugins-ugly&quot;&gt;https://github.com/duzy/gst-plugins-ugly&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugin-bad &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad&quot;&gt;https://github.com/duzy/gst-plugins-bad&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    Installing the gst-plugins-bad gives errors. First I try installing from the master branch. I encountered this error while doing make:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       In file included from gstcamerabinpreview.c:31:0:&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       ../../../gst-libs/gst/glib-compat-private.h:84:30: error: unknown type name &amp;#39;&lt;/span&gt;GStaticRecMutex&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: *** [libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    Didn't work out well. So I did a checkout to the speakertrack branch, ran the ./autogen. So I get this now:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
        + running aclocal -I m4 -I common/m4 ...
        + running autoheader ...
        + running autoconf ...
        configure.ac:204: error: possibly undefined macro: AG_GST_CHECK_GST_PLUGINS_LIBAV
              If this token and others are legitimate, please use m4_pattern_allow.
              See the Autoconf documentation.

        autoconf failed
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    I also tried out the speakertrack_new branch, ran the ./autogen and then did make. This time I get this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstdvbsuboverlay_la-gstdvbsuboverlay.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:71:43: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:78:1: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: *** [libgstdvbsuboverlay_la-gstdvbsuboverlay.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;




&lt;h2&gt;
    Code Improvements
&lt;/h2&gt;


&lt;p&gt;
    I have tried to bring some new improvements to the code. I have made a new structure for the server class so that it is extensible. Now, the main Server class is derived from three classes:
    &lt;ol&gt;
        &lt;li&gt;
            BaseServer : Handles the various properties of the Server.
        &lt;/li&gt;
        &lt;li&gt;ServerProcess : Handles all processes created by the Server. These include both controlling the server process as well as the various test sources which can be created to test the server.&lt;/li&gt;
        &lt;li&gt;ServerDBusController : Handles all interactions of the Server with the DBus&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;


&lt;p&gt;
    I have added two files:
    &lt;ol&gt;
        &lt;li&gt;connection.py : This file will have classes which will take care of the various connections which have to be made with the gst-switch-srv over dbus.&lt;/li&gt;
        &lt;li&gt;dbus.py : This file will have classes which will help in interaction with the remote objects present on the gst-switch-srv. This will be utilizing the methods defined in connection.py.&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Changing-PIP-Modes&quot; title=&quot;Previous Post: Changing PIP Modes&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Installation-and-Changes-to-Structure&quot; title=&quot;Next Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Changing PIP Modes</title>
   <link href="http://hyades.github.io/blog/Changing-PIP-Modes"></link>
   <updated>2013-06-19T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Changing-PIP-Modes</id>
   <content type="html">&lt;h2&gt;
    A few changes to the executables firstly
&lt;/h2&gt;


&lt;p&gt;
    I also made a few modifications to the way gst-switch is installed. The process puts a copy of gst-switch-srv and gst-switch-ui at /usr/local/bin. These are from the master branch of gst-switch. But, I needed these executables from the speaker-track branch. So I just copied these to the folder replacing the already placed ones. Thus, now I am able to shoot off gst-switch-srv (from the speaker-track branch) just by doing it in the terminal. 
&lt;/p&gt;


&lt;h2&gt;
    Changing PIPs
&lt;/h2&gt;


&lt;p&gt;
    I have been testing the dbus connection so that it works properly. I concertrated mostly on changing PIP modes. For testing the modules that I made earlier were a LOT of help. It surely saved me the headache of starting gst-switch-srv along with 3 to 4 more processes to feed video input as well as to view the processes. My test script looks simple enough like this
    &lt;script src=&quot;https://gist.github.com/6176103.js&quot;&gt; &lt;/script&gt;
    Here I avoided attaching the gst-switch-ui and directly connected a gst-launch element to the output port.
&lt;/p&gt;




&lt;p&gt;
    In another terminal I am running my other script interacting with the gst-switch-srv module over dbus. I added a few screenshots to show these:
    &lt;br&gt;
    Firstly I start off my testing script which turns on the gst-switch-srv and adds some input test sources to it. The video output of the gst-switch is shown in the gst-launch windows in the left bottom corner. In the left terminal, I am running this script. This is the default output of gst-switch:
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:07.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:07_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
    Now, I run my script which does the work of communicating messages over dbus. Setting Mode 0
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:23.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:23_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
    Now, Mode 1
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:28.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:28_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    Ah, now Mode 2
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:32.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:32_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    Mode 3
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:37.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:37_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    And now back to Mode 0 :D
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:42.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:42_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;h2&gt;
    Things left
&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;p&gt;
                As you can see the sources don't look pretty. This is evident from the first screenshot. This indicates that there is some problem in the pipelines feeding into the gst-switch-srv. For example videotestsrc pattern=10 looks like this:
            &lt;/p&gt;
            &lt;p&gt;
                &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:13.jpg&quot;&gt;&lt;img src=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:13.jpg&quot;&gt;&lt;/a&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;br&gt;
                But actually or ideally it should be looking like this:
                &lt;br&gt;
                &lt;br&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:46.jpg&quot;&gt;&lt;img src=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:46.jpg&quot;&gt;&lt;/a&gt;
            &lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;Make an object structure out of this crude script which turns communicates over the dbus with the gst-switch.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/The-SoC-coding-period-starts-off&quot; title=&quot;Previous Post: The SoC Coding Period Starts Off&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Installation-and-Changes-in-Structure&quot; title=&quot;Next Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>The SoC Coding Period Starts Off</title>
   <link href="http://hyades.github.io/blog/The-SoC-coding-period-starts-off"></link>
   <updated>2013-06-17T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/The-SoC-coding-period-starts-off</id>
   <content type="html">&lt;h2&gt;The Last Few Days&lt;/h2&gt;


&lt;h3&gt;Defining pipelines for test sources&lt;/h3&gt;


&lt;p&gt;I have been revamping the code. The major change was the introduction of a class structure and subsequent code to support pipelines for testing. Any pipeline can be derived using the base pipeline. It supports some basic functionalities. Of course, newer functionalities will be added into the classes which are derived from this class. I made a class for testing a video source which uses a derived and modified version of this base pipeline. This kind of a video source allows simulating a test video source without the overhead of creating a separate shell process.
&lt;/p&gt;


&lt;h3&gt;Looking into the Gio Modules&lt;/h3&gt;


&lt;p&gt;
    I have been also trying to control the gst-switch-srv through the dbus. GDbus or rather Gio is very much capable of handling the situation. It has low-level bindings. DBus on the other hand uses the libdbus library for its communication. Thus, it can be said that GDbus is far more extensible than DBus. However the problem with GDbus is that it lacks a documentation especially for the python modules. I found some good stuff at &lt;a href=&quot;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&quot;&gt;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&lt;/a&gt;. Only problem here is that the documentation for the C functions and not for Python. I tried a bit but was only capable of calling remote methods which get information such has get_encode_port, get_audio_port etc. However calling methods where a parameter had to be specified &lt;strong&gt;crashed&lt;/strong&gt; the server again and again even after repeated attempts. Lack of examples and proper documentation for the Python modules was indeed a hindrance. :( 
&lt;/p&gt;


&lt;p&gt;
    So, I decided to take a deeper look into previously tested DBus module itself thinking that I might be wrong previously in underestimating DBus. DBus has an easy structure where you can define a bus first and then use functions of the bus itself to call methods on the remote object. Gst-switch-srv uses a non-default bus address at &quot;unix:abstract=gstswitch&quot;. Getting my hands dirty I found out that the DBus module internally uses a Connection class for the actual connection to the dbus. This Connection was ultimately derived by the Bus class. The Connection class had an option for providing the &quot;address&quot; of the dbus. I gave the address and as expected it worked :) The gst-switch-srv too confirmed the connection. However, the main problem arose when I tried calling a method. The dbus modules have been implemented such that they seem to be looking for the path at &quot;org.freedesktop.dbus&quot;. However, in reality such a path does not exist in the custom dbus defined by the gst-switch-srv. So, it simply gives an exception stating that it didn't find anything at &quot;org.freedesktop.dbus&quot;. So I was left again with GDbus :) I read the C implementations and tried to make sense with the corrosponding Python classes. Finally, after a day I came across a tool &quot;d-feet&quot;. This is a graphical reader of the dbus. It was probably the first thing that I had tried. It has an option for custom bus addresses. However, providing the address simply didn't work. But the source code of the module was indeed of lots of use. D-feet internally uses the GDbus modules for connections. The implementation of the introspect method here gave a clear idea of what I had to really do!
&lt;/p&gt;


&lt;h2&gt;Today&lt;/h2&gt;


&lt;p&gt;
    Using the d-feet code I tried out a test script. Its over &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/test/dbusConnect2.py&quot;&gt;here&lt;/a&gt;. Using this kind of a script, I can control the PIP mode of the gst-switch-srv. And, it &lt;strong&gt;doesn't&lt;/strong&gt; crash the gst-swicth-srv :D The methods where I get information work perfect as they used to.
&lt;/p&gt;


&lt;h4&gt;Todo&lt;/h4&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;I need to define a class structure for these dbus interactions (the Controller class I talked about in a &lt;a href=&quot;http://hyades.github.io/blog/Beginning-with-some-code/&quot;&gt;previous blog&lt;/a&gt;). 
        &lt;/li&gt;
        &lt;li&gt;
            Although the above testing script is working, there are some cases where does cause some undesired results. These have to be dealt with too.
        &lt;/li&gt;
    &lt;/ul&gt;
    

&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Beginning-with-some-code&quot; title=&quot;Previous Post: Beginning with some code&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Changing-PIP-Modes&quot; title=&quot;Next Post: Changing PIP Modes&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Beginning with some code</title>
   <link href="http://hyades.github.io/blog/Beginning-with-some-code"></link>
   <updated>2013-06-07T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Beginning-with-some-code</id>
   <content type="html">&lt;p&gt;
    Finally getting some fingers moving. I am pushing code at &lt;a href=&quot;https://github.com/hyades/gst-switch/tree/python-api&quot;&gt;here&lt;/a&gt;. Worked out an initial class structure for getting the things working. I am trying to put in little bit of documentation in the function itself.
    &lt;br&gt;
    Currently there are three main classes: Server, UI and Controller.
&lt;/p&gt;


&lt;h4&gt;
    The Server
&lt;/h4&gt;


&lt;p&gt;
    The Server is the interaction module with gst-switch-srv. It is capable of controlling the server. The Server class has a contructor where the user can specify the video port, audio port, control port and the output record file.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gstswitch&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;#importing all modules&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;#simple enough thing, gets the server running with default parameters.&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The server can be started off forking a new process and can safely be killed. Connection to the controller can be made by invoking the Controller class.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;control&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    If a connection does not exist a new connection should be made to the Controller. Now that the server is running, there should be some input to the server! These are the videotestsrc elements of gstreamer. I have added options where the user can select what pattern, height, width etc can be specified. The width of the input stream should be 300 and height should be 200 always, else it might result in some strange unclear patterns coming up. If no pattern is specified a random one gets selected.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newTestVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;#adds a new test source to the gst-switch&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAllTestVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;#displays all test sources feeding in the gst-switch&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The Server and the test sources can be easily killed off by invoking like this. I was earlier facing a problem where the subprocess.Popen() command was making two processes. Now, while killing only one gets killed, whereas the other one was still remaining. I was using an option shell=True as an argument to the Popen command. Changing this option to shell=False allowed me to control the server class more easily as in this case only one process gets created!
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                &lt;span class=&quot;c&quot;&gt;#kills off the server process&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endAllTestVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;#kills off all test videos that have been defined. server.end() takes care of this&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    Currently the video sources are being fed by creating new processes. I will modify these using the Gstreamer 1.0 Python Bindings defined under gi.repository.Gst
&lt;/p&gt;


&lt;h4&gt;
    The UI
&lt;/h4&gt;


&lt;p&gt;
    Now the server is running and the input sources have been specified, we need to view the output that is getting generated. For this the gst-switch-ui can be invoked. Simply the UI is run using:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;ui&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The UI process is ended simply using ui.end() method.
    Once the controller is ready, the compose port can be used to view the output of the gst-switch server directly eliminating the need of the UI.
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Experiments-with-dbus&quot; title=&quot;Previous Post: Experiments with dbus&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/The-SoC-coding-period-starts-off&quot; title=&quot;Next Post: The SoC Coding Period Starts Off&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Experiments with dbus</title>
   <link href="http://hyades.github.io/blog/Experiments-with-dbus"></link>
   <updated>2013-06-01T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Experiments-with-dbus</id>
   <content type="html">&lt;p&gt;
    Messing around with the Dbus Python API. The Gst-Switch controller seems to be using a non-default bus address (unix:abstract=gstswitch). Trying to connect to the given object path. I will have to find some new ways to connect to the object.
&lt;/p&gt;


&lt;p&gt;
    Currently using code like this for testing:
&lt;/p&gt;


&lt;p&gt;
&lt;script src=&quot;https://gist.github.com/6176055.js&quot;&gt; &lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    When I try to connect, getting errors like:
&lt;/p&gt;


&lt;p&gt;
    &lt;script src=&quot;https://gist.github.com/6176075.js&quot;&gt; &lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    Will have to use something more than using &quot;dbus.SessionBus()&quot;. The dbus python documentation says they will include connection to non-default address in a later section!. Since it is supported in the latest version, trying to get a way of getting this working...
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/hello-world&quot; title=&quot;Previous Post: hello-world&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;          &lt;a href=&quot;/blog/Beginning-with-some-code&quot; title=&quot;Next Post: Beginning with some code&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>hello-world</title>
   <link href="http://hyades.github.io/blog/hello-world"></link>
   <updated>2013-05-29T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/hello-world</id>
   <content type="html">&lt;h2&gt;
    Finally A Blog!!
&lt;/h2&gt;


&lt;p&gt;
    Powered by Jaykell and Twitter Bootstrap
    
&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Gsoc-2k13&quot; title=&quot;Previous Post: Gsoc-2k13&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Experiments-with-dbus&quot; title=&quot;Next Post: Experiments with dbus&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Gsoc-2k13</title>
   <link href="http://hyades.github.io/blog/Gsoc-2k13"></link>
   <updated>2013-05-29T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Gsoc-2k13</id>
   <content type="html">&lt;h2&gt;Gsoc 2013&lt;/h2&gt;


&lt;p&gt;Ah.. Project for GSOC 2013 gets accepted at timvideos.us.The project aims at developing a python API for GST-Switch so that it can be easily tweaked for testing purposes and user has more control over it.&lt;/p&gt;


&lt;p&gt;
    More information at  &lt;a href=&quot;http://www.google-melange.com/gsoc/project/google/gsoc2013/hyades/36001&quot;&gt;http://www.google-melange.com/gsoc/project/google/gsoc2013/hyades/36001&lt;/a&gt; 
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt;      &lt;a href=&quot;/blog/hello-world&quot; title=&quot;Next Post: hello-world&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 
</feed>