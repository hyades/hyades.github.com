<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Aayush Ahuja</title>
 <link href="http://hyades.github.io/atom.xml" rel="self"></link>
 <link href="http://hyades.github.io/"></link>
 <updated>2013-06-25T15:03:43+05:30</updated>
 <id>http://hyades.github.com</id>
 <author>
   <name>Aayush Ahuja</name>
 </author>
 
 
 <entry>
   <title>Speakertrack working</title>
   <link href="http://hyades.github.io/blog/Speakertrack-working"></link>
   <updated>2013-06-25T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Speakertrack-working</id>
   <content type="html">&lt;h2&gt;Gstreamer Uninstalled Script&lt;/h2&gt;


&lt;p&gt;
    I was earlier experiencing many problems installing the gstreamer package for running the speakertrack modules. This task was made easy by the gst-uninstalled script (&lt;a href=&quot;http://cgit.freedesktop.org/gstreamer/gstreamer/tree/scripts/gst-uninstalled&quot;&gt;http://cgit.freedesktop.org/gstreamer/gstreamer/tree/scripts/gst-uninstalled&lt;/a&gt;). I downloaded the script and ran it. This script clones the gstreamer git modules (gstreamer, gst-plugins-base, gst-plugins-good, gst-plugins-bad, gst-plugins-ugly) into &quot;~/gst/master&quot;. I replaced the gst-plugins-bad module by Duzy's one from speakertrack_new branch. The gst-uninstalled script generates a script gst-master at &quot;~/gst&quot;. This script is useful in setting the environment variables correctly. These environment variables are needed to install gstreamer in a custom location so that the plugins know where the gstreamer package was installed.
    Now after doing this I followed the setting up instructions. I built like this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/gst/
./gst-master
&lt;span class=&quot;c&quot;&gt;# this sets up the environment and I end up in ~/gst/master/&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;gstreamer
./autogen
&lt;span class=&quot;c&quot;&gt;# no prefix is required&lt;/span&gt;
make
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../gst-plugins-base
./autogen
make
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../gst-plugins-good
./autogen
make
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../gst-plugins-bad
./autogen
make
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    Doing this builds the gstreamer WITHOUT any build errors. The executables - gst-launch-1.0, gst-inpect-1.0 etc are now located at ~/gst/master/gstreamer/tools/.libs. Now, I built the gst-switch in speakertrack branch doing ./autogen and then make and copied the executables from /tools/ - gst-switch-srv, gst-switch-ui and gst-switch-cap to the previous location. Now, running gst-switch-srv and gst-switch-cap worked perfectly with the modules capable of detecting my face :)
&lt;/p&gt;


&lt;p&gt;
    The environment variables can also be set using a script like this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$HOME/releases/prefix&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PKG_CONFIG_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$PREFIX/lib:$LD_LIBRARY_PATH&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$PREFIX/bin:$PATH&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GST_REGISTRY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$PREFIX/gstreamer-registry.dat&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Release environment for prefix $PREFIX set up&amp;quot;&lt;/span&gt;
bash
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;h2&gt;
    The Code
&lt;/h2&gt;


&lt;p&gt;
    I have made some edits. 
    &lt;ol&gt;
        &lt;li&gt;The path of the executables now needs to be specified. This will be set to some default value later.&lt;/li&gt;
        &lt;li&gt;Earlier if the server was running and while testing I get a python exception. Now since server.end() call is made afterwards, the gst-switch-srv would have kept on running in the background. Running &quot;ps -ef | grep gst-switch-srv&quot; will confirm it. Now, there is a function which can be called like server.brute_end(). This should be added to except portion in the test script like this script:
            
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gstswitch&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# all executables (gst-launch-1.0, gst-switch-srv, gst-switch-ui, gst-switch-cap) at this path&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/home/hyades/gst/master/gstreamer/tools/.libs/&amp;#39;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# launches the server default parameters&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# connects a gstreamer module to view the output of the gst-switch-srv&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;gst-launch-1.0 tcpclientsrc port=3001 ! gdpdepay ! autovideosink&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;bufsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# adding two test video sources&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_test_video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_test_video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clockoverlay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# waiting till user ends the server&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# to kill off all processes that are created by the program&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brute_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

            
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

        &lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Installation-and-Changes-to-Structure&quot; title=&quot;Previous Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;         &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Installation and Changes in Structure</title>
   <link href="http://hyades.github.io/blog/Installation-and-Changes-to-Structure"></link>
   <updated>2013-06-23T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installation-and-Changes-to-Structure</id>
   <content type="html">&lt;h2&gt;
    Installation
&lt;/h2&gt;


&lt;p&gt;
    Installation of the gst-switch from master branch works good. However I am unable to install gst-switch for the speaker-track branch. 
&lt;/p&gt;


&lt;p&gt;
    I am running Quantal and had gstreamer-1.0 installed along with all the plugins (good, bad, ugly) installed through the ubuntu repository. The version of gstreamer was 1.0.6. However, gst-switch requires the latest development version-1.1.1 to be installed. 
&lt;/p&gt;


&lt;p&gt;
    Also I would mention that installing the speakertrack branch of gst-switch does not work out correctly. Firstly the gstreamer plugins were not installed correctly. Also, I did not find the file gst-switch-cap in ~/gst/stage/bin indicating that the installation process actually installed the master branch instead of installing the speakertrack branch.
    &lt;br&gt;
    I have installed all the git packages of gstreamer and its plugin from duzy repo at &lt;a href=&quot;https://github.com/duzy&quot;&gt;https://github.com/duzy&lt;/a&gt;. I installed the following packages:
    &lt;ul&gt;
        &lt;li&gt;gstreamer &lt;a href=&quot;https://github.com/duzy/gstreamer&quot;&gt;https://github.com/duzy/gstreamer&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-base &lt;a href=&quot;https://github.com/duzy/gst-plugins-base&quot;&gt;https://github.com/duzy/gst-plugins-base&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-good &lt;a href=&quot;https://github.com/duzy/gst-plugins-good&quot;&gt;https://github.com/duzy/gst-plugins-good&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-ugly &lt;a href=&quot;https://github.com/duzy/gst-plugins-ugly&quot;&gt;https://github.com/duzy/gst-plugins-ugly&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugin-bad &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad&quot;&gt;https://github.com/duzy/gst-plugins-bad&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    Installing the gst-plugins-bad gives errors. First I try installing from the master branch. I encountered this error while doing make:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       In file included from gstcamerabinpreview.c:31:0:&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       ../../../gst-libs/gst/glib-compat-private.h:84:30: error: unknown type name &amp;#39;&lt;/span&gt;GStaticRecMutex&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: *** [libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    Didn't work out well. So I did a checkout to the speakertrack branch, ran the ./autogen. So I get this now:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
        + running aclocal -I m4 -I common/m4 ...
        + running autoheader ...
        + running autoconf ...
        configure.ac:204: error: possibly undefined macro: AG_GST_CHECK_GST_PLUGINS_LIBAV
              If this token and others are legitimate, please use m4_pattern_allow.
              See the Autoconf documentation.

        autoconf failed
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    I also tried out the speakertrack_new branch, ran the ./autogen and then did make. This time I get this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstdvbsuboverlay_la-gstdvbsuboverlay.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:71:43: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:78:1: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: *** [libgstdvbsuboverlay_la-gstdvbsuboverlay.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;




&lt;h2&gt;
    Code Improvements
&lt;/h2&gt;


&lt;p&gt;
    I have tried to bring some new improvements to the code. I have made a new structure for the server class so that it is extensible. Now, the main Server class is derived from three classes:
    &lt;ol&gt;
        &lt;li&gt;
            BaseServer : Handles the various properties of the Server.
        &lt;/li&gt;
        &lt;li&gt;ServerProcess : Handles all processes created by the Server. These include both controlling the server process as well as the various test sources which can be created to test the server.&lt;/li&gt;
        &lt;li&gt;ServerDBusController : Handles all interactions of the Server with the DBus&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;


&lt;p&gt;
    I have added two files:
    &lt;ol&gt;
        &lt;li&gt;connection.py : This file will have classes which will take care of the various connections which have to be made with the gst-switch-srv over dbus.&lt;/li&gt;
        &lt;li&gt;dbus.py : This file will have classes which will help in interaction with the remote objects present on the gst-switch-srv. This will be utilizing the methods defined in connection.py.&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Installation-and-Changes-in-Structure&quot; title=&quot;Previous Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Speakertrack-working&quot; title=&quot;Next Post: Speakertrack working&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Installation and Changes in Structure</title>
   <link href="http://hyades.github.io/blog/Installation-and-Changes-in-Structure"></link>
   <updated>2013-06-23T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installation-and-Changes-in-Structure</id>
   <content type="html">&lt;h2&gt;
    Installation
&lt;/h2&gt;


&lt;p&gt;
    Installation of the gst-switch from master branch works good. However I am unable to install gst-switch for the speaker-track branch. 
&lt;/p&gt;


&lt;p&gt;
    I am running Quantal and had gstreamer-1.0 installed along with all the plugins (good, bad, ugly) installed through the ubuntu repository. The version of gstreamer was 1.0.6. However, gst-switch requires the latest development version-1.1.1 to be installed. 
&lt;/p&gt;


&lt;p&gt;
    Also I would mention that installing the speakertrack branch of gst-switch does not work out correctly. Firstly the gstreamer plugins were not installed correctly. Also, I did not find the file gst-switch-cap in ~/gst/stage/bin indicating that the installation process actually installed the master branch instead of installing the speakertrack branch.
    &lt;br&gt;
    I have installed all the git packages of gstreamer and its plugin from duzy repo at &lt;a href=&quot;https://github.com/duzy&quot;&gt;https://github.com/duzy&lt;/a&gt;. I installed the following packages:
    &lt;ul&gt;
        &lt;li&gt;gstreamer &lt;a href=&quot;https://github.com/duzy/gstreamer&quot;&gt;https://github.com/duzy/gstreamer&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-base &lt;a href=&quot;https://github.com/duzy/gst-plugins-base&quot;&gt;https://github.com/duzy/gst-plugins-base&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-good &lt;a href=&quot;https://github.com/duzy/gst-plugins-good&quot;&gt;https://github.com/duzy/gst-plugins-good&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-ugly &lt;a href=&quot;https://github.com/duzy/gst-plugins-ugly&quot;&gt;https://github.com/duzy/gst-plugins-ugly&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugin-bad &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad&quot;&gt;https://github.com/duzy/gst-plugins-bad&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    Installing the gst-plugins-bad gives errors. First I try installing from the master branch. I encountered this error while doing make:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       In file included from gstcamerabinpreview.c:31:0:&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       ../../../gst-libs/gst/glib-compat-private.h:84:30: error: unknown type name &amp;#39;&lt;/span&gt;GStaticRecMutex&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: *** [libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[4]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    Didn't work out well. So I did a checkout to the speakertrack branch, ran the ./autogen. So I get this now:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
        + running aclocal -I m4 -I common/m4 ...
        + running autoheader ...
        + running autoconf ...
        configure.ac:204: error: possibly undefined macro: AG_GST_CHECK_GST_PLUGINS_LIBAV
              If this token and others are legitimate, please use m4_pattern_allow.
              See the Autoconf documentation.

        autoconf failed
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    I also tried out the speakertrack_new branch, ran the ./autogen and then did make. This time I get this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     make&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Entering directory &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;         CC     libgstdvbsuboverlay_la-gstdvbsuboverlay.lo&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:71:43: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       gstdvbsuboverlay.c:78:1: error: expected &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; before &amp;#39;&lt;/span&gt;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: *** [libgstdvbsuboverlay_la-gstdvbsuboverlay.lo] Error 1&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;       make[3]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;




&lt;h2&gt;
    Code Improvements
&lt;/h2&gt;


&lt;p&gt;
    I have tried to bring some new improvements to the code. I have made a new structure for the server class so that it is extensible. Now, the main Server class is derived from three classes:
    &lt;ol&gt;
        &lt;li&gt;
            BaseServer : Handles the various properties of the Server.
        &lt;/li&gt;
        &lt;li&gt;ServerProcess : Handles all processes created by the Server. These include both controlling the server process as well as the various test sources which can be created to test the server.&lt;/li&gt;
        &lt;li&gt;ServerDBusController : Handles all interactions of the Server with the DBus&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;


&lt;p&gt;
    I have added two files:
    &lt;ol&gt;
        &lt;li&gt;connection.py : This file will have classes which will take care of the various connections which have to be made with the gst-switch-srv over dbus.&lt;/li&gt;
        &lt;li&gt;dbus.py : This file will have classes which will help in interaction with the remote objects present on the gst-switch-srv. This will be utilizing the methods defined in connection.py.&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Changing-PIP-Modes&quot; title=&quot;Previous Post: Changing PIP Modes&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Installation-and-Changes-to-Structure&quot; title=&quot;Next Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Changing PIP Modes</title>
   <link href="http://hyades.github.io/blog/Changing-PIP-Modes"></link>
   <updated>2013-06-19T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Changing-PIP-Modes</id>
   <content type="html">&lt;h2&gt;
    A few changes to the executables firstly
&lt;/h2&gt;


&lt;p&gt;
    I also made a few modifications to the way gst-switch is installed. The process puts a copy of gst-switch-srv and gst-switch-ui at /usr/local/bin. These are from the master branch of gst-switch. But, I needed these executables from the speaker-track branch. So I just copied these to the folder replacing the already placed ones. Thus, now I am able to shoot off gst-switch-srv (from the speaker-track branch) just by doing it in the terminal. 
&lt;/p&gt;


&lt;h2&gt;
    Changing PIPs
&lt;/h2&gt;


&lt;p&gt;
    I have been testing the dbus connection so that it works properly. I concertrated mostly on changing PIP modes. For testing the modules that I made earlier were a LOT of help. It surely saved me the headache of starting gst-switch-srv along with 3 to 4 more processes to feed video input as well as to view the processes. My test script looks simple enough like this
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gstswitch&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#starting the server&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;gst-launch-1.0 tcpclientsrc port=3001 ! gdpdepay ! autovideosink&amp;quot;&lt;/span&gt; 
        &lt;span class=&quot;c&quot;&gt;#calling a process to view output of the gst-switch-srv without using gst-switch-ui&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Popen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PIPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bufsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_test_video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#adding a test video input - random pattern&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_test_video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clockoverlay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#adding a test video-input - random pattern with a clock overlay&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#just waiting for user to kill off the server&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#killing the output which is giving output&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#killing off the server and the test video inputs&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    Here I avoided attaching the gst-switch-ui and directly connected a gst-launch element to the output port.
&lt;/p&gt;




&lt;p&gt;
    In another terminal I am running my other script interacting with the gst-switch-srv module over dbus. I added a few screenshots to show these:
    &lt;br&gt;
    Firstly I start off my testing script which turns on the gst-switch-srv and adds some input test sources to it. The video output of the gst-switch is shown in the gst-launch windows in the left bottom corner. In the left terminal, I am running this script. This is the default output of gst-switch:
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:07.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:07_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
    Now, I run my script which does the work of communicating messages over dbus. Setting Mode 0
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:23.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:23_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
    Now, Mode 1
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:28.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:28_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    Ah, now Mode 2
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:32.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:32_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    Mode 3
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:37.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:37_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    And now back to Mode 0 :D
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:42.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:42_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;h2&gt;
    Things left
&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;p&gt;
                As you can see the sources don't look pretty. This is evident from the first screenshot. This indicates that there is some problem in the pipelines feeding into the gst-switch-srv. For example videotestsrc pattern=10 looks like this:
            &lt;/p&gt;
            &lt;p&gt;
                &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:13.jpg&quot;&gt;&lt;img src=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:13.jpg&quot;&gt;&lt;/a&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;br&gt;
                But actually or ideally it should be looking like this:
                &lt;br&gt;
                &lt;br&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:46.jpg&quot;&gt;&lt;img src=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:46.jpg&quot;&gt;&lt;/a&gt;
            &lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;Make an object structure out of this crude script which turns communicates over the dbus with the gst-switch.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/The-SoC-coding-period-starts-off&quot; title=&quot;Previous Post: The SoC Coding Period Starts Off&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Installation-and-Changes-in-Structure&quot; title=&quot;Next Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>The SoC Coding Period Starts Off</title>
   <link href="http://hyades.github.io/blog/The-SoC-coding-period-starts-off"></link>
   <updated>2013-06-17T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/The-SoC-coding-period-starts-off</id>
   <content type="html">&lt;h2&gt;The Last Few Days&lt;/h2&gt;


&lt;h3&gt;Defining pipelines for test sources&lt;/h3&gt;


&lt;p&gt;I have been revamping the code. The major change was the introduction of a class structure and subsequent code to support pipelines for testing. Any pipeline can be derived using the base pipeline. It supports some basic functionalities. Of course, newer functionalities will be added into the classes which are derived from this class. I made a class for testing a video source which uses a derived and modified version of this base pipeline. This kind of a video source allows simulating a test video source without the overhead of creating a separate shell process.
&lt;/p&gt;


&lt;h3&gt;Looking into the Gio Modules&lt;/h3&gt;


&lt;p&gt;
    I have been also trying to control the gst-switch-srv through the dbus. GDbus or rather Gio is very much capable of handling the situation. It has low-level bindings. DBus on the other hand uses the libdbus library for its communication. Thus, it can be said that GDbus is far more extensible than DBus. However the problem with GDbus is that it lacks a documentation especially for the python modules. I found some good stuff at &lt;a href=&quot;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&quot;&gt;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&lt;/a&gt;. Only problem here is that the documentation for the C functions and not for Python. I tried a bit but was only capable of calling remote methods which get information such has get_encode_port, get_audio_port etc. However calling methods where a parameter had to be specified &lt;strong&gt;crashed&lt;/strong&gt; the server again and again even after repeated attempts. Lack of examples and proper documentation for the Python modules was indeed a hindrance. :( 
&lt;/p&gt;


&lt;p&gt;
    So, I decided to take a deeper look into previously tested DBus module itself thinking that I might be wrong previously in underestimating DBus. DBus has an easy structure where you can define a bus first and then use functions of the bus itself to call methods on the remote object. Gst-switch-srv uses a non-default bus address at &quot;unix:abstract=gstswitch&quot;. Getting my hands dirty I found out that the DBus module internally uses a Connection class for the actual connection to the dbus. This Connection was ultimately derived by the Bus class. The Connection class had an option for providing the &quot;address&quot; of the dbus. I gave the address and as expected it worked :) The gst-switch-srv too confirmed the connection. However, the main problem arose when I tried calling a method. The dbus modules have been implemented such that they seem to be looking for the path at &quot;org.freedesktop.dbus&quot;. However, in reality such a path does not exist in the custom dbus defined by the gst-switch-srv. So, it simply gives an exception stating that it didn't find anything at &quot;org.freedesktop.dbus&quot;. So I was left again with GDbus :) I read the C implementations and tried to make sense with the corrosponding Python classes. Finally, after a day I came across a tool &quot;d-feet&quot;. This is a graphical reader of the dbus. It was probably the first thing that I had tried. It has an option for custom bus addresses. However, providing the address simply didn't work. But the source code of the module was indeed of lots of use. D-feet internally uses the GDbus modules for connections. The implementation of the introspect method here gave a clear idea of what I had to really do!
&lt;/p&gt;


&lt;h2&gt;Today&lt;/h2&gt;


&lt;p&gt;
    Using the d-feet code I tried out a test script. Its over &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/test/dbusConnect2.py&quot;&gt;here&lt;/a&gt;. Using this kind of a script, I can control the PIP mode of the gst-switch-srv. And, it &lt;strong&gt;doesn't&lt;/strong&gt; crash the gst-swicth-srv :D The methods where I get information work perfect as they used to.
&lt;/p&gt;


&lt;h4&gt;Todo&lt;/h4&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;I need to define a class structure for these dbus interactions (the Controller class I talked about in a &lt;a href=&quot;http://hyades.github.io/blog/Beginning-with-some-code/&quot;&gt;previous blog&lt;/a&gt;). 
        &lt;/li&gt;
        &lt;li&gt;
            Although the above testing script is working, there are some cases where does cause some undesired results. These have to be dealt with too.
        &lt;/li&gt;
    &lt;/ul&gt;
    

&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Beginning-with-some-code&quot; title=&quot;Previous Post: Beginning with some code&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Changing-PIP-Modes&quot; title=&quot;Next Post: Changing PIP Modes&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Beginning with some code</title>
   <link href="http://hyades.github.io/blog/Beginning-with-some-code"></link>
   <updated>2013-06-07T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Beginning-with-some-code</id>
   <content type="html">&lt;p&gt;
    Finally getting some fingers moving. I am pushing code at &lt;a href=&quot;https://github.com/hyades/gst-switch/tree/python-api&quot;&gt;here&lt;/a&gt;. Worked out an initial class structure for getting the things working. I am trying to put in little bit of documentation in the function itself.
    &lt;br&gt;
    Currently there are three main classes: Server, UI and Controller.
&lt;/p&gt;


&lt;h4&gt;
    The Server
&lt;/h4&gt;


&lt;p&gt;
    The Server is the interaction module with gst-switch-srv. It is capable of controlling the server. The Server class has a contructor where the user can specify the video port, audio port, control port and the output record file.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gstswitch&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;#importing all modules&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;           &lt;span class=&quot;c&quot;&gt;#simple enough thing, gets the server running with default parameters.&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The server can be started off forking a new process and can safely be killed. Connection to the controller can be made by invoking the Controller class.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;control&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    If a connection does not exist a new connection should be made to the Controller. Now that the server is running, there should be some input to the server! These are the videotestsrc elements of gstreamer. I have added options where the user can select what pattern, height, width etc can be specified. The width of the input stream should be 300 and height should be 200 always, else it might result in some strange unclear patterns coming up. If no pattern is specified a random one gets selected.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newTestVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;#adds a new test source to the gst-switch&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getAllTestVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;#displays all test sources feeding in the gst-switch&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The Server and the test sources can be easily killed off by invoking like this. I was earlier facing a problem where the subprocess.Popen() command was making two processes. Now, while killing only one gets killed, whereas the other one was still remaining. I was using an option shell=True as an argument to the Popen command. Changing this option to shell=False allowed me to control the server class more easily as in this case only one process gets created!
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                &lt;span class=&quot;c&quot;&gt;#kills off the server process&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endAllTestVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;#kills off all test videos that have been defined. server.end() takes care of this&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    Currently the video sources are being fed by creating new processes. I will modify these using the Gstreamer 1.0 Python Bindings defined under gi.repository.Gst
&lt;/p&gt;


&lt;h4&gt;
    The UI
&lt;/h4&gt;


&lt;p&gt;
    Now the server is running and the input sources have been specified, we need to view the output that is getting generated. For this the gst-switch-ui can be invoked. Simply the UI is run using:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;n&quot;&gt;ui&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The UI process is ended simply using ui.end() method.
    Once the controller is ready, the compose port can be used to view the output of the gst-switch server directly eliminating the need of the UI.
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Experiments-with-dbus&quot; title=&quot;Previous Post: Experiments with dbus&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/The-SoC-coding-period-starts-off&quot; title=&quot;Next Post: The SoC Coding Period Starts Off&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Experiments with dbus</title>
   <link href="http://hyades.github.io/blog/Experiments-with-dbus"></link>
   <updated>2013-06-01T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Experiments-with-dbus</id>
   <content type="html">&lt;p&gt;Messing around with the dbus python API. The GST-Switch controller seems to be using a non-default bus address (unix:abstract=gstswitch). Trying to connect to the given object path. I will have to find some new ways to connect to the object.&lt;/p&gt;


&lt;p&gt;
    Currently using code like this for testing:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;       &lt;span class=&quot;c&quot;&gt;#!usr/bin/env python&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;dbus&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;dbus.mainloop.glib&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;gobject&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gobject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MainLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SessionBus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;info.duzy.gst_switch.SwitchControllerInterface&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/info/duzy/gst_switch/SwitchController&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Introspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;DBUS_SESSION_BUS_ADDRESS&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;unix:abstract=gstswitch&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;dbus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mainloop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DBusGMainLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_as_default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    When I try to connect getting errors like:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;     Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
      File &lt;span class=&quot;s2&quot;&gt;&amp;quot;dbusConnect.py&amp;quot;&lt;/span&gt;, line 18, in &amp;lt;module&amp;gt;
        main&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      File &lt;span class=&quot;s2&quot;&gt;&amp;quot;dbusConnect.py&amp;quot;&lt;/span&gt;, line 10, in main
        &lt;span class=&quot;nv&quot;&gt;bus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; dbus.SessionBus&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      File &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/lib/python2.7/dist-packages/dbus/_dbus.py&amp;quot;&lt;/span&gt;, line 211, in __new__
        &lt;span class=&quot;nv&quot;&gt;mainloop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mainloop&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/lib/python2.7/dist-packages/dbus/_dbus.py&amp;quot;&lt;/span&gt;, line 100, in __new__
        &lt;span class=&quot;nv&quot;&gt;bus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; BusConnection.__new__&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;subclass, bus_type, &lt;span class=&quot;nv&quot;&gt;mainloop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mainloop&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      File &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/lib/python2.7/dist-packages/dbus/bus.py&amp;quot;&lt;/span&gt;, line 122, in __new__
        &lt;span class=&quot;nv&quot;&gt;bus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; cls._new_for_bus&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;address_or_type, &lt;span class=&quot;nv&quot;&gt;mainloop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mainloop&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    dbus.exceptions.DBusException: org.freedesktop.DBus.Error.UnknownMethod: No such interface &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;org.freedesktop.DBus&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt; on object at path /org/freedesktop/DBus
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    Will have to use something more than using &quot;dbus.SessionBus()&quot;. The dbus python documentation says they will include connection to non-default address in a later section!. Since it is supported in the latest version, trying to get a way of getting this working...
&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/hello-world&quot; title=&quot;Previous Post: hello-world&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Beginning-with-some-code&quot; title=&quot;Next Post: Beginning with some code&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>hello-world</title>
   <link href="http://hyades.github.io/blog/hello-world"></link>
   <updated>2013-05-29T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/hello-world</id>
   <content type="html">&lt;h2&gt;
    Finally A Blog!!
&lt;/h2&gt;


&lt;p&gt;
    Powered by Jaykell and Twitter Bootstrap
    
&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Gsoc-2k13&quot; title=&quot;Previous Post: Gsoc-2k13&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Experiments-with-dbus&quot; title=&quot;Next Post: Experiments with dbus&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Gsoc-2k13</title>
   <link href="http://hyades.github.io/blog/Gsoc-2k13"></link>
   <updated>2013-05-29T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Gsoc-2k13</id>
   <content type="html">&lt;h2&gt;Gsoc 2013&lt;/h2&gt;


&lt;p&gt;Ah.. Project for GSOC 2013 gets accepted at timvideos.us.The project aims at developing a python API for GST-Switch so that it can be easily tweaked for testing purposes and user has more control over it.&lt;/p&gt;


&lt;p&gt;
    More information at  &lt;a href=&quot;http://www.google-melange.com/gsoc/project/google/gsoc2013/hyades/36001&quot;&gt;http://www.google-melange.com/gsoc/project/google/gsoc2013/hyades/36001&lt;/a&gt; 
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt;      &lt;a href=&quot;/blog/hello-world&quot; title=&quot;Next Post: hello-world&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = 'aayushahuja'; // required: replace example with your forum shortname
            
            
            /* * * DON'T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 
</feed>