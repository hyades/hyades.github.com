<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Aayush Ahuja</title>
 <link href="http://hyades.github.io/atom.xml" rel="self"></link>
 <link href="http://hyades.github.io/"></link>
 <updated>2014-09-25T18:25:25+05:30</updated>
 <id>http://hyades.github.com</id>
 <author>
   <name>Aayush Ahuja</name>
 </author>
 
 
 <entry>
   <title>Problems building gst-switch</title>
   <link href="http://hyades.github.io/blog/Problems-building-gst-switch"></link>
   <updated>2013-09-12T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Problems-building-gst-switch</id>
   <content type="html">&lt;h2&gt;The Build Process I follow&lt;/h2&gt;


&lt;p&gt;
    Gst-switch requires:
&lt;/p&gt;


&lt;p&gt;&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;gstreamer 6c11da1&lt;/li&gt;
        &lt;li&gt;gst-plugins-base a8df760&lt;/li&gt;
        &lt;li&gt;gst-plugins-good d14d4c4&lt;/li&gt;
        &lt;li&gt;gst-plugins-ugly  68985ba&lt;/li&gt;
        &lt;li&gt;gst-plugins-bad from https://github.com/duzy/gst-plugins-bad checkout to speakertrack_new branch&lt;/li&gt;
    &lt;/ul&gt;
&lt;p&gt;
    Along with some other dependencies.
&lt;/p&gt;
&lt;p&gt;
    The build runs on travis using the config file &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/master/.travis.yml&quot;&gt;.travis.yml&lt;/a&gt;. To install gst-switch this file runs the script &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/master/.travis-setup.sh&quot;&gt;.travis-setup.sh&lt;/a&gt;. This file contains the list of dependencies. An almost same script which can be used for the process on non-travis environments is &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/master/scripts/install.sh&quot;&gt;install.sh&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;Problems:&lt;/h2&gt;
&lt;p&gt;
    The installation is completed without any errors. The latest travis log is &lt;a href=&quot;https://s3.amazonaws.com/archive.travis-ci.org/jobs/11281421/log.txt&quot;&gt;here&lt;/a&gt;. The problem comes when gst-switch-srv is run. The output on running it is:
&lt;pre&gt;
&lt;code&gt;
./tools/gstswitchserver.c:130:info: gst_switch_server init 0x1683000
./tools/gstswitchserver.c:1523:info: Compose sink to 3001, 3002
./tools/gstcomposite.c:88:info: gst_composite init 0x1686060
./tools/gstcomposite.c:155:warning: ignore changing mode in transition
./tools/gstworker.c:270:error: missing: faac
./tools/gstworker.c:784:error: recorder: failed to create new pipeline
./tools/gstswitchserver.c:712:info: Listening on localhost (::1:5000)
./tools/gstswitchcontroller.c:484:info: Controller is listening at: unix:abstract=gstswitch
./tools/gstswitchserver.c:712:info: Listening on localhost (::1:3000)
./tools/gstswitchserver.c:712:info: Listening on localhost (::1:4000)
./tools/gstswitchcontroller.c:626:warning: set_compose_port: no connections
online: composite @1780530214768
./tools/gstswitchcontroller.c:626:warning: new_mode_online: no connections
./tools/gstswitchcontroller.c:449:info: authorize: GCredentials:linux-ucred:pid=25145,uid=1000,gid=1000
./tools/gstswitchcontroller.c:327:warning: close: Underlying GIOStream returned 0 bytes on an async read
./tools/gstswitchcontroller.c:337:info: closed: 0x16ad5c0, 1 (0 uis)
&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;This suggests that &lt;code&gt;faac&lt;/code&gt; is missing. However on closer look at the log, it can also be seen that whiule doing &lt;code&gt;./autogen.sh&lt;/code&gt; in gst-plugins-bad, the configure lists faac:
&lt;pre&gt;
&lt;code&gt;
configure: *** Plug-ins with dependencies that will be built:
    bz2
    curl
    decklink
    dvb
    faac
    faad
    fbdevsink
    hls
    mfc
    mpeg2enc
    mplex
    opencv
    rsvg
    rtmp
    shm
&lt;/code&gt;
&lt;/pre&gt;
Also &lt;code&gt;libfaac-dev&lt;/code&gt;  is installed on the system by the script.
&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;row&quot;&gt; &lt;br/&gt;
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Improvements&quot; title=&quot;Previous Post: Improvements&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;       &lt;/p&gt;&lt;br/&gt;
    &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;row&quot;&gt; &lt;br/&gt;
    &lt;div class=&quot;span9 columns&quot;&gt;  &lt;br/&gt;
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt;
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /&lt;em&gt; * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * &lt;/em&gt;/
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        /* * * DON&#39;T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
            dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
            (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
        })();
    &amp;lt;/script&amp;gt;
    &amp;lt;noscript&amp;gt;Please enable JavaScript to view the &amp;lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;
    &amp;lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&amp;gt;blog comments powered by &amp;lt;span class=&quot;logo-disqus&quot;&amp;gt;Disqus&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;!-- Twitter --&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;!-- Google + --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;
&lt;!-- Written by hyades --&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Improvements</title>
   <link href="http://hyades.github.io/blog/Improvements"></link>
   <updated>2013-09-09T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Improvements</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;Performance Tests for changing composite mode: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f51bed9981b0a527ee15cb3cd597c58fe4063a15&quot;&gt;f51bed9981b0a527ee15cb3cd597c58fe4063a15&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removed html output pylintrc files: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8ffb62ad58a40c3052c2e539b0ae91b7ce0c838b&quot;&gt;8ffb62ad58a40c3052c2e539b0ae91b7ce0c838b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;performance tests for get_preview_ports: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9038c5d0b26682526c93a5877a1e691530a49311&quot;&gt;9038c5d0b26682526c93a5877a1e691530a49311&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Performance Tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d48a3f6e70ca26d937db284cdb2313e4b0ec951a&quot;&gt;d48a3f6e70ca26d937db284cdb2313e4b0ec951a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changed hooks: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/342e7d486039d22d6ee08c4bbd847d5aa30ae64a&quot;&gt;342e7d486039d22d6ee08c4bbd847d5aa30ae64a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changed hooks: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ab8d1f8888a1fbc3763974fb9947fb3bfa35008a&quot;&gt;ab8d1f8888a1fbc3763974fb9947fb3bfa35008a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added performance tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b8ab13270cbabc00962675b0409beaa664fece13&quot;&gt;b8ab13270cbabc00962675b0409beaa664fece13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added performance tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/5581fc9d4fa6196f6b6de7a91617791d2dfabc14&quot;&gt;5581fc9d4fa6196f6b6de7a91617791d2dfabc14&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified Makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ef31078ac60d820ce78d50ffba295bd8a044e48a&quot;&gt;ef31078ac60d820ce78d50ffba295bd8a044e48a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified Makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c0a837193bd702dc8da2f7f7a07379ae8e5c1122&quot;&gt;c0a837193bd702dc8da2f7f7a07379ae8e5c1122&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;updated Makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/14f155b3778f68bc6011a460af31510d85740aa9&quot;&gt;14f155b3778f68bc6011a460af31510d85740aa9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added hooks for pep8 and lint checks: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/cd2f41a5c278935691783ead3d1668cbfb51039c&quot;&gt;cd2f41a5c278935691783ead3d1668cbfb51039c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing hooks: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ddd62bd51dd13b65074fc2a93fb6e09e3145bcfb&quot;&gt;ddd62bd51dd13b65074fc2a93fb6e09e3145bcfb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified rst format sphinx: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/38bf39aa56954bad932682ed67087684b300c282&quot;&gt;38bf39aa56954bad932682ed67087684b300c282&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;updated sphinx docs: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/23dd1f754afa19996c0a3e12d4e443e75368648e&quot;&gt;23dd1f754afa19996c0a3e12d4e443e75368648e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pep8 checks along with py.test: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/251557f4ea773ba51b60bcb64da587602338cb72&quot;&gt;251557f4ea773ba51b60bcb64da587602338cb72&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pep8: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d368e28e32abae48fddfd1a1d0318c603362f518&quot;&gt;d368e28e32abae48fddfd1a1d0318c603362f518&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pep8 clean code unittests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/164789db58b29c02da159152d92097b9cece956b&quot;&gt;164789db58b29c02da159152d92097b9cece956b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add pylint to dependencies: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/16541955ee819c5e787070b9a8257edd92a68f54&quot;&gt;16541955ee819c5e787070b9a8257edd92a68f54&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;updated gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/06647c8788bbcd62498dea7467f52f1dbcb8b278&quot;&gt;06647c8788bbcd62498dea7467f52f1dbcb8b278&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;updated gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0c4e1bd5e4cdad01c5efae7c310ccf62f186afa6&quot;&gt;0c4e1bd5e4cdad01c5efae7c310ccf62f186afa6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pep8 gstswitch code: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/612a2ad6252de514fef9753530ef79f0dbaef4e2&quot;&gt;612a2ad6252de514fef9753530ef79f0dbaef4e2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Makefile: added lint to tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/5e76be08ead847eafcf8aa29f494f2c410c0e5c8&quot;&gt;5e76be08ead847eafcf8aa29f494f2c410c0e5c8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raising error if lint fails: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7582acb5e7c6be3b5a7db834b4efca5f43b47181&quot;&gt;7582acb5e7c6be3b5a7db834b4efca5f43b47181&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lint and docs for test_server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c1dcec794d3265993f16977b0e7f1a38690d4a56&quot;&gt;c1dcec794d3265993f16977b0e7f1a38690d4a56&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;linting and docs test_helper.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1b0cf382d1913aee0d65ba5e9caa1a373fe3d270&quot;&gt;1b0cf382d1913aee0d65ba5e9caa1a373fe3d270&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;updated .gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/68e0553483fbb34c60bfc3811c09934245a425c1&quot;&gt;68e0553483fbb34c60bfc3811c09934245a425c1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removing gcov files before test: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b73945f8882bb08b9ae3655b57f1e31dffcccf48&quot;&gt;b73945f8882bb08b9ae3655b57f1e31dffcccf48&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removing gcov files before test: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9ee5db3159d4af5b00c26df0dd009eec5eccd329&quot;&gt;9ee5db3159d4af5b00c26df0dd009eec5eccd329&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removing gcov files before test: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c6b9d492b4433db7da9e92d606d4257dfa621b52&quot;&gt;c6b9d492b4433db7da9e92d606d4257dfa621b52&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
Others couldn&#39;t come here because of Github API :)
&lt;/p&gt;




&lt;h2&gt;
    Things done in past few days:
&lt;/h2&gt;




&lt;p&gt;
    &lt;ul&gt;

        &lt;li&gt;
            Integration tests for &lt;code&gt;mark_tracking&lt;/code&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Sphinx Docs:&lt;/b&gt; A lot of modules had errors. The most common problem is &lt;code&gt;ImportError&lt;/code&gt; because sphinx is unable to find the modules in PYTHONPATH. Thus, these modules need to be mocked. I have a directory &lt;a href=&quot;https://github.com/hyades/gst-switch/tree/master/docs/fake-lib&quot;&gt;fake-lib&lt;/a&gt; which has all these mocked modules. This fake-lib has to be added to the PYTHONPATH in the &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/master/docs/conf.py&quot;&gt;conf.py&lt;/a&gt; file. The docs are at &lt;a href=&quot;http://gst-switch.readthedocs.org/en/latest/&quot;&gt;http://gst-switch.readthedocs.org/en/latest/&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Imgur Frame Upload:&lt;/b&gt; For testing in travis, I am uploading the key frames that are generated to imgur. For example in &lt;a href=&quot;https://api.travis-ci.org/jobs/11142262/log.txt?deansi=true&quot;&gt;this&lt;/a&gt; build the output key frames are: &lt;a href=&quot;http://i.imgur.com/GBZMLZ0.png&quot;&gt;img1&lt;/a&gt;(before PIP change) and &lt;a href=&quot;http://i.imgur.com/Beoj5Lo.png&quot;&gt;img2&lt;/a&gt;(after PIP change). 
            So there are two main problems with the build process - 
            &lt;ol&gt;
                &lt;li&gt;An unknown dependency&lt;/li&gt;
                &lt;li&gt;Gstreamer&#39;s python binding dont produce a &lt;code&gt;videotestsrc&lt;/code&gt; output. Maybe a problem with the typelibs.&lt;/li&gt;
            &lt;/ol&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Modified the controller tests: &lt;/b&gt; The controller tests were too heavy causing them to be unreliable at times. Now they are perfectly reliable.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Docs: &lt;/b&gt; Added docs for all modules and classes.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Linting:&lt;/b&gt; All code is pylint clean. The corrosponding pylintrc files are present. These files contain the excluded warnings and errors. Can be done by &lt;code&gt;make lint&lt;/code&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;pep8:&lt;/b&gt; All code is pep8 clean. Can be done by &lt;code&gt;make pep8&lt;/code&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;pre-commit hooks:&lt;/b&gt; Added pre-commit hooks which will run lint on C code and pylint and pep8 on python code. It will not commit unless these tests pass.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Build failures:&lt;/b&gt; If any of the tests (lint, pep8, unittests) fail, the build fails and the repository is flagged red.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Performance Tests: &lt;/b&gt; These are extreme torture tests. I run it on my system alone and not on travis. All of these tests are not meant to pass, some failures are expected. Currently the tests include things test cases where I call the &lt;code&gt;get_compose_port&lt;/code&gt; method &lt;i&gt;N&lt;/i&gt; number of times, where i vary &lt;i&gt;N&lt;/i&gt; in [100, 200, 300, 400, 500]. The test mostly fails at the 500 mark. One test case tests changing the PIP mode after some delay. I vary this delay like [1, 0.6, 0.5, 0.2] in seconds. On my system, below 0.6, i.e for test cases 0.5 and 0.2 the test fails.&lt;/li&gt;

    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/C-Coverage,-Travis-Builds&quot; title=&quot;Previous Post: C Coverage, Travis Builds&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Problems-building-gst-switch&quot; title=&quot;Next Post: Problems building gst-switch&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>C Coverage, Travis Builds</title>
   <link href="http://hyades.github.io/blog/C-Coverage,-Travis-Builds"></link>
   <updated>2013-09-04T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/C-Coverage,-Travis-Builds</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;relaxing image comparison factor, modified build process: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/cebbb8accbfc821e4d156bfbc4185f873e8969ab&quot;&gt;cebbb8accbfc821e4d156bfbc4185f873e8969ab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;printing ffmpeg output: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/18ba4174afb68f00906d2eb0c431e17bf85cc4a3&quot;&gt;18ba4174afb68f00906d2eb0c431e17bf85cc4a3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed reference frame path: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/37dc95893949b021c3e8d1cce15baa4e522ca87d&quot;&gt;37dc95893949b021c3e8d1cce15baa4e522ca87d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pushing - doing linting: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ec5705bfe40ad1136faaa714653d43cc43737465&quot;&gt;ec5705bfe40ad1136faaa714653d43cc43737465&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add ffmpeg to dependencies, lint and docs for server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c6c05391136d1282d0342df196aa77d149e389cd&quot;&gt;c6c05391136d1282d0342df196aa77d149e389cd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lint and docs for helpers.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ae6a2b2cc3e87b57ba81dadc383d003b3d3265bc&quot;&gt;ae6a2b2cc3e87b57ba81dadc383d003b3d3265bc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;provided bus_name for precise GDbus: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1ad1c6b93381443987f6d16fa6305b5e7d1b5c80&quot;&gt;1ad1c6b93381443987f6d16fa6305b5e7d1b5c80&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lint corrected: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/562daf9fb7494f20f6116df4f32b76e620ef8a9e&quot;&gt;562daf9fb7494f20f6116df4f32b76e620ef8a9e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;updated gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ab946ebc307e888ae61b1605760dfb3be4e4c588&quot;&gt;ab946ebc307e888ae61b1605760dfb3be4e4c588&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lint and docs for connection.py, modified travis scripts: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f22fcbbb1f13810a692790f3ac44badb3973c2e8&quot;&gt;f22fcbbb1f13810a692790f3ac44badb3973c2e8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lint and docs - controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/808797d2ae8a5373a3d81cf4c5f4f6fbc1b926b0&quot;&gt;808797d2ae8a5373a3d81cf4c5f4f6fbc1b926b0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Renamed unittest files, include tests in linting: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b5fc7ef741ff700bae4aa8e639d80ea11f22b999&quot;&gt;b5fc7ef741ff700bae4aa8e639d80ea11f22b999&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unittests for make coverage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/653e3c4d370475fb9d8f22c209929be91c31507e&quot;&gt;653e3c4d370475fb9d8f22c209929be91c31507e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;running coveralls only in root dir: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1f3a4b465b221310ec092e8644e600f8202116eb&quot;&gt;1f3a4b465b221310ec092e8644e600f8202116eb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pushing output to pastebin: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/218e07ed47d390a986f72c042de3fe21f68d54d7&quot;&gt;218e07ed47d390a986f72c042de3fe21f68d54d7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;corrected setup of coveralls: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7616b5597c30e044478e257407ee89e20a3878a4&quot;&gt;7616b5597c30e044478e257407ee89e20a3878a4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;correcting excludes: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b0d6f72e4733bb8eb9f3a167c78290d88a941b41&quot;&gt;b0d6f72e4733bb8eb9f3a167c78290d88a941b41&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;printing repr coverage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b38ef9f54981a63005558fc469f537326e53a1f2&quot;&gt;b38ef9f54981a63005558fc469f537326e53a1f2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;excluding libs from gcov: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a453f875c4a5aa0be6d0977d609b493b15926418&quot;&gt;a453f875c4a5aa0be6d0977d609b493b15926418&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;checking encoding of files: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b6230be1fade5174ba9e336a58168579d8d263f4&quot;&gt;b6230be1fade5174ba9e336a58168579d8d263f4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified conf.py for sphinx: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/669c9c72ff65a98b51469b11f59bf93d3c432ba2&quot;&gt;669c9c72ff65a98b51469b11f59bf93d3c432ba2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified conf.py for sphinx: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9fa90a562360fcd8e3b42280af7df77a089670f4&quot;&gt;9fa90a562360fcd8e3b42280af7df77a089670f4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed cd problem: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/77667143e9f3f6eef73c8413ef29926ef5caf989&quot;&gt;77667143e9f3f6eef73c8413ef29926ef5caf989&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mock objects for docs: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ea7746c869fd124962f31239ceb67a1a5bb21c15&quot;&gt;ea7746c869fd124962f31239ceb67a1a5bb21c15&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;made a fakelib: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/78446ea712cdfe88bd62b61b216012a35ec228a3&quot;&gt;78446ea712cdfe88bd62b61b216012a35ec228a3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing new travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/603d5427d8d0cc4541f5d03276f901b336736fc6&quot;&gt;603d5427d8d0cc4541f5d03276f901b336736fc6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing new travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e5adc59c8ca3bc714d50b97c4f8151bac88506fd&quot;&gt;e5adc59c8ca3bc714d50b97c4f8151bac88506fd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing new travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/687baa3270ac31f7538eb39f5bafe87520906f78&quot;&gt;687baa3270ac31f7538eb39f5bafe87520906f78&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gcov now generated in .gcov files in tools directory: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2ae929f719e0a26baa9644a0b28594b3c05c838b&quot;&gt;2ae929f719e0a26baa9644a0b28594b3c05c838b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;flushing when killing: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/cc7013028e698d6c1b6f71c5297860d428c00690&quot;&gt;cc7013028e698d6c1b6f71c5297860d428c00690&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Thinsg done:&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;b&gt;Coverage of c files: &lt;/b&gt;The &lt;code&gt;terminate()&lt;/code&gt; and &lt;code&gt;kill()&lt;/code&gt; methods to the server now have a parameter &lt;i&gt;cov&lt;/i&gt;. Setting its value as True, leads to dumping of coverage data in the tools directory (alternatively environment variable GCOV_PREFIX can be set to dump it elsewhere). Internally the gst-switch-srv calls &lt;code&gt;__gcov_flush()&lt;/code&gt; when it receives the signal SIGUSR1. This signal can also be sent like &lt;code&gt;killall -USR1 gst-switch-srv&lt;/code&gt;. Note that sending SIGUSR1 does not kill the server. Everytime the coverage data is dumped in the form of .gcda files, &lt;code&gt;make coverage&lt;/code&gt; is run. This turns it into .gcov files. The gcov files can be appended together unlike gcda files. Thus results of multiple runs of gcov can be seen by running &lt;code&gt;make coverage&lt;/code&gt; after each run.
        &lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Enabled documentation at readthedocs: &lt;/b&gt; &lt;a href=&quot;http://gst-switch.readthedocs.org/en/latest/&quot;&gt;http://gst-switch.readthedocs.org/en/latest/&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Setup coveralls for C code: &lt;/b&gt; Coverage of C code over coveralls is done through &lt;a href=&quot;https://github.com/eddyxu/cpp-coveralls&quot;&gt;cpp-coveralls&lt;/a&gt;. However, just running the command &lt;code&gt;coveralls&lt;/code&gt; was a problem. Running it caused it to search for all .o files including the ones generated by gstreamer and gst-plugins which were installed earlier. These files had some strange characters like /0xe9 which gave a &lt;code&gt;UnicodeDecodeError&lt;/code&gt; internally. The problem was solved by specifying the exact root directory where to find the coverage data (i.e tools directory) using the -r option. The overall coverage is at &lt;a href=&quot;https://coveralls.io/r/hyades/gst-switch&quot;&gt;https://coveralls.io/r/hyades/gst-switch&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Precise builds: &lt;/b&gt;Precise has Gio modules different from Quantal. My machine is quantal, thus running it in precise gave &lt;code&gt;TypeError&lt;/code&gt;. In my &lt;code&gt;call_sync&lt;/code&gt; function, I was giving &lt;code&gt;bus_name&lt;/code&gt; a &lt;code&gt;None&lt;/code&gt; value. This had a problem in Precise since it does not allow None values. Providing this value solved the issue.
        &lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Liniting the code&lt;/b&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;h2&gt;Current Issues&lt;/h2&gt;


&lt;p&gt;Even though the build runs on travis, some parts need attention.&lt;/p&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Unittests had 100% coverage&lt;/li&gt;
        &lt;li&gt;6 out of 13 integration tests Failed&lt;/li&gt;
        &lt;li&gt;
            Running gst-switch-srv gave an error
&lt;pre&gt;
&lt;code&gt;
./tools/gstworker.c:270:error: missing: faac
./tools/gstworker.c:784:error: recorder: failed to create new pipeline
&lt;/code&gt;
&lt;/pre&gt;
        &lt;/li&gt;
        &lt;li&gt;Seems an issue with the libvpx installation.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Travis-modifications-and-gcov-coverage&quot; title=&quot;Previous Post: Travis modifications and gcov coverage&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Improvements&quot; title=&quot;Next Post: Improvements&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Travis modifications and gcov coverage</title>
   <link href="http://hyades.github.io/blog/Travis-modifications-and-gcov-coverage"></link>
   <updated>2013-08-30T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Travis-modifications-and-gcov-coverage</id>
   <content type="html">&lt;h2&gt;Commits:&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;printing types.py file: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0c0179b462067356add82d49c98ba76d199f3a8f&quot;&gt;0c0179b462067356add82d49c98ba76d199f3a8f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;changed port due to conflict: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8c302512b527efd926e31c3f20a2cdb6ff7331a4&quot;&gt;8c302512b527efd926e31c3f20a2cdb6ff7331a4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removed ports close to 1000 from tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9c0c2aebcc73bfd3fd79472f959ddb176ef26c03&quot;&gt;9c0c2aebcc73bfd3fd79472f959ddb176ef26c03&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reducing intensity: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/35c03739bdb7e1fc2b27f3bcc105cfd79ddea5f9&quot;&gt;35c03739bdb7e1fc2b27f3bcc105cfd79ddea5f9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed paths: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/04465753485829f462e02d8a144618b0ead7adce&quot;&gt;04465753485829f462e02d8a144618b0ead7adce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added libvpx to travis build: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/31fa4c9577b06b04113a0903e6ec2e8a844d6b1f&quot;&gt;31fa4c9577b06b04113a0903e6ec2e8a844d6b1f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Travis Build&lt;/h2&gt;


&lt;p&gt;The TypeError has not been solved. The same code runs fine on my quantal machine as well as VM. I suspect two things that might be causing it:
    &lt;ul&gt;
        &lt;li&gt;Some package is missing. The package is related to &lt;/li&gt;
        &lt;li&gt;There is some incomplete or difference in the Gio modules of Quantal and Precise( travis servers ) which causes the problem.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;C Coverage&lt;/h2&gt;


&lt;p&gt;C coverage can be done using &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Gcov.html&quot;&gt;gcov&lt;/a&gt;. &lt;i&gt;gcov&lt;/i&gt; helps in collecting coverage information from the programs. For &lt;i&gt;gcov&lt;/i&gt; to work the c code should be compiled with the options &lt;code&gt;-fprofile-arcs -ftest-coverage&lt;/code&gt;. This will create &lt;i&gt;.gcno&lt;/i&gt; file, which contains information to reconstruct the basic block graphs and assign source line numbers to blocks. When the program is run, a separate &lt;i&gt;.gcda&lt;/i&gt; file is created for each object file compiled with this option. It contains arc transition counts, value profile counts, and some summary information. The &lt;i&gt;gcov&lt;/i&gt; can now be run on the original object files, which uses these &lt;i&gt;.gcno&lt;/i&gt; and &lt;i&gt;.gcda&lt;/i&gt; files to generate &lt;i&gt;.c.gcov&lt;/i&gt; files. The .gcov files contain the ‘:’ separated fields along with program source code. The format is &lt;code&gt;execution_count:line_number:source line text&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;However, gcov only produces the &lt;i&gt;.gcda&lt;/i&gt; files when the process terminates through the &lt;code&gt;exit()&lt;/code&gt; defined in the c code. Else, no &lt;i&gt;.gcda&lt;/i&gt; file is produced. &lt;i&gt;gst-switch-srv&lt;/i&gt; runs more like a infinite process which is mostly ended by &lt;i&gt;Control+A&lt;/i&gt; or terminating the process by SIGKILL etc. Currently the &lt;i&gt;gst-switch-srv&lt;/i&gt; supports gcov, however it has no support for handling the infinite process part.&lt;/p&gt;


&lt;p&gt;A good solution to this problem can be found at &lt;a href=&quot;https://www.osadl.org/Dumping-gcov-data-at-runtime-simple-ex.online-coverage-analysis.0.html&quot;&gt;https://www.osadl.org/Dumping-gcov-data-at-runtime-simple-ex.online-coverage-analysis.0.html&lt;/a&gt;. The &lt;code&gt;__gcov_flush();&lt;/code&gt; method can be used to conditionally provide coverage in between program run. As described in the article, the C code is modified and a signal handler is added. Here they use SIGUSR1. Therefore, whenever SIGUSR1 is caught by the program, it calls back the __gcov_flush(); method, generating &lt;i&gt;.gcda&lt;/i&gt; files. &lt;/p&gt;


&lt;p&gt;So the necessary files have to be modified with the signal handlers. Also the python-api has to be modified such that it sends a SIGUSR1 signal while ending a &lt;i&gt;gst-switch-srv&lt;/i&gt; process.&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Travis-Build-Changed&quot; title=&quot;Previous Post: Travis Build Changed&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/C-Coverage,-Travis-Builds&quot; title=&quot;Next Post: C Coverage, Travis Builds&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Travis Build Changed</title>
   <link href="http://hyades.github.io/blog/Travis-Build-Changed"></link>
   <updated>2013-08-30T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Travis-Build-Changed</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;Prefix changed for travis build: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d7d1b8e6afc1643842fb917260c50d1b2b41daa4&quot;&gt;d7d1b8e6afc1643842fb917260c50d1b2b41daa4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixing travis build error: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ff0ff2d1754f967ba3bda1752643544ad2755a5f&quot;&gt;ff0ff2d1754f967ba3bda1752643544ad2755a5f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis build changed: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/5a43e7863a60d01e650172bf91f273c814a869b6&quot;&gt;5a43e7863a60d01e650172bf91f273c814a869b6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis build modified: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/021262e0d5e129bf98dee8c908d0c3820b878b85&quot;&gt;021262e0d5e129bf98dee8c908d0c3820b878b85&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removed libtoolize dependency: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e247c4d3e75ece4e1a0dff6755837230d6540863&quot;&gt;e247c4d3e75ece4e1a0dff6755837230d6540863&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;corrected polling process: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9e451a473953062b865cfd4b3b5399ebea92e24e&quot;&gt;9e451a473953062b865cfd4b3b5399ebea92e24e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis build process: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b82f5999c4477e76d514ce1f69c0d897fe9b121f&quot;&gt;b82f5999c4477e76d514ce1f69c0d897fe9b121f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Polling to check for segmentation faults: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e59d27a0d540754fe96d4424e3842c0e85bc0cb1&quot;&gt;e59d27a0d540754fe96d4424e3842c0e85bc0cb1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removed unncessary imports: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/71734b75fef6bbab393f82738e33777f55525883&quot;&gt;71734b75fef6bbab393f82738e33777f55525883&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis - added girglib: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d23251a0c836c367f6ee69c12c622c4bbdd6addd&quot;&gt;d23251a0c836c367f6ee69c12c622c4bbdd6addd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Whats done - &lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;Detecting segmentation faults: &lt;/b&gt; If any segmentation faults happen, they are detected by the using &lt;code&gt;poll()&lt;/code&gt; method of a process created by Python. If the error code returned by this method can be matched at &lt;a href=&quot;http://unixhelp.ed.ac.uk/CGI/man-cgi?signal+7&quot;&gt;&lt;/a&gt;. The signal number 11 is for segmentation fault.&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Travis build:&lt;/b&gt; A breakthrough! Seems to be problem here at &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d7d1b8e6afc1643842fb917260c50d1b2b41daa4&quot;&gt;https://github.com/hyades/gst-switch/commit/d7d1b8e6afc1643842fb917260c50d1b2b41daa4&lt;/a&gt;. The path is not updated according to the prefix given to autogen.sh as &lt;code&gt;./autogen.sh --prefix=/some/random/path&lt;/code&gt;. Thus the make process ends up in a error where it will fail to find the respective directory.
        &lt;pre&gt;
            &lt;code&gt;
hyades@hyades-Inspiron-N5010:~$ whereis gst-switch-srv
gst-switch-srv: /usr/local/bin/gst-switch-srv&lt;/code&gt;
        &lt;/pre&gt;
        Using the procedure I have given in .travis.yml file, gst-switch-srv can be installed successully :) 
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Todo
&lt;/h2&gt;


&lt;p&gt;The path of the server have to be modified from $HOME/gst/stage/bin to /usr/local/bin in the files. A better way to assign these paths according to the prefix passed can be thought of.&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Building-on-Travis-CI&quot; title=&quot;Previous Post: Building on Travis-CI&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Travis-modifications-and-gcov-coverage&quot; title=&quot;Next Post: Travis modifications and gcov coverage&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Building on Travis-CI</title>
   <link href="http://hyades.github.io/blog/Building-on-Travis-CI"></link>
   <updated>2013-08-29T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Building-on-Travis-CI</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;Added libglib to travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d906e4b99b72c8ff8a522f3bef1520b2976159d6&quot;&gt;d906e4b99b72c8ff8a522f3bef1520b2976159d6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modfied: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0c96d57cd3206423c32a3a77fc90d36e6b67fd4a&quot;&gt;0c96d57cd3206423c32a3a77fc90d36e6b67fd4a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reverting back: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/473daed4e9c533ce7d44c5ce02f725ae7cd10338&quot;&gt;473daed4e9c533ce7d44c5ce02f725ae7cd10338&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;trying out building - modified travis&quot;

This reverts commit a823ec90679a4a91e5f0e3b01d3ce5e381581ca5.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/41b105dc260b0fe6389e1bfd46e096731125601d&quot;&gt;41b105dc260b0fe6389e1bfd46e096731125601d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;modified travis&quot;

This reverts commit a13fa2f62df6db82bbda1a6e95212acc7f46a0bc.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b8afe1e49b229855ca97ff76ee48b3f30153c0ff&quot;&gt;b8afe1e49b229855ca97ff76ee48b3f30153c0ff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a13fa2f62df6db82bbda1a6e95212acc7f46a0bc&quot;&gt;a13fa2f62df6db82bbda1a6e95212acc7f46a0bc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0259fe625feb6abbc2959614c5732a24665b8fa5&quot;&gt;0259fe625feb6abbc2959614c5732a24665b8fa5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/00b67a65f6fc1919615a7cfe9e1fbfdac836cd51&quot;&gt;00b67a65f6fc1919615a7cfe9e1fbfdac836cd51&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removed libtoolize from dependency: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/812adbbdb7c7d59ed5247e1a9ac6b8c5da723272&quot;&gt;812adbbdb7c7d59ed5247e1a9ac6b8c5da723272&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added more dependencies: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/5580ae1e7c57c600674baeb6cdb177d6cc9a2405&quot;&gt;5580ae1e7c57c600674baeb6cdb177d6cc9a2405&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified config paths: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7c19abae2951e764dbe861cb6b179f9338512d07&quot;&gt;7c19abae2951e764dbe861cb6b179f9338512d07&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;yml format fixed: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/74e5c6eb8703c078443bbf241f0c078699ec6743&quot;&gt;74e5c6eb8703c078443bbf241f0c078699ec6743&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;yml changes: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b7dff8b79a4e851dbe3800d6cea09585c0a2f8cc&quot;&gt;b7dff8b79a4e851dbe3800d6cea09585c0a2f8cc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Server log displayed in case of failure of test: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/54d0e0414d5e017fb2b8eec7c9491a66de37afe4&quot;&gt;54d0e0414d5e017fb2b8eec7c9491a66de37afe4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;typo fixed: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c6db27f45487f407ca21d2982583052656e7ecdd&quot;&gt;c6db27f45487f407ca21d2982583052656e7ecdd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing travis build - not using stage script: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/eefa9bc6b79b490b3973f338983418151c964835&quot;&gt;eefa9bc6b79b490b3973f338983418151c964835&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pygobject modules: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/26da4213f841570137152176d17e129bab7e4b3f&quot;&gt;26da4213f841570137152176d17e129bab7e4b3f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Restart build: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/772b8a5bae2dadf7510b9dee9e5059fcbc90d5b7&quot;&gt;772b8a5bae2dadf7510b9dee9e5059fcbc90d5b7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;girepository related changes to travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ff9f3b71d5ca770f0547283b6992278d2dfd2b36&quot;&gt;ff9f3b71d5ca770f0547283b6992278d2dfd2b36&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis PyGst: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1513e90fb25b0f6e72e311ab349c7877c1e5d560&quot;&gt;1513e90fb25b0f6e72e311ab349c7877c1e5d560&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis PyGst: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/772e6b0da36260bc466f942e8ed514a808923129&quot;&gt;772e6b0da36260bc466f942e8ed514a808923129&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f933749646e0a01a600f724c686ce5a559a15bc5&quot;&gt;f933749646e0a01a600f724c686ce5a559a15bc5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trying out building - modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a823ec90679a4a91e5f0e3b01d3ce5e381581ca5&quot;&gt;a823ec90679a4a91e5f0e3b01d3ce5e381581ca5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;
    Whats going on..
&lt;/h2&gt;


&lt;p&gt;
    I am refering to the latest build on travis-ci. Following things from the logs - &lt;a href=&quot;https://s3.amazonaws.com/archive.travis-ci.org/jobs/10719866/log.txt&quot;&gt;https://s3.amazonaws.com/archive.travis-ci.org/jobs/10719866/log.txt&lt;/a&gt;

    &lt;ul&gt;
        &lt;li&gt;Now after evevery failure, the entire log of the server is also displayed. All errors and warning are included in  this log&lt;/li&gt;
        &lt;li&gt;All unittests pass. This indicates that atleast everything was built properly&lt;/li&gt;
        &lt;li&gt;I could not find a way to use the typelibs file generated in the build process. So I am installing gir packages directly for gstreamer1.0&lt;/li&gt;
        &lt;li&gt;When running the server - &lt;code&gt;libdc1394 error: Failed to initialize libdc1394&lt;/code&gt;&lt;/li&gt;
        &lt;li&gt;
&lt;pre&gt;&lt;code&gt;
./tools/gstswitchserver.c:125:info: gst_switch_server init 0x1971000
./tools/gstswitchserver.c:1518:info: Compose sink to 1001, 1002
./tools/gstcomposite.c:88:info: gst_composite init 0x1974800
./tools/gstcomposite.c:155:warning: ignore changing mode in transition
./tools/gstswitchserver.c:707:info: Listening on localhost (::1:4000)
./tools/gstswitchserver.c:707:info: Listening on localhost (::1:5000)
./tools/gstswitchserver.c:736:error: bind socket: Error binding to address: Permission denied
./tools/gstswitchcontroller.c:484:info: Controller is listening at: unix:abstract=gstswitch
./tools/gstworker.c:477:error: output: (RESOURCE: 5) Could not open resource for reading.
./tools/gstworker.c:477:error: recorder: (RESOURCE: 5) Could not open resource for reading.
&lt;/code&gt;&lt;/pre&gt;

            This indicates something went wrong. Error binding to address: Permission denied. I am trying out different ports for the video_port , audio_port. Very much possible that the one under test is not open (probably port 1000). Also one interesting thing is that in this case compose ports are set as 1001 and 1002. Till now in numerous tests, I have seen that these are always 3001 and 3002 respectively.

        &lt;/li&gt;
        &lt;li&gt;
            This one seems a big problem. This is a log portion:
&lt;pre&gt;&lt;code&gt;
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;gstswitch.connection.Connection object at 0x2ccd790&gt;

[1m    def get_encode_port(self):[0m
[1m        &quot;&quot;&quot;get_encode_port(out i port);[0m
[1m            Calls get_encode_port remotely[0m
[1m    [0m
[1m            :param: None[0m
[1m            :returns: tuple with first element encode port number[0m
[1m            &quot;&quot;&quot;[0m
[1m        try:[0m
[1m            args = None[0m
[1m            connection = self.connection[0m
[1m            port = connection.call_sync([0m
[1m                self.bus_name,[0m
[1m                self.object_path,[0m
[1m                self.default_interface,[0m
[1m                &#39;get_encode_port&#39;,[0m
[1m                args,[0m
[1m                GLib.VariantType.new(&quot;(i)&quot;),[0m
[1m                Gio.DBusCallFlags.NONE,[0m
[1m                -1,[0m
[1m&gt;               None)[0m

gstswitch/connection.py:181: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

args = (&lt;DBusConnection object at 0x2cd1870 (GDBusConnection at 0x2ea7200)&gt;, None, &#39;/info/duzy/gst/switch/SwitchController&#39;, &#39;info.duzy.gst.switch.SwitchControllerInterface&#39;, &#39;get_encode_port&#39;, None, ...)
kwargs = {}

[1m    def function(*args, **kwargs):[0m
[1m&gt;       return info.invoke(*args, **kwargs)[0m
[1m[31mE       TypeError: Argument 1 does not allow None as a value[0m

/usr/lib/python2.7/dist-packages/gi/types.py:43: TypeError


&lt;/code&gt;&lt;/pre&gt;

            I have tested this code in quantal, and such an issue never came up. This error seems to be due to some missing elements in the Gio modules. The Gio reference I was using is &lt;a href=&quot;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&quot;&gt;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&lt;/a&gt;. Now this one is for 12.10. This can be due to some missing packages in gi, though not sure.
        &lt;/li&gt;
        &lt;li&gt;At certain times in the day, like around 1 am IST, the travis server is busy. Since the building process requires large amounts of downloading and bandwidth is limited, there is a huge chance for the build to timeout at 50 mins. &lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;C Coverage&lt;/h2&gt;


&lt;p&gt;With the existing gst-switch installed in &lt;code&gt;~/gst/stage/bin&lt;/code&gt;, I took another copy. Now I built this using &lt;code&gt;./autogen &amp;&amp; make&lt;/code&gt;. The executable gst-switch-srv is produced in tools/ directory. Now doing &lt;code&gt;make coverage&lt;/code&gt; shows the coverage. Hopefully this can be used. But this cannot be used with the executable gst-switch-srv present at &lt;code&gt;~/gst/stage/bin&lt;/code&gt;, since the gcov function requires &lt;i&gt;.o&lt;/i&gt; files which will be present only in the tools folder.&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Testing-building-on-Travis&quot; title=&quot;Previous Post: Testing building on Travis&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Travis-Build-Changed&quot; title=&quot;Next Post: Travis Build Changed&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Testing building on Travis</title>
   <link href="http://hyades.github.io/blog/Testing-building-on-Travis"></link>
   <updated>2013-08-27T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Testing-building-on-Travis</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;trying out building - modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/24bfc3e21eb10c3f97c489a82605d0201b1216e3&quot;&gt;24bfc3e21eb10c3f97c489a82605d0201b1216e3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modified: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/03b91899403a309e00dc02a53381139cbf748674&quot;&gt;03b91899403a309e00dc02a53381139cbf748674&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modified: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b402047630e00d81c50a24944828bb15dd2d78ae&quot;&gt;b402047630e00d81c50a24944828bb15dd2d78ae&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modified: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7394b4140fc62a2666b0ac306993e56a3e4b84cd&quot;&gt;7394b4140fc62a2666b0ac306993e56a3e4b84cd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added ignore errors in Makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f6c2e8782fa148fc1107a47802f1c72002b95f2b&quot;&gt;f6c2e8782fa148fc1107a47802f1c72002b95f2b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added PKG_CONFIG_PATH: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1286ace1199f92861588071181e6fb2ba078a509&quot;&gt;1286ace1199f92861588071181e6fb2ba078a509&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;wrong path fixed: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/4097f3abf874700c55c98ea5ae9114a98826655c&quot;&gt;4097f3abf874700c55c98ea5ae9114a98826655c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified paths: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ba7fca72ea11eec41bac68b874315bb1cc89062f&quot;&gt;ba7fca72ea11eec41bac68b874315bb1cc89062f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed gst-plugins-base git url: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/231ef17a166e065bb7e41e996865a83cc1484c2c&quot;&gt;231ef17a166e065bb7e41e996865a83cc1484c2c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modified - added dependencies: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8659f7d2aeb2d09b31834cba8aaac4ab60b27eb8&quot;&gt;8659f7d2aeb2d09b31834cba8aaac4ab60b27eb8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed a typo: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9321f81dd670a74d98264131cdbd5fa1d9a3be76&quot;&gt;9321f81dd670a74d98264131cdbd5fa1d9a3be76&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;trying fixing version problem: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f123f6aa2d3fc1adc79b58065afd83b9837de6ee&quot;&gt;f123f6aa2d3fc1adc79b58065afd83b9837de6ee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis.yml: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/774d585128b565f364799d472ef9bf67b97f7ce5&quot;&gt;774d585128b565f364799d472ef9bf67b97f7ce5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis.yml: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/eaa82f2ca80ee8268411afcf6d88d03f307ef4d2&quot;&gt;eaa82f2ca80ee8268411afcf6d88d03f307ef4d2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modifications and gitignore updated: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/90112e70ce7fbf477ad7a0476f3fe040738e0c27&quot;&gt;90112e70ce7fbf477ad7a0476f3fe040738e0c27&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;Added mkdir for ~/gst&quot;

This reverts commit 4e30b6a21d3d813e1c558b36a1fa4b864b2ab9fc.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/6929d8489ec6975665e518403068a0619665f108&quot;&gt;6929d8489ec6975665e518403068a0619665f108&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modifications: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/643e093056f2e90a428ddf0d8772bc98d5e544c3&quot;&gt;643e093056f2e90a428ddf0d8772bc98d5e544c3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added mkdir for ~/gst: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/4e30b6a21d3d813e1c558b36a1fa4b864b2ab9fc&quot;&gt;4e30b6a21d3d813e1c558b36a1fa4b864b2ab9fc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;removed testing portions in travis.yml: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a7f614438c1a6a0bd200b47ef15730741159f6ee&quot;&gt;a7f614438c1a6a0bd200b47ef15730741159f6ee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Removed arguments to make: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e8f88f0cf79f4f72c733f7e2f3db51ba6297337d&quot;&gt;e8f88f0cf79f4f72c733f7e2f3db51ba6297337d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mofied travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/03ec71aa329eb6387bd4524418c7889fc9acfd03&quot;&gt;03ec71aa329eb6387bd4524418c7889fc9acfd03&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis-ci file modified: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e73cae56aa17f331e131d84dc42fac64e8290867&quot;&gt;e73cae56aa17f331e131d84dc42fac64e8290867&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis.yml: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/36bef2ae6843245d909fe3c1308839e586f12da4&quot;&gt;36bef2ae6843245d909fe3c1308839e586f12da4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changes to stage script: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a9b9760685678a7084a575fa4c564ba630e931ed&quot;&gt;a9b9760685678a7084a575fa4c564ba630e931ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing faults in gst-switch-srv - added ldconfig settings: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/bb101b5cbc260ab7682ad9d38c73709c17174aca&quot;&gt;bb101b5cbc260ab7682ad9d38c73709c17174aca&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing faults in gst-switch-srv: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/719d5d61d215db7b4a53f19221b90be242f14f7e&quot;&gt;719d5d61d215db7b4a53f19221b90be242f14f7e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing faults in gst-switch-srv path fixed: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a05d8a51a5673081efeb57040943ba4cb65a9cb9&quot;&gt;a05d8a51a5673081efeb57040943ba4cb65a9cb9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing fault in gst-switch-srv: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b275ef0858d159562730988908c3d41634e84023&quot;&gt;b275ef0858d159562730988908c3d41634e84023&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing fault in gst-switch-srv: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/938c17b6dc0baab04a42a49a2c923b7ff9f9bc68&quot;&gt;938c17b6dc0baab04a42a49a2c923b7ff9f9bc68&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing fault in gst-switch-srv: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7cc21d365070df1a2644b14434bc343af210dae3&quot;&gt;7cc21d365070df1a2644b14434bc343af210dae3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;What I am doing&lt;/h2&gt;


&lt;p&gt;
    I am trying out building gst-switch over travis. Its been multiple failures and no success till now. Still working over this. Earlier there was a merge conflict due to which a commit&#39;s changes were not considered. Currently, I am working out a way to get python-gi installed on the travis machine.
&lt;/p&gt;


&lt;h2&gt;Todo&lt;/h2&gt;


&lt;p&gt;Coverage for c code over coveralls.&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Integration-tests-and-Travis-modifications&quot; title=&quot;Previous Post: Integration tests and Travis modifications&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Building-on-Travis-CI&quot; title=&quot;Next Post: Building on Travis-CI&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Integration tests and Travis modifications</title>
   <link href="http://hyades.github.io/blog/Integration-tests-and-Travis-modifications"></link>
   <updated>2013-08-25T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Integration-tests-and-Travis-modifications</id>
   <content type="html">&lt;h2&gt;Commits:&lt;/h2&gt;


&lt;p&gt;


&lt;ul&gt;
&lt;li&gt;Revert &quot;Revert &quot;Integration tests for mark_faces&quot;&quot;

This reverts commit 37a8db8d0ff302377daff63a8c3dcc159f2484ab.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/25dee2f9746b52ef339f27fd2a6d46fb09048cf9&quot;&gt;25dee2f9746b52ef339f27fd2a6d46fb09048cf9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c5fbff1872b3722e013b5d583f10572d7a04e386&quot;&gt;c5fbff1872b3722e013b5d583f10572d7a04e386&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;Integration tests for mark_faces&quot;

This reverts commit 2130ea8b6559b4d7a6524edd14426cd374cf3959.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/37a8db8d0ff302377daff63a8c3dcc159f2484ab&quot;&gt;37a8db8d0ff302377daff63a8c3dcc159f2484ab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;travis modifies&quot;

This reverts commit d18d57cf816dabff1ef79dcbb50d3255e47d66e4.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e106f2e960069ccaae4d06cbd83d43e67fdaf3c9&quot;&gt;e106f2e960069ccaae4d06cbd83d43e67fdaf3c9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;Revert &quot;Revert &quot;Revert &quot;Removed underscores&quot;&quot;&quot;&quot;

This reverts commit 47bc4a5fe385118f2ec919c76fb0266c6bc2199f.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/71ac82f4adeb2262317abfc1f4980764e149b1e6&quot;&gt;71ac82f4adeb2262317abfc1f4980764e149b1e6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis modifies: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d18d57cf816dabff1ef79dcbb50d3255e47d66e4&quot;&gt;d18d57cf816dabff1ef79dcbb50d3255e47d66e4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;Revert &quot;Revert &quot;Removed underscores&quot;&quot;&quot;

This reverts commit 17944235e218c2069138b3d73b89fefc23ed4326.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/47bc4a5fe385118f2ec919c76fb0266c6bc2199f&quot;&gt;47bc4a5fe385118f2ec919c76fb0266c6bc2199f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;travis&quot;

This reverts commit c39501b15e8f7bbbe0362dde653b712c62e47bed.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7365704cd7fe4ea0496dac4e2e446a1eeb6c5fdc&quot;&gt;7365704cd7fe4ea0496dac4e2e446a1eeb6c5fdc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;Revert &quot;Removed underscores&quot;&quot;

This reverts commit bf2898ceeb976a1b446f4045efbbeba0951f5a04.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/17944235e218c2069138b3d73b89fefc23ed4326&quot;&gt;17944235e218c2069138b3d73b89fefc23ed4326&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c39501b15e8f7bbbe0362dde653b712c62e47bed&quot;&gt;c39501b15e8f7bbbe0362dde653b712c62e47bed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Revert &quot;Removed underscores&quot;

This reverts commit 9fca986dff0dc2b797218de575485b178cd9a636.: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/bf2898ceeb976a1b446f4045efbbeba0951f5a04&quot;&gt;bf2898ceeb976a1b446f4045efbbeba0951f5a04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modifies travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/29d4ecaf875bfa04498a0a5dbc07f60b0a92830b&quot;&gt;29d4ecaf875bfa04498a0a5dbc07f60b0a92830b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Removed underscores: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9fca986dff0dc2b797218de575485b178cd9a636&quot;&gt;9fca986dff0dc2b797218de575485b178cd9a636&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Integration tests for mark_faces: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2130ea8b6559b4d7a6524edd14426cd374cf3959&quot;&gt;2130ea8b6559b4d7a6524edd14426cd374cf3959&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Integration tests for click_video: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/6e049dd57e0e6f800b8ac1ef03daf1e846774c1e&quot;&gt;6e049dd57e0e6f800b8ac1ef03daf1e846774c1e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis-ci: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8e200657f1d351df6dc6c48aed707e7b14217888&quot;&gt;8e200657f1d351df6dc6c48aed707e7b14217888&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added scipy to travis-ci: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/19b721b1b059707c5357ce63c6eeb32f730107e4&quot;&gt;19b721b1b059707c5357ce63c6eeb32f730107e4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a40c23742d0e8a0e971f957d504ba60b4488522e&quot;&gt;a40c23742d0e8a0e971f957d504ba60b4488522e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified Makefile and improved paths: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a2c5603d0def0387aaad53ecf5d0beb22c7b535f&quot;&gt;a2c5603d0def0387aaad53ecf5d0beb22c7b535f&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Integration Tests&lt;/h2&gt;


&lt;p&gt;I added methods which test the controller for &lt;code&gt;click_video&lt;/code&gt; and &lt;code&gt;mark_face&lt;/code&gt;.&lt;/p&gt;


&lt;p&gt;&lt;code&gt;click_video&lt;/code&gt; is described as &lt;i&gt;User click on the video&lt;/i&gt;. It takes four parameters - &lt;i&gt;dx, dy, dw and dh&lt;/i&gt; and returns a boolean &lt;i&gt;True&lt;/i&gt; or &lt;i&gt;False&lt;/i&gt;. Currently I am testing using some combinations of these four parameters, but I get the result always as &lt;i&gt;False&lt;/i&gt;. I will probably need some information on what this function exactly does.&lt;/p&gt;




&lt;p&gt;&lt;code&gt;nark_face&lt;/code&gt; marks faces on the output video. This takes an argument &lt;i&gt;faces&lt;/i&gt; which is a list of four element tuple, each tuple representing probably a face. This method unluckily gives no output and I am unable to figure out from the output video.&lt;/p&gt;




&lt;p&gt;The method &lt;code&gt;mark_tracking&lt;/code&gt; is a similar function, which takes &lt;i&gt;faces&lt;/i&gt; as parameter and doesn&#39;t have a return type.&lt;/p&gt;




&lt;p&gt;For the method &lt;i&gt;adjust_pip &lt;/i&gt;, I am still unable to change the size of the PIP using &lt;i&gt;dw and dh&lt;/i&gt; parameters, as it gives a black screen output.(TODO)&lt;/p&gt;




&lt;h2&gt;Travis-CI&lt;/h2&gt;


&lt;p&gt;Some modifications to .travis.yml. Currently the build fails due to since the gst-switch-srv gives a segmentation fault, and all functions which require it (all integration tests except ones which test helper functions) fail (TODO)&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Travis-CI-and-Coveralls&quot; title=&quot;Previous Post: Travis CI and Coveralls&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Testing-building-on-Travis&quot; title=&quot;Next Post: Testing building on Travis&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Travis CI and Coveralls</title>
   <link href="http://hyades.github.io/blog/Travis-CI-and-Coveralls"></link>
   <updated>2013-08-23T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Travis-CI-and-Coveralls</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;modified README: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/04920218485e5c134bb9a1acf58778c11a2220da&quot;&gt;04920218485e5c134bb9a1acf58778c11a2220da&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added python-gi packages: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ea2eafb8879e33476c1b815838b7c4d3cf730fea&quot;&gt;ea2eafb8879e33476c1b815838b7c4d3cf730fea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;update: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b2c8e3fca27af41672c5d0ac75b70c04a3e33ecf&quot;&gt;b2c8e3fca27af41672c5d0ac75b70c04a3e33ecf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added paths to conf.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/504511d21c42f61832d4efb93ffc1bd5a6123327&quot;&gt;504511d21c42f61832d4efb93ffc1bd5a6123327&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;conf.py for sphinx docs: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ba24d0604763471b58a0c23b5fead8ab5dcf5fee&quot;&gt;ba24d0604763471b58a0c23b5fead8ab5dcf5fee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified requirements.txt: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/fc7143c65ba82ac07cd9dfb571e2804162cde2ea&quot;&gt;fc7143c65ba82ac07cd9dfb571e2804162cde2ea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified requirements.txt: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/941d36147cd7a05e24af10255b94ecac73d2ddc4&quot;&gt;941d36147cd7a05e24af10255b94ecac73d2ddc4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified requirements.txt: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ecf56c9e9e7e7454961eb3bc4c6a78346fbad4ce&quot;&gt;ecf56c9e9e7e7454961eb3bc4c6a78346fbad4ce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added requirements.txt: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/37f64cfd99598b2b454544c3e3896fb7fd080310&quot;&gt;37f64cfd99598b2b454544c3e3896fb7fd080310&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified travis and makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/4ba5d82a639403cf7a85b33d3cf4cb019ee32146&quot;&gt;4ba5d82a639403cf7a85b33d3cf4cb019ee32146&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added missing unittests for Audio: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/3f3714bb89351e31641e84c7b3977ddbc1e990d2&quot;&gt;3f3714bb89351e31641e84c7b3977ddbc1e990d2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;added missing unittests for Audio: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/811502e58cee70e7e32132ac0c3ce5bef6770879&quot;&gt;811502e58cee70e7e32132ac0c3ce5bef6770879&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added PKG_CONFIG_PATH: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/47cec77f3749f69ebc880da9f85ccebaf712e957&quot;&gt;47cec77f3749f69ebc880da9f85ccebaf712e957&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Travis file back to normal: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9d43a0920f1924bd02b6fcc124b0a6e0854ea3e1&quot;&gt;9d43a0920f1924bd02b6fcc124b0a6e0854ea3e1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;playing around with travis.yml: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/20bca943d519cc2044c54ea341f71b1b1152cb7f&quot;&gt;20bca943d519cc2044c54ea341f71b1b1152cb7f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;switch integration tests - initial switching done: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1913c6e9bc46cc7ebcde0e25593af80544b5534a&quot;&gt;1913c6e9bc46cc7ebcde0e25593af80544b5534a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;switch integration tests - initial switching done: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d74577dd121f426a7bc90c5a1d31a4afda713f68&quot;&gt;d74577dd121f426a7bc90c5a1d31a4afda713f68&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;reference frame comparison for adjust_pip: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2a32fce193b503d4a8d822992b629b01d3f4a3f6&quot;&gt;2a32fce193b503d4a8d822992b629b01d3f4a3f6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;adjust_pip integration test: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e128b0051747f772b1ee5cceb2537f8fdd9668b0&quot;&gt;e128b0051747f772b1ee5cceb2537f8fdd9668b0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Integration Tests&lt;/h2&gt;


&lt;p&gt;Some of the things mentioned in the edit section of my last post are some of the commits mentioned above. I was able to achieve moving around the PIP in the x and y direction successfully.&lt;/p&gt;




&lt;h2&gt;Travis CI&lt;/h2&gt;


&lt;p&gt;I made a few edits to the .travis.yml. The travis page is at &lt;a href=&quot;https://travis-ci.org/hyades/gst-switch&quot;&gt;https://travis-ci.org/hyades/gst-switch&lt;/a&gt;. Indeed travis-ci is the best thing ever :)  &lt;/p&gt;


&lt;p&gt;The PKG_CONFIG_PATH was set to point to the correct location.&lt;/p&gt;


&lt;p&gt;Note: Even though the build is successfully, I currently have no tests to check if the build was indeed successful. So cannot say if the build was indeed successful. Only thing which is sure is that there process completed without any errors.&lt;/p&gt;




&lt;h2&gt;Coveralls&lt;/h2&gt;




&lt;p&gt;I configured python-coveralls to run py.test along with coverage on the code. I use my existing Makefile to conduct these tests. Unittests are currently conducted. I was able to get 100% coverage. The results can been seen on my repos&#39; page &lt;a href=&quot;https://github.com/hyades/gst-switch&quot;&gt;https://github.com/hyades/gst-switch&lt;/a&gt;. The full coverage is at &lt;a href=&quot;https://coveralls.io/r/hyades/gst-switch?branch=python-api&quot;&gt;https://coveralls.io/r/hyades/gst-switch?branch=python-api&lt;/a&gt;. The unittests coverage is at 100%. &lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Integration-Testing---4&quot; title=&quot;Previous Post: Integration Testing - 4&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Integration-tests-and-Travis-modifications&quot; title=&quot;Next Post: Integration tests and Travis modifications&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Integration Testing - 4</title>
   <link href="http://hyades.github.io/blog/Integration-Testing---4"></link>
   <updated>2013-08-22T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Integration-Testing---4</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;Checking if the record file is properly created: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/05b12933d1793f4ba9bbd016b7cba5e4a895ff8b&quot;&gt;05b12933d1793f4ba9bbd016b7cba5e4a895ff8b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;new_record integration test - basic: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/61f1c6b2eb4a85d4f85a7aca10fbbc10eddfa52a&quot;&gt;61f1c6b2eb4a85d4f85a7aca10fbbc10eddfa52a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified Class Structure, moved test_dir to temp folder: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/4324dcc2b640f0a8588eea90d7abecc8f08aad5f&quot;&gt;4324dcc2b640f0a8588eea90d7abecc8f08aad5f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified contants. Supports running the tests now: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/cd66fe45bacb47696edf8f23e66a19981290eeb6&quot;&gt;cd66fe45bacb47696edf8f23e66a19981290eeb6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adding reference frames: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c0de564f642e3ec64237a3f38906c5f49286fc55&quot;&gt;c0de564f642e3ec64237a3f38906c5f49286fc55&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adding reference frames: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2b746b6e5a6c19fa3a3dd04ba8028133727f0ca4&quot;&gt;2b746b6e5a6c19fa3a3dd04ba8028133727f0ca4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Adding reference frames: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/36019fc24706e01e030c7fcc0095ceef006ae0e0&quot;&gt;36019fc24706e01e030c7fcc0095ceef006ae0e0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Things done&lt;/h2&gt;


&lt;ul&gt;
    &lt;li&gt;Modified the code in compare.py: Earlier, the same class was being used to both generate the reference frames as well as for comparing an input video with these reference frames. Now these are separate classes which are inherited from a base class containing the methods common to them. &lt;code&gt;GenerateReferenceFrames&lt;/code&gt; generates the frames, whereas &lt;code&gt;CompareVideo&lt;/code&gt; compares a video to these reference frames. The video frames of the test video are created in the /tmp/ directory.&lt;/li&gt;
    &lt;li&gt;Added integration tests for &lt;code&gt;new_record&lt;/code&gt;. Calling this remote method results in creation of a new record file. Verification of the file was done through comparing if a file with the expected filename was found in the current working directory.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Working on:&lt;/h2&gt;


&lt;p&gt;I am currently doing integration tests for &lt;code&gt;adjust_pip&lt;/code&gt; remote method. This method takes 4 paramaters - dx, dy, dw, dh. This method also returns an integer. I found a brief description in the c code regarding this method - &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/tools/gstswitchclient.c#L410&quot;&gt;here&lt;/a&gt;. But I got a problem. I have tried passing some combinations of these four arguments. The results of some of these combinations (dx, dy, dw, dh) are:
    &lt;ol&gt;
        &lt;li&gt;(1, 1, 1, 1) - A black screen output and return value of 15&lt;/li&gt;
        &lt;li&gt;(0, 0, 0, 0) - Screen output not visibly changed, returns 1&lt;/li&gt;
        &lt;li&gt;(1, 0, 1, 0) - A black screen output and return value of 5&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;


&lt;p&gt;Currently got no idea about the return value of this method. Also I always get a black screen output.&lt;/p&gt;




&lt;h2&gt;Edit:&lt;/h2&gt;


&lt;p&gt;
    The adjust_pip method works with giving dw, dh as zero. If I give (50, 75, 0, 0) , the PIP is modified just as expected :)
    Check out this video - 
&lt;/p&gt;


&lt;p&gt;
    &lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/UFbzkx_m1-4&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/p&gt;


&lt;p&gt;But still the black output if dw or dh are set :(&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Integration-Testing-and-Comparing-Videos&quot; title=&quot;Previous Post: Integration Testing and Comparing Videos&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Travis-CI-and-Coveralls&quot; title=&quot;Next Post: Travis CI and Coveralls&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Integration Testing and Comparing Videos</title>
   <link href="http://hyades.github.io/blog/Integration-Testing-and-Comparing-Videos"></link>
   <updated>2013-08-21T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Integration-Testing-and-Comparing-Videos</id>
   <content type="html">&lt;h2&gt;Commits:&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;Video comparison module added: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/68b9f299377af86acdf00b2f2ef38bfea53127bb&quot;&gt;68b9f299377af86acdf00b2f2ef38bfea53127bb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added a file sink element and frame comparison: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/aa91fe142b5970997db86ee542524b7414da0b7b&quot;&gt;aa91fe142b5970997db86ee542524b7414da0b7b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;video comparison on key frames: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/eddb97074cf113ae040e6f10a5bdec269a416f6e&quot;&gt;eddb97074cf113ae040e6f10a5bdec269a416f6e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fixed test.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a9c7e39fbcb01e95ce68fcc68b1465526fa21a3e&quot;&gt;a9c7e39fbcb01e95ce68fcc68b1465526fa21a3e&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;integration tests - set_compose_mode - passing: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f019ff38e9e3b752e0ed99e774db21277f32a518&quot;&gt;f019ff38e9e3b752e0ed99e774db21277f32a518&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;integration tests - set_compose_mode - failing: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7bdeefc5b2fffb98be9331d9660ab9d7545d31c8&quot;&gt;7bdeefc5b2fffb98be9331d9660ab9d7545d31c8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reduced intensity of tests and removed sleeps: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b935c2bd55e5c15a80b6fa1e5a9bf9a41dbed49a&quot;&gt;b935c2bd55e5c15a80b6fa1e5a9bf9a41dbed49a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reduced intensity of tests and removed sleeps: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a588256f5cb2ab385bef27bea570fdbfe0232d95&quot;&gt;a588256f5cb2ab385bef27bea570fdbfe0232d95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8ad4ffbad029db57d8157d0cfa2ec87bd88237bb&quot;&gt;8ad4ffbad029db57d8157d0cfa2ec87bd88237bb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Integration Tests:&lt;/h2&gt;


&lt;p&gt;
    I added an extra module which tests the &lt;code&gt;set_compose_mode&lt;/code&gt;. This is the first one in the series of tests in which the output video has to be compared to ensure that everything goes as it is expected. i.e. If a PIP mode change has to occur, the test should ensure that it occurs. 
&lt;/p&gt;


&lt;h2&gt;Comparing the Output Video&lt;/h2&gt;


&lt;p&gt;
    For each test I do the following:
    &lt;ul&gt;
        &lt;li&gt;I compare key frames of a video to pre-stored frames. eg. If I am testing for changing PIP mode, I will have a two frames - one before the change and one after it. Now if the code which generates these frames from the video is run over the test video, it should generate same frames.&lt;/li&gt;
        &lt;li&gt;For generating key frames, I use ffmpeg. Using ffmpeg&#39;s inbuilt key frame selector produces black frames in between which makes comparison difficult. So I conduct the test for 6 seconds. First 3 seconds original video is present. At 3 second exact time from start, the change is made. So the next 3 seconds have the modified output refecting the change. So I take frames at 1.5 and 4.5 second marks. Doing this ensures that I get only those which are indeed needed. &lt;/li&gt;
        &lt;li&gt;After I have both the frames, I use scipy to calculate the zero norm of the two images. Zero norm is difference of the number of zeroes in the images. If the images are identical, the difference of will be exactly 0. Zero norm can take values between 0.0 and 1.0, with 1.0 being the case where the images are not at all similar.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Things to do-&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Integrate this video comparison into the integration tests&lt;/li&gt;
        &lt;li&gt;Complete tests for all other methods.&lt;/li&gt;
        &lt;li&gt;Add running tests through &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Coverage with &lt;a href=&quot;https://coveralls.io/&quot;&gt;coveralls&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation with &lt;a href=&quot;https://readthedocs.org/&quot;&gt;readthedocs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Integration-Tests---3&quot; title=&quot;Previous Post: Integration Tests - 3&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Integration-Testing---4&quot; title=&quot;Next Post: Integration Testing - 4&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Integration Tests - 3</title>
   <link href="http://hyades.github.io/blog/Integration-Tests---3"></link>
   <updated>2013-08-19T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Integration-Tests---3</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;integration tests - get_preview_ports: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c259a2512fa04d74f92ee3046f3c08655d522598&quot;&gt;c259a2512fa04d74f92ee3046f3c08655d522598&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;integration tests get_audio_port - 2: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/cf8c501e714cff468142b33343ed93a370492aaf&quot;&gt;cf8c501e714cff468142b33343ed93a370492aaf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;integration tests get_audio_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ceb322d2129ec1345a4e066c325b01d83eeaeb6c&quot;&gt;ceb322d2129ec1345a4e066c325b01d83eeaeb6c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Merge remote-tracking branch &#39;upstream/speaker-tracking&#39; into python-api

merge upstream: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b52978dfe479ddaa1c0808a21614a67f1c6d20bc&quot;&gt;b52978dfe479ddaa1c0808a21614a67f1c6d20bc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Things completed&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            Integration tests. This turned out to be a bit tricky. The &lt;code&gt;get_audio_port()&lt;/code&gt; function returns the first preview audio port. The default ports assigned according to these rules:
            &lt;ul&gt;
                &lt;li&gt;&lt;i&gt;Compose Port:&lt;/i&gt; video_port + 1&lt;/li&gt;
                &lt;li&gt;&lt;i&gt;Encode Port:&lt;/i&gt; video_port + 2&lt;/li&gt;
                &lt;li&gt;&lt;i&gt;Audio Port:&lt;/i&gt; Depends on which position the first audio stream is input to the gst-switch-srv. The first one will be at port 3003. So if the first stream to enter is an audio stream &lt;code&gt;get_audio_port()&lt;/code&gt; will return 3003. If a video stream is added before the audio one, the &lt;code&gt;get_audio_port&lt;/code&gt; will return 3004.&lt;/li&gt;
                &lt;li&gt;&lt;i&gt;Preview Ports&lt;/i&gt;: It returns a list of all the preview ports who are streaming into the gst-switch-srv - audio and video. &lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;Integration tests for get_audio_port&lt;/li&gt;
        &lt;li&gt;Integration tests for get_preview_ports&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;How to run these tests&lt;/h2&gt;


&lt;p&gt;Issue py.test command like &lt;code&gt;py.test test_controller.h&lt;/code&gt;&lt;/p&gt;


&lt;p&gt;Or you can also use the Makefile &lt;code&gt;make integration&lt;/code&gt;&lt;/p&gt;


&lt;h2&gt;Under progress..&lt;/h2&gt;


&lt;p&gt;I am working out a reliable way to compare the outputs of two runs of the program. Problem seems that sometimes an extra black frame may be captured (it is captured as a key-frame). This causes some problems in the comparison process, since the zero-norm of the comparison states that the two frames are absolutely dissimilar.&lt;/p&gt;


&lt;p&gt;The current set of tests shows &lt;b&gt;PASSED&lt;/b&gt; 19 out of 20 times. However almost once it fails, the reason is mostly a &lt;i&gt;Connection Closed&lt;/i&gt; or &lt;i&gt;Connection Reset&lt;/i&gt; message from the DBus. This indicates that something went wrong in the server side.&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Integration-Tests---2&quot; title=&quot;Previous Post: Integration Tests - 2&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Integration-Testing-and-Comparing-Videos&quot; title=&quot;Next Post: Integration Testing and Comparing Videos&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Integration Tests - 2</title>
   <link href="http://hyades.github.io/blog/Integration-Tests---2"></link>
   <updated>2013-08-17T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Integration-Tests---2</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
&lt;li&gt;integration tests - get_encode_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/80da75070f0c0c0d3c7a3f32e3a6350804a60984&quot;&gt;80da75070f0c0c0d3c7a3f32e3a6350804a60984&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed problems in comparing lists: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/749a3e35a9938a67d09734ec3d303ce49f7ea35c&quot;&gt;749a3e35a9938a67d09734ec3d303ce49f7ea35c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed problems in comparing lists: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/00dfafe4f0999aa446d517d73027aed1e4f3ac96&quot;&gt;00dfafe4f0999aa446d517d73027aed1e4f3ac96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added Integration tests for get_compose_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7c4e616dfa0ebb9eb65d09aeecc16458dac219a7&quot;&gt;7c4e616dfa0ebb9eb65d09aeecc16458dac219a7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;establish_connection tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e4ee184a72e8534854bbdb8105442edc66f178e3&quot;&gt;e4ee184a72e8534854bbdb8105442edc66f178e3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;




&lt;h2&gt;Things completed - &lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;b&gt;Integration tests for getting the current compose port of gst-switch.&lt;/b&gt; The compose port is returned as an integer when &lt;code&gt;gst_compose_port&lt;/code&gt; method is called on the Controller. I observed that its value is one greater than the video_port paramater of the gst-switch-srv. So if the value of &lt;code&gt;video_port&lt;/code&gt; is 3000, &lt;code&gt;get_compose_port&lt;/code&gt; should return 3001. The tests are run for multiple values of &lt;code&gt;video_port&lt;/code&gt;. For each of these ports, the &lt;code&gt;get_compose-port&lt;/code&gt; method is called multiple times. For the test, I have two constants, NUM and FACTOR. These can be found &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/tests/integrationtests/test_controller.py#L75&quot;&gt;here&lt;/a&gt;. NUM denotes the number of &lt;code&gt;video_port&lt;/code&gt; (testcases) values that are taken. NUM*FACTOR is the number of times the &lt;code&gt;get_compose_port&lt;/code&gt; method is called in each test case. After trying out multiple values of NUM and FACTOR, I found that after a product value of NUM*FACTOR greater than about 400, I get an exception - &lt;code&gt;ConnectionError: unix:abstract=gstswitch (Could not connect: Connection refused)&lt;/code&gt;. 
        &lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Integration test for getting current encode port&lt;/b&gt;. The encode port works the same as &lt;code&gt;get_compose_port&lt;/code&gt; method. Here the encode port is generally 2 ports more than &lt;code&gt;video_port&lt;/code&gt;. The test cases were made similar to &lt;code&gt;get_compose_port&lt;/code&gt;.
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Working on&lt;/h2&gt;


&lt;p&gt;The rest of the methods of gst-switch&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Integration-Testing&quot; title=&quot;Previous Post: Integration Testing&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Integration-Tests---3&quot; title=&quot;Next Post: Integration Tests - 3&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Integration Testing</title>
   <link href="http://hyades.github.io/blog/Integration-Testing"></link>
   <updated>2013-08-16T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Integration-Testing</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Bug fixes for audio sources, integration test for audio sources: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7d2795f400bde81cdbea2e94847408a847839e3e&quot;&gt;7d2795f400bde81cdbea2e94847408a847839e3e&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;test high number of input sources: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/6b05f5890ebe1cd339796c9b04e682aca3ca90a7&quot;&gt;6b05f5890ebe1cd339796c9b04e682aca3ca90a7&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Video comparison script: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/77b7a08af88fa761f578be0d6609883c159d9c4d&quot;&gt;77b7a08af88fa761f578be0d6609883c159d9c4d&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;test adding multiple input video streams: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f45c872a8c93daf1146718f0f48166ce8816e41d&quot;&gt;f45c872a8c93daf1146718f0f48166ce8816e41d&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;add driver file for integration tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/748bbad5de2aab5742288b5e5506454093218de7&quot;&gt;748bbad5de2aab5742288b5e5506454093218de7&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;integration test for starting and stopping the server: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8fbc7b1dd874158043b2ce92f818428d53efdf15&quot;&gt;8fbc7b1dd874158043b2ce92f818428d53efdf15&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Improved unittests for AudioSrc: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a066418a68df91b4522ab33d75734da12455fcb7&quot;&gt;a066418a68df91b4522ab33d75734da12455fcb7&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Test Audio Sources: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b9cbd2efb9ae23cdb1ced4cf431b4998ec462490&quot;&gt;b9cbd2efb9ae23cdb1ced4cf431b4998ec462490&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made TestSources video specific: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/cb63c635c2c21c976bd164d427ddd35f0d2fd14b&quot;&gt;cb63c635c2c21c976bd164d427ddd35f0d2fd14b&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/p&gt;




&lt;h2&gt;Completed Things&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;b&gt;Added Audio Sources&lt;/b&gt;: No the API allows adding audio sources. These are added through the TestSources class. Audio has behaviour similar to video sources like they are added using function new_test_audio and have properties similar to them. All audio sources have two important properties: the frequency and wave. The wave can take integral values from 0 and 12.&lt;/li&gt;
        &lt;li&gt;
            &lt;b&gt;Beginning with integration testing&lt;/b&gt;: The integration tests I have done till now are:
            &lt;ul&gt;
                &lt;li&gt;&lt;b&gt;Server:&lt;/b&gt; Starting and Stopping the server multiple times.&lt;/li&gt;
                &lt;li&gt;
                    &lt;b&gt;Input Sources:&lt;/b&gt; Adding input video and audio sources to the server using the API. I tried adding huge number of video sources. I also connected a preview to view the output. On my machine, on adding more than 50 sources, it seemed that the output was hanging up a bit due to slight stops in the video output. These hangs become much more severe as the number of sources are increased. Around 100 the video was almost frozen. Audio sources were also added.
                &lt;/li&gt;
                &lt;li&gt;&lt;b&gt;Controller: &lt;/b&gt; I am currently implementing this part. Till now I was checking if the establish_connection method, which makes a DBus connection to the server is working. Refering to code at &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/tests/integrationtests/test_controller.py#L14&quot;&gt;https://github.com/hyades/gst-switch/blob/python-api/python-api/tests/integrationtests/test_controller.py#L14&lt;/a&gt; - I tried starting the server once, and then repeatedly trying to establish a new connection. I have set the NUM value to 3. This was the maximum value possible without any exceptions coming in the code. With NUM=4, the exception is like this: &lt;code&gt;ConnectionError: unix:abstract=gstswitch (Error receiving data: Connection reset by peer)&lt;/code&gt; &lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Other things going on&lt;/h2&gt;


&lt;p&gt;To proceed with integration tests, I need a method which can compare a video&#39;s key frames with pre-defined ones. This is done to ensure that methods like switch, change PIP works as they should. For extracting key frames, I am using &lt;a href=&quot;http://www.ffmpeg.org/&quot;&gt;ffmpeg&lt;/a&gt;. Then I use scipy for calculating zero-norm between images.&lt;/p&gt;


&lt;p&gt;
    References:
&lt;/p&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/12100072/how-to-extract-slides-from-a-video-using-python&quot;&gt;http://stackoverflow.com/questions/12100072/how-to-extract-slides-from-a-video-using-python&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://trac.ffmpeg.org/wiki/Create%20a%20thumbnail%20image%20every%20X%20seconds%20of%20the%20video&quot;&gt;http://trac.ffmpeg.org/wiki/Create%20a%20thumbnail%20image%20every%20X%20seconds%20of%20the%20video&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/189943/how-can-i-quantify-difference-between-two-images#answer-3935002&quot;&gt;http://stackoverflow.com/questions/189943/how-can-i-quantify-difference-between-two-images#answer-3935002&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;There are two methods for extracting frames using ffmpeg, the one in the first link. However the problem here is that even if I have two videos which were generated using the same code, the number of key frames of the two videos is not the same. I observed that some extra black frames were added. This makes it very difficult to compare the two sets of key frames. The second method is that I take frames after every few seconds. This works on the assumption that I am bringing about a change in the video in a time which is greater than this time. &lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Things-I-am-currently-doing&quot; title=&quot;Previous Post: Things I am currently doing&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Integration-Tests---2&quot; title=&quot;Next Post: Integration Tests - 2&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Things I am currently doing</title>
   <link href="http://hyades.github.io/blog/Things-I-am-currently-doing"></link>
   <updated>2013-08-10T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Things-I-am-currently-doing</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Removed arguments of make: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f3b8765038dac6db2807f0b20f83e87942ce8592&quot;&gt;f3b8765038dac6db2807f0b20f83e87942ce8592&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Changed structure of files, added pytest option to makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/bcf5ead7317538be6e97d3f3d043c48bbe474a8a&quot;&gt;bcf5ead7317538be6e97d3f3d043c48bbe474a8a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Removed ui.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7a0b8d0b8be9fe7ae281dc964572725f7a9695d5&quot;&gt;7a0b8d0b8be9fe7ae281dc964572725f7a9695d5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unittests previews - helpers.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/65e32243919150ea073f709fabd55a93e7f9e660&quot;&gt;65e32243919150ea073f709fabd55a93e7f9e660&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;property - preview_port in helpers.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7268d9dd9bb14ad243940eb79e9c0da7fd9423c1&quot;&gt;7268d9dd9bb14ad243940eb79e9c0da7fd9423c1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unittests and exceptions terminate - helpers.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d2f82fd82d817a367aca88a9b93a15a1e31968f1&quot;&gt;d2f82fd82d817a367aca88a9b93a15a1e31968f1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unittests and exceptions terminate_index - helpers.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0245e944d049dd4160f5c4b2181a9f2c161e57b9&quot;&gt;0245e944d049dd4160f5c4b2181a9f2c161e57b9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;changed testsources.VideoSrc and unittests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/88f500836bc38cc13d7bd25d67491892aad97621&quot;&gt;88f500836bc38cc13d7bd25d67491892aad97621&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;video_port unittests in helper.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/3ca96edaf1f6b2b88b84f39eab5b9dfc740b9222&quot;&gt;3ca96edaf1f6b2b88b84f39eab5b9dfc740b9222&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unittests videopipeline: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/919b18632e7f8e64158aa1353a88f963aa1a2b4c&quot;&gt;919b18632e7f8e64158aa1353a88f963aa1a2b4c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Addeed unittests for Preview: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2b48d8a49e5a011d834a612cd7a1a67ff93123d1&quot;&gt;2b48d8a49e5a011d834a612cd7a1a67ff93123d1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chnaged structure of testsource: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d4636091827f3178f2b7f336792d1ba1ddac4f8b&quot;&gt;d4636091827f3178f2b7f336792d1ba1ddac4f8b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chnaged structure of testsource: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/768a2e6bd62e99127c09aa63518aa81f6de3db7d&quot;&gt;768a2e6bd62e99127c09aa63518aa81f6de3db7d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unittests for timeoverlay and clockoverlay: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c64a7686cb17fa1e7da82c2f76130a8959e71b4a&quot;&gt;c64a7686cb17fa1e7da82c2f76130a8959e71b4a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unittests and exceptions VideoSrc: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/06fc6bea2092fe34493a1bd802a7556e847b85b0&quot;&gt;06fc6bea2092fe34493a1bd802a7556e847b85b0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added properties for testsource.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/bcd05a27bb27750fdaf9beaad601ed4c2a7e8ee7&quot;&gt;bcd05a27bb27750fdaf9beaad601ed4c2a7e8ee7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unittest and exceptions controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0a0b282928f6f1deb5d427f57cfc914949c2c4ea&quot;&gt;0a0b282928f6f1deb5d427f57cfc914949c2c4ea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fixed video size related issues: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/191b0801071e7a2976e9fda43f07106698c25bdc&quot;&gt;191b0801071e7a2976e9fda43f07106698c25bdc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unittest - controller.py - set_composite_mode: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b3181a267ec1a461c4da2ec61360ded119bfa096&quot;&gt;b3181a267ec1a461c4da2ec61360ded119bfa096&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Unittest - controller.py - get_preview_ports: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/13455e4757a0f192642120a612f29b44568784dc&quot;&gt;13455e4757a0f192642120a612f29b44568784dc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fixed server.py unittests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/5cd28491526c4d48c4d6318c3a5922d95dd4d459&quot;&gt;5cd28491526c4d48c4d6318c3a5922d95dd4d459&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Committing changes: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/565364e816bf67c872245ecd551c621f495e1935&quot;&gt;565364e816bf67c872245ecd551c621f495e1935&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;


&lt;h2&gt;Things done.&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
    &lt;li&gt;
        Unittests are complete - 100% coverage &lt;a href=&quot;http://hyades.github.io/gst-switch/reports/coverage/&quot;&gt;&lt;/a&gt;. Can also be achieved by running &quot;make coverage&quot;.
    &lt;/li&gt;
    &lt;li&gt;
        Exception handling - completed for all the code I had written. &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
        Fixed issues with previous unittests. Some were using some external modules. They have been corrected and Mock objects and methods were appropriately added.
    &lt;/li&gt;
    &lt;li&gt;
        Structural changes and Makefile modifications.
    &lt;/li&gt;
    &lt;li&gt;
        Trying out building and installation of gst-switch.
    &lt;/li&gt;
&lt;/p&gt;


&lt;p&gt;Currently, I have started working on &lt;b&gt;integration tests&lt;/b&gt;. I am trying to figure what tools are available to assist me and how to make use of them.&lt;/p&gt;


&lt;h2&gt;Problems I am facing..&lt;/h2&gt;


&lt;p&gt;
    A reliable procedure to build gst-switch. One method which works sometimes is to first install gstreamer (without plugins) by running the gst-uninstalled script. Here after cloning gstreamer, I do ./autogen followed by make and make install.
&lt;/p&gt;


&lt;p&gt;
    After this, I follow the procedure I have put in my last &lt;a href=&quot;http://hyades.github.io/blog/Installing-Gst-Switch/&quot;&gt;last blog&lt;/a&gt;. 
&lt;/p&gt;


&lt;h2&gt;Things to do..&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Get proper building and installing intructions ready asap.&lt;/li&gt;
        &lt;li&gt;Integration test: This is will be the time, when actual bugs might pop up. These bugs can be present in both the gst-switch or the API. For example, from some testing, I have found that changing PIP Modes at a rate faster than a certain rate, causes problems in the gst-switch-srv and leads to a segmentation faults. More tests like these will be needed.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Installing-Gst-Switch&quot; title=&quot;Previous Post: Installing Gst-Switch&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Integration-Testing&quot; title=&quot;Next Post: Integration Testing&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Installing Gst-Switch</title>
   <link href="http://hyades.github.io/blog/Installing-Gst-Switch"></link>
   <updated>2013-08-03T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installing-Gst-Switch</id>
   <content type="html">&lt;p&gt;Using this method I was able to correctly install gst-switch (builds as of now).&lt;/p&gt;


&lt;h2&gt;Dependencies&lt;/h2&gt;


&lt;p&gt;The later parts of this post will take care of most of the dependencies. However, one has to be still fixed.&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146073.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Clone Repositories&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146097.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Setup Config Paths&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146078.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Build gst-switch&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146103.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Checking if it built correctly&lt;/h2&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146110.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;




&lt;h2&gt;Python API&lt;/h2&gt;


&lt;p&gt;Since some recent changes were made into the gst-switch speaker-tracking branch, my repository is not currently updated with it. As of now the API will work even if gst-switch is installed. The path to the gst-switch installation has to be provided while starting the server. The path is given as an argument to the Server.&lt;/p&gt;


&lt;p&gt;For getting the Python-API code you can do this in any directory of your system (Not in ~/gst/)&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6146121.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Now we are ready. Hope this works :)&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/SoC-Midterm-Evaluations&quot; title=&quot;Previous Post: SoC Midterm Evaluations&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Things-I-am-currently-doing&quot; title=&quot;Next Post: Things I am currently doing&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>SoC Midterm Evaluations</title>
   <link href="http://hyades.github.io/blog/SoC-Midterm-Evaluations"></link>
   <updated>2013-07-28T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/SoC-Midterm-Evaluations</id>
   <content type="html">&lt;p&gt;
    &lt;b&gt;TARGET:&lt;/b&gt; Create a Python API for gst-switch
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;https://github.com/hyades/gst-switch&quot;&gt;Gst-switch&lt;/a&gt; is a replacement of &lt;a href=&quot;http://dvswitch.alioth.debian.org/wiki/&quot;&gt;DVswitch&lt;/a&gt;. Gst-switch has a huge advantage that it is capable of using gstreamer elements and pipelines. A Python API is needed not only to control the gst-switch, but to also allow extensive testing of gst-switch components.
&lt;/p&gt;




&lt;h2&gt;A (Quick) Recap&lt;/h2&gt;




&lt;p&gt;
    The GSoC started from 28th May and the coding period officially started on 17th June. The intermediate time was &quot;Community Bonding Period&quot;. It was an excellent time to think over the things to do ahead, along with trying them out a bit, and understanding difficulties.
&lt;/p&gt;


&lt;p&gt;
    The Community Bonding period also served as a great time to read up existing code and figure how things work out. I mainly concentrated on reading the files: gstswitchserver.c, gstswitchcontroller.c, gstswitchclient.c and test_switch_server.c. 
&lt;/p&gt;




&lt;h2&gt;Installing&lt;/h2&gt;




&lt;p&gt;
      The first task was to explore gst-switch and also learn how to get it working. Gst-switch uses &lt;a href=&quot;http://gstreamer.freedesktop.org/&quot;&gt;gstreamer-1.0&lt;/a&gt;. In the start, I installed gstreamer-1.0 from ubuntu&#39;s repository (which is wrong). Then I did something like this:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6105352.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
    Here, I my mistake was that I did not include any arguments to the &lt;b&gt;./autogen&lt;/b&gt;
&lt;/p&gt;


&lt;p&gt;
    Initially, I was not aware of this. By executing the above lines, some executables - gst-switch-srv, gst-switch-ui were created in the gst-switch/tools/ directory. 
    Since building gst-switch was done, I could learn how to play around with it. I figured how the gst-switch-ui causes changes in the output. The only page of documentation of gst-switch is perhaps the Readme file :)
&lt;/p&gt;


&lt;p&gt;The above things worked fine for the master branch. I tried to build the speakertrack branch of gst-switch by doing:&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6105669.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;This time running the executables made me realize that I was on the wrong path.&lt;/p&gt;


&lt;p&gt;I realized that the the speakertrack branch needs a custom version of gstreamer&#39;s gst-plugins-bad. This is hosted at &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad.git&quot;&gt;https://github.com/duzy/gst-plugins-bad.git&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;I followed installation instructions which I have posted at &lt;a href=&quot;http://hyades.github.io/blog/Speakertrack-working&quot;&gt;http://hyades.github.io/blog/Speakertrack-working&lt;/a&gt;. I use gstreamer&#39;s uninstalled script for this.
&lt;/p&gt;




&lt;h2&gt;The components of gst-switch&lt;/h2&gt;


&lt;p&gt;
    Gst-switch works something like this:
    &lt;ul&gt;
        &lt;li&gt;First the gst-switch-srv is run and input sources are added to it&lt;/li&gt;
        &lt;li&gt;Then the UI/output is connected.&lt;/li&gt;
        &lt;li&gt;The communication between the server and the UI/output occurs over &lt;a href=&quot;http://www.freedesktop.org/wiki/Software/dbus/&quot;&gt;DBus&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;p&gt;DBus is a system of inter-process communication. DBus has two components: the dbus daemon and dbus library. The dbus daemon runs an actual bus over which messages can be transported. Any number of processes can connect to the daemon using the library. Mutiple buses can be active at the same time on any system. In a GNOME environment, two buses - &lt;i&gt;System Bus&lt;/i&gt;: for    miscellaneous system-wide communication and &lt;i&gt;Session Bus&lt;/i&gt;: used by a single user&#39;s ongoing GNOME session. A bus has some properties. A very nice analogy is given &lt;a href=&quot;http://www.freedesktop.org/wiki/Software/DBusAnalogy&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Gst-switch uses a custom dbus for communication. The address of this bus is &lt;i&gt;unix:abstract=gstswitch&lt;/i&gt;.&lt;/p&gt;




&lt;p&gt;
    Interacting through DBus is one of the most important and challenging part of making API. My first step towards learning dbus was through command-line tools namely &lt;i&gt;dbus-monitor&lt;/i&gt; and &lt;i&gt;dbus-send&lt;/i&gt;. &lt;i&gt;dbus-monitor&lt;/i&gt; is used to view all messages over a specified bus. &lt;i&gt;dbus-call&lt;/i&gt; can be used to send a message over dbus. These tools work great while interacting with &lt;i&gt;session bus&lt;/i&gt; and &lt;i&gt;system bus&lt;/i&gt;. However on a custom message bus, these methods require an object at path &lt;i&gt;/org/freedesktop/DBus&lt;/i&gt;. It gives an error:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6106323.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;These dbus modules also have a higher level &lt;a href=&quot;http://dbus.freedesktop.org/doc/dbus-python/&quot;&gt;Python API&lt;/a&gt;. But this also results in same problem. I have mentioned these &lt;a href=&quot;http://hyades.github.io/blog/Experiments-with-dbus/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;
    Along with doing all these I also started writing code for creating gst-switch processes. Initially this code could simply run the gst-switch-srv and gst-switch-ui and then later kill them off.
&lt;/p&gt;


&lt;p&gt;
    Another command line tool is &lt;p&gt;gdbus&lt;/p&gt;. This also interacts with dbus, but does so at a lower level. Using this tool one can do the same things as dbus-monitor and dbus-call. Every message bus should have a &lt;i&gt;introspect&lt;/i&gt; interface. The introspect is an XML containing interfaces and property values for the remote object. Gst-switch&#39;s introspection is available at &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/test/introspect.txt&quot;&gt;introspect.txt&lt;/a&gt;.
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6106616.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
     Since it has low level interactions, most of the usage and documentation for this is available in C &lt;a href=&quot;https://developer.gnome.org/glibmm/stable/group__DBus.html&quot;&gt;here&lt;/a&gt;. Similar thing for python is also available. It can be accessed using &lt;i&gt;from gi.repository import Gio&lt;/i&gt;. The only problem here was the lack of any proper documentation or examples. The only page regarding this is &lt;a href=&quot;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&quot;&gt;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&lt;/a&gt;. The Python API for Gio is merly a wrapper over the C code. Thus almost all functions perform the same task. For example
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107208.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;becomes:&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107229.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
    Help also came from reading the D-Feet source code. D-Feet is a GUI based DBus debugger written in python. The file &lt;a href=&quot;https://git.gnome.org/browse/d-feet/tree/src/dfeet/bus_watch.py&quot;&gt;bus_watch.py&lt;/a&gt; was very uselful to me in understanding how to interact using the python bindings of Gio.
&lt;/p&gt;


&lt;p&gt;
    This served as a base for writing modules which provide access to remote methods for the gst-switch. Currently I have two files: &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/connection.py&quot;&gt;connection.py&lt;/a&gt; and &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/controller.py&quot;&gt;controller.py&lt;/a&gt; which have almost the same function names defined inside them. The difference here is that the functions mentioned in connection.py interact at the low-level. They ensure things like making a dbus connection and how to call a remote method. I would also like to add information about GVariants here. There is very very less information on this available in python. In python GVariants are used like this:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107403.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;Note that each remote object call also returns a GVariant which can be parsed using __str__ method of GVariant. Thus one can simply do &lt;i&gt;str(variant)&lt;/i&gt; to obtain a tuple containing the desired information. The format of this information can be obtained from the introspection of the method.&lt;/p&gt;




&lt;h2&gt;Exception Handling &amp; Unittests&lt;/h2&gt;




&lt;p&gt;
    This is perhaps the part which I personally don&#39;t like. It is boring but is hugely &lt;i&gt;important&lt;/i&gt;. I was completely new to the concept of exception handling in python before this. In beginning I was putting &lt;i&gt;bare&lt;/i&gt; exception statements everywhere. Now, I am catching the possible exceptions and raising appropriate messages. I have covered most of the exceptions, but one or two are still left, and I am still thinking what to do with them.
&lt;/p&gt;


&lt;p&gt;
    &lt;b&gt;Unittests and Integration Tests&lt;/b&gt;
&lt;/p&gt;


&lt;p&gt;
    &lt;i&gt;Unittests&lt;/i&gt; are tests which check the functionality of a small portion or code. For example, if a particular code does some calculation and finally returns a value, an exception might occur while doing the computation. Thus we need to check if the exception is raised properly. For this a unit test is run where only this particular part of the code is executed. Any external methods are generally mocked. This can be done in two ways - use &lt;a href=&quot;https://pypi.python.org/pypi/pymock&quot;&gt;pymock&lt;/a&gt; or create your own mocking objects and functions. Some functions which require external libraries can be mocked using &lt;a href=&quot;http://pytest.org/latest/monkeypatch.html&quot;&gt;monkeypatch&lt;/a&gt;. For running unittests I am using &lt;a href=&quot;http://pytest.org/latest/&quot;&gt;py.test&lt;/a&gt;. ANother important point about unittests is that it should always have 100% coverage. Coverage is the percentage of statements executed in the code. 
&lt;/p&gt;


&lt;p&gt;
    &lt;i&gt;Integration Tests&lt;/i&gt; are tests which check if modules of the software work well together as a group. This may not have 100% coverage. However one must aim to get a higher percentage.
&lt;/p&gt;


&lt;p&gt;I have also added a Makefile for generating pylint, py.test and coverage reports. The commands are &lt;i&gt;make lint&lt;/i&gt; and &lt;i&gt;make coverage&lt;/i&gt;.&lt;/p&gt;


&lt;p&gt;Pylint report can be viewed at &lt;a href=&quot;http://hyades.github.io/gst-switch/reports/pylint/pylint_global.html&quot;&gt;http://hyades.github.io/gst-switch/reports/pylint/pylint_global.html&lt;/a&gt;. The &lt;i&gt;pylint_global&lt;/i&gt; term in the url can be replaced by filename from &lt;a href=&quot;https://github.com/hyades/gst-switch/tree/gh-pages/reports/pylint&quot;&gt;https://github.com/hyades/gst-switch/tree/gh-pages/reports/pylint&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;The coverage part can be viewed at &lt;a href=&quot;http://hyades.github.io/gst-switch/reports/coverage/&quot;&gt;http://hyades.github.io/gst-switch/reports/coverage/&lt;/a&gt;. The testsource file requires some work here.&lt;/p&gt;


&lt;p&gt;Currently, a partial integration test is &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/test.py&quot;&gt;test.py&lt;/a&gt;. This is not exactly an integration test, but it demonstrates how the API works.&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Makefile,-Unittests-and-Lint&quot; title=&quot;Previous Post: Makefile, Unittests and Lint&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Installing-Gst-Switch&quot; title=&quot;Next Post: Installing Gst-Switch&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Makefile, Unittests and Lint</title>
   <link href="http://hyades.github.io/blog/Makefile,-Unittests-and-Lint"></link>
   <updated>2013-07-27T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Makefile,-Unittests-and-Lint</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Coverage and unittests - test_controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/28a2e3b72629870e2ff43d59205d992168a5ecb5&quot;&gt;28a2e3b72629870e2ff43d59205d992168a5ecb5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint-testsource.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c62fd9be3e276497125f44fe92b492c96b5aec86&quot;&gt;c62fd9be3e276497125f44fe92b492c96b5aec86&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified Makefile: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/836e41f953fe99419f0e913d6ba5cdf19d043a69&quot;&gt;836e41f953fe99419f0e913d6ba5cdf19d043a69&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint helpers: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/1761c8006e4c2a06b820c9f6f3a40cc82911b1f8&quot;&gt;1761c8006e4c2a06b820c9f6f3a40cc82911b1f8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8094c21e4a578559e2bdcc1dc4960314393ad63d&quot;&gt;8094c21e4a578559e2bdcc1dc4960314393ad63d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pylint connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/df03803b679192a3535cc798332ce4080e6790b6&quot;&gt;df03803b679192a3535cc798332ce4080e6790b6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;modified .gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e4c0e9d9f990f7469375ae4050e190481858d911&quot;&gt;e4c0e9d9f990f7469375ae4050e190481858d911&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added Makefile - pylint: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f3f119ed86ed8dc19a3d40978f31e19c3e73f599&quot;&gt;f3f119ed86ed8dc19a3d40978f31e19c3e73f599&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;improved syntax - pylint: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/828d5b06566e27043b0cfe3a2f679fed9b7e718a&quot;&gt;828d5b06566e27043b0cfe3a2f679fed9b7e718a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pylint: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/deea82673be84ce1db99add6a9fc507ec1201b70&quot;&gt;deea82673be84ce1db99add6a9fc507ec1201b70&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A bit of pylint - -server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c3b73951b0e0795b1ae860442f08877a21af4330&quot;&gt;c3b73951b0e0795b1ae860442f08877a21af4330&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added __init__.py. Added __all__ to all files. Added a test.py file: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7dc299753b194a8ea5e78a1c40f0c35354174fe7&quot;&gt;7dc299753b194a8ea5e78a1c40f0c35354174fe7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;meaningful names to call_sync parameters: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ef2b4a490f1dc6a3b46fe1a1d5cb60902521d824&quot;&gt;ef2b4a490f1dc6a3b46fe1a1d5cb60902521d824&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modified MockConnection() and its usage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/53c9a0c5cb420749be6c87feeab4e0c145bc62ed&quot;&gt;53c9a0c5cb420749be6c87feeab4e0c145bc62ed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;properties and doc string in place: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/07c3348c13a2025a5373e4cd7a5f7c9a2b1cc8ec&quot;&gt;07c3348c13a2025a5373e4cd7a5f7c9a2b1cc8ec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;




&lt;h2&gt;Makefile&lt;/h2&gt;


&lt;p&gt;
I made a makefile to automate running py.test, coverage and pylint on the code. This is first time I am writing one :) The one i wrote assumes that py.test (with coverage.py plugin) and pylint is installed on your system. 
&lt;/p&gt;


&lt;p&gt;For running py.test along with coverage:
&lt;/p&gt;


&lt;p&gt;
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;make coverage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;&lt;/p&gt;

&lt;p&gt;
    For running pylint over the code:
&lt;/p&gt;


&lt;p&gt;
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;make lint&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;The result is generated as html files in a folder &lt;b&gt;reports&lt;/b&gt; in the present working directory.&lt;/p&gt;


&lt;h2&gt;Linting the code&lt;/h2&gt;


&lt;p&gt;I ran pylint on my code. Ofc it gave a very huge list of warning/errors! Slowly, they were solved. I tried my best to remove those, but some of those just cannot be removed :) Running pylint using Makefile gives a better estimate of the situation.&lt;/p&gt;




&lt;h2&gt;Exceptions and Unittests&lt;/h2&gt;


&lt;p&gt;I also added exceptions and unittests for helper.py and testsource.py. Now the unittests part is almost complete with 100% coverage.&lt;/p&gt;


&lt;h2&gt;Others..&lt;/h2&gt;


&lt;p&gt;Some small changes were also made which are reflected from the git commit message history.&lt;/p&gt;


&lt;h2&gt;TODO:&lt;/h2&gt;


&lt;ul&gt;
    &lt;li&gt;Integration tests&lt;/li&gt;
&lt;/ul&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Unittests-Mocking-and-Coverage&quot; title=&quot;Previous Post: Unittests Mocking and Coverage&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/SoC-Midterm-Evaluations&quot; title=&quot;Next Post: SoC Midterm Evaluations&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Unittests Mocking and Coverage</title>
   <link href="http://hyades.github.io/blog/Unittests-Mocking-and-Coverage"></link>
   <updated>2013-07-24T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Unittests-Mocking-and-Coverage</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Added properties - controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/0c75a0590a0e683bfbaaba55488fb780e33579b5&quot;&gt;0c75a0590a0e683bfbaaba55488fb780e33579b5&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Unittests for connection.py - 100%coverage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2a5086326b8a72ed406b6a61ccf33b09d02345a5&quot;&gt;2a5086326b8a72ed406b6a61ccf33b09d02345a5&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Changes in connection.py. Added unittests for connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9ad1ed7e21dcec56b54e4a53e32d075db9c2dcf3&quot;&gt;9ad1ed7e21dcec56b54e4a53e32d075db9c2dcf3&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittests server.py - 100% coverage: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9c74a37a24e7704973427cd939111b740a492fc8&quot;&gt;9c74a37a24e7704973427cd939111b740a492fc8&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;test for OSError in terminate: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/fab6c53deafb1bc5b5005a9fdccacd763972e51f&quot;&gt;fab6c53deafb1bc5b5005a9fdccacd763972e51f&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;remove unnecessarry: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e8c38b7a7e6a82e3d1d235214b0255642aa3256a&quot;&gt;e8c38b7a7e6a82e3d1d235214b0255642aa3256a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;modify gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7a4db71936352e6e51a9f27f38ca22f70abb608b&quot;&gt;7a4db71936352e6e51a9f27f38ca22f70abb608b&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;modify gitignore: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b7d83a907598b77df7ee1927907c814e615ede63&quot;&gt;b7d83a907598b77df7ee1927907c814e615ede63&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/bafe6905dfceed7870087bd95152ae0f2e89f7de&quot;&gt;bafe6905dfceed7870087bd95152ae0f2e89f7de&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/eb0895dbb0625b9b58d01bcd815607b0abc1aacf&quot;&gt;eb0895dbb0625b9b58d01bcd815607b0abc1aacf&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/03895c871a61f5c0ed4a930d7a69802a5d927a3c&quot;&gt;03895c871a61f5c0ed4a930d7a69802a5d927a3c&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed os.devnull exception: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d74829c50a8aa1f3e61f1d6211ee20ac2f619fe5&quot;&gt;d74829c50a8aa1f3e61f1d6211ee20ac2f619fe5&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/p&gt;


&lt;h2&gt;Things done&lt;/h2&gt;


&lt;p&gt;
    Last two days were almost devoted to unittests. I learnt how to use pytest-cov. The command issued by me is
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;py.test --cov-report html --cov [file/files to be checked] [file having unittests]
py.test --cov-report html --cov server.py test_server.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;
    I also learnt how to make mock classes and functions. I also learnt about monkeypatch techniques. Some links about these are:
&lt;/p&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;http://holgerkrekel.net/2009/03/03/monkeypatching-in-unit-tests-done-right/
&quot;&gt;http://holgerkrekel.net/2009/03/03/monkeypatching-in-unit-tests-done-right/
&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://pytest.org/latest/monkeypatch.html#_pytest.monkeypatch.monkeypatch.setattr
&quot;&gt;http://pytest.org/latest/monkeypatch.html#_pytest.monkeypatch.monkeypatch.setattr
&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6018040/py-test-use-monkeypatch-in-custom-funcargs&quot;&gt;http://stackoverflow.com/questions/6018040/py-test-use-monkeypatch-in-custom-funcargs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    I have achieved 100% coverage for server.py and connection
&lt;/p&gt;




&lt;h2&gt;Next..&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Write Makefile for pylint and pep8&lt;/li&gt;
        &lt;li&gt;100% coverage for rest files&lt;/li&gt;
        &lt;li&gt;Integration tests&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Exception-Handling---connection.py&quot; title=&quot;Previous Post: Exception Handling - connection.py&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Makefile,-Unittests-and-Lint&quot; title=&quot;Next Post: Makefile, Unittests and Lint&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Exception Handling - connection.py</title>
   <link href="http://hyades.github.io/blog/Exception-Handling---connection.py"></link>
   <updated>2013-07-22T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Exception-Handling---connection.py</id>
   <content type="html">&lt;h2&gt;Commits&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Added unittests for bus: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/7c6f1ea8ed5e5f68aaa1d55fd1641a0e7a997190&quot;&gt;7c6f1ea8ed5e5f68aaa1d55fd1641a0e7a997190&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Changed naming in test_server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a3d31f10be8696d9f1ea0203bf5c53b0387a4e9a&quot;&gt;a3d31f10be8696d9f1ea0203bf5c53b0387a4e9a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittests connection.py - address: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8c8663100f09b968c8ce678fe87e2315916abfdd&quot;&gt;8c8663100f09b968c8ce678fe87e2315916abfdd&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added properties and exception - connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/76ce5337daebeefd62c9194f96abad8f7fc1054a&quot;&gt;76ce5337daebeefd62c9194f96abad8f7fc1054a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;GError Exception Handling connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f1506f87654dda984772b5c9ad493a5b8414d56a&quot;&gt;f1506f87654dda984772b5c9ad493a5b8414d56a&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Things I did&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;b&gt;Added exceptions in connection.py&lt;/b&gt;
            &lt;br&gt;
            The functions in connection.py interact with the low level GDbus API. It is the API at gi.repository.Gio. Using this API, I am making new connection over dbus and invoking remote methods. Exception handling is done using &#39;GError&#39;. This exception which occurred is sys.exc_info()[1]. lets say :
            
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;error = sys.exc_info()[1]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

            Then the error message is contained in error.message and the domain in error.domain.
            
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;msg = error.message
domain = error.domain&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

        &lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Added properties in connection.py&lt;/b&gt;&lt;/li&gt;
        &lt;li&gt;&lt;b&gt;Added unittests&lt;/b&gt; based on py.test modules in connection.py. I covered a small chunk of it. Address and bus_name are done.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h2&gt;Problems I faced&lt;/h2&gt;


&lt;p&gt;
    The Exception of DBus (GError) are located at the file /usr/lib/python2.7/dist-packages/gi/_glib/option.py and /usr/lib/python2.7/dist-packages/gi/_glib/__init__.py. However, including in my PYTHON_PATH was a problem. Somehow doing this worked
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;from gi.repository.GLib import GError&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;


&lt;p&gt;
    Some good links I found are:
    &lt;br&gt;
    &lt;a href=&quot;https://developer.gnome.org/glib/2.34/glib-Error-Reporting.html&quot;&gt;https://developer.gnome.org/glib/2.34/glib-Error-Reporting.html&lt;/a&gt;: Explains the error reporting procedure in C.
&lt;/p&gt;


&lt;h2&gt;What Next..&lt;/h2&gt;


&lt;p&gt;Writing unittests for connection.py. At present it covers only 5-10% of connection.py&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Exception-Handling-and-Unittests&quot; title=&quot;Previous Post: Exception Handling and Unittests&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Unittests-Mocking-and-Coverage&quot; title=&quot;Next Post: Unittests Mocking and Coverage&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Exception Handling and Unittests</title>
   <link href="http://hyades.github.io/blog/Exception-Handling-and-Unittests"></link>
   <updated>2013-07-20T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Exception-Handling-and-Unittests</id>
   <content type="html">&lt;h2&gt;
    Commits:
&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;Added unittests for server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e93df29e12b92c87cfbdf2878682920fb0513437&quot;&gt;e93df29e12b92c87cfbdf2878682920fb0513437&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added properties for server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b1fb7f1bd5226f666c47555b360a97c208951499&quot;&gt;b1fb7f1bd5226f666c47555b360a97c208951499&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation: server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/be12843f29839b6f9875b71c59c386e044256170&quot;&gt;be12843f29839b6f9875b71c59c386e044256170&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h3&gt;
    What I Did Today..
&lt;/h3&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;I modified &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/server.py&quot;&gt;server.py&lt;/a&gt;. I finally learnt what the decorator operator in Python does. I added properties for path, video_port, audio_port, control_port and record_file. This allowed me to add exception handlers. Also detection of errors and raising is possible.&lt;/li&gt;
        &lt;li&gt;I wrote unittests &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/test_server.py&quot;&gt;test_server.py&lt;/a&gt;&lt;/li&gt;. These cover almost all errors that may come up in server.py
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h3&gt;Problems I Faced..&lt;/h3&gt;


&lt;ul&gt;
    &lt;li&gt;
        Using properties: Very nicely explained at:
        &lt;ul&gt;
            &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6618002/python-property-versus-getters-and-setters#answer-6618176&quot;&gt;http://stackoverflow.com/questions/6618002/python-property-versus-getters-and-setters#answer-6618176&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6304040/real-world-example-about-how-to-use-property-feature-in-python&quot;&gt;http://stackoverflow.com/questions/6304040/real-world-example-about-how-to-use-property-feature-in-python&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Next What..&lt;/h3&gt;


&lt;p&gt;
    Do the same for all other files (Write properties wherever required and unittests)
&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Correcting-lots-of-stuff&quot; title=&quot;Previous Post: Correcting lots of stuff&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Exception-Handling---connection.py&quot; title=&quot;Next Post: Exception Handling - connection.py&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Correcting lots of stuff</title>
   <link href="http://hyades.github.io/blog/Correcting-lots-of-stuff"></link>
   <updated>2013-07-20T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Correcting-lots-of-stuff</id>
   <content type="html">&lt;h2&gt;
    What was Wrong
&lt;/h2&gt;


&lt;p&gt;
    While writing unittests I went off-track. Thankfully, mithro guided me at correct time. Two major wrong things I was doing were:
    &lt;ol&gt;
        &lt;li&gt;For testing purposes, to each and every function in my code I was adding input validation statements, so that I did not get any TypeError or ValueError while running it. Instead of doing this, I should have made exception handlers. So my last few commits were not useful at all and I had to remove them.&lt;/li&gt;
        &lt;li&gt;I was using setters and getters in my code. I had added them to give extra abstraction to the user. However, I learnt that in python these are seldom used. So, I had to remove these lines from the code.&lt;/li&gt;
    &lt;/ol&gt;
    These things were the reason I delayed writing this blog post.
&lt;/p&gt;


&lt;h2&gt;
    Commits:
&lt;/h2&gt;


&lt;p&gt;
    A rather long list of commits:
    &lt;ul&gt;
        &lt;li&gt;exceptions for run, terminate and kill: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/af1bd7c8645b82fd2a725655fd6905709d6d8d45&quot;&gt;af1bd7c8645b82fd2a725655fd6905709d6d8d45&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;exceptions for run, terminate and kill: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/51dada1c0b16e8e3fd90eb7a967fb583b87d76f8&quot;&gt;51dada1c0b16e8e3fd90eb7a967fb583b87d76f8&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Exception handling for Server.run and py.tests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8807d07c2d98d5d39b8a0c22eabfc77b619369e1&quot;&gt;8807d07c2d98d5d39b8a0c22eabfc77b619369e1&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;exception handling for server process creation: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/832e0cb1948c601faa20292b6883a4d4d12bb1dc&quot;&gt;832e0cb1948c601faa20292b6883a4d4d12bb1dc&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;added exception for subprocess: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/8ef1346d40822b47e3cba16fd42848843a265783&quot;&gt;8ef1346d40822b47e3cba16fd42848843a265783&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-option added and updated connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9f8434cb9f06a25d6f9e3fec22a04289d2ba458e&quot;&gt;9f8434cb9f06a25d6f9e3fec22a04289d2ba458e&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Removed wrong unittests: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/269d307d5edd1b6d621457038b9148152bf14e12&quot;&gt;269d307d5edd1b6d621457038b9148152bf14e12&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made helpers.py and testsource.py pythonic: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/18608b8702826279711ed9d749f435b4340607ee&quot;&gt;18608b8702826279711ed9d749f435b4340607ee&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made server.py pythonic: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/abecf31fb2d429a84288026008e44feae3e8640c&quot;&gt;abecf31fb2d429a84288026008e44feae3e8640c&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made connection.py pythonic and removed dbus.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/2c7c7c03b527885c6bc0043dd73a0aeb7d29444d&quot;&gt;2c7c7c03b527885c6bc0043dd73a0aeb7d29444d&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Made connection.py pythonic and removed dbus.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/82cd61beadbd499f9424409c218bcae5b4840217&quot;&gt;82cd61beadbd499f9424409c218bcae5b4840217&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;fixed typo: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/e11aaea2b080d63f55a95b682593d4e6c50c1606&quot;&gt;e11aaea2b080d63f55a95b682593d4e6c50c1606&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Fixed problems: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/48e1742478627741b7c6def34ab2c2f972609b82&quot;&gt;48e1742478627741b7c6def34ab2c2f972609b82&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;h2&gt;
    Exception Handling
&lt;/h2&gt;


&lt;p&gt;
    From above experience I learnt that I had to put exception handlers in my code. I had very little knowledge of exception handlers and absolutely no experience.
&lt;/p&gt;


&lt;p&gt;
    Some good links that I found were very useful in the field of exception handling and testing:
    &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;http://pythontesting.net/framework/pytest/pytest-introduction/&quot;&gt;http://pythontesting.net/framework/pytest/pytest-introduction&lt;/a&gt; : This page nicely explains how to use py.test.&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://www.itmaybeahack.com/book/python-2.6/html/p02/p02c07_exceptions.html&quot;&gt;http://www.itmaybeahack.com/book/python-2.6/html/p02/p02c07_exceptions.html&lt;/a&gt;: A very long and very good page which explains exception handling to its core.&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6180185/custom-python-exceptions-with-error-codes-and-error-messages&quot;&gt;http://stackoverflow.com/questions/6180185/custom-python-exceptions-with-error-codes-and-error-messages&lt;/a&gt;: Nicely explains how to create custom exception classes&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;http://blog.ianbicking.org/2007/09/12/re-raising-exceptions/&quot;&gt;http://blog.ianbicking.org/2007/09/12/re-raising-exceptions/&lt;/a&gt;: Nicely explains how to raise and re-raise exceptions in python&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    After spending lots of time on reading exception handling in python, I made a few changes to the code, where I defined some custom Exceptions like PathError: Raised when a wrong path is specified to the run the gst-switch-srv process. Another one is ServerProcessError: Raised when something wrong happens with the process running like a OSError indicating some internal fault.
&lt;/p&gt;


&lt;h2&gt;Things to do..&lt;/h2&gt;


&lt;p&gt;
    Add exception handling for all modules and write py.test testing modules for testing them
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Writing-unittests&quot; title=&quot;Previous Post: Writing unittests&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Exception-Handling-and-Unittests&quot; title=&quot;Next Post: Exception Handling and Unittests&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Writing unittests</title>
   <link href="http://hyades.github.io/blog/Writing-unittests"></link>
   <updated>2013-07-16T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Writing-unittests</id>
   <content type="html">&lt;h3&gt;
    What I am doing
&lt;/h3&gt;


&lt;p&gt;
    I am beginning to get an idea of what unittests are. They try to test a particular small portion of your code and ensure that it will behave normally in all test cases.
&lt;/p&gt;


&lt;p&gt; 
    For example I was writing unittests for a function - set_video_port(video_port)
    Mithro pointed out that if I give an argument like -1, my code will not work correctly. So this type of error where the port numbers are not in range should induce a &lt;b&gt;ValueError&lt;/b&gt;. Similary, putting a string as an argument will should also raise an exception - &lt;b&gt;TypeError&lt;/b&gt;.
&lt;/p&gt;


&lt;p&gt;
    I am making a class for each function, and the functions in the class are corresponding tests
    The format is like:
    &lt;script src=&quot;https://gist.github.com/hyades/6009468.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    I run these tests by simply issuing a command like 
    &lt;script src=&quot;https://gist.github.com/hyades/6009520.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    The commits made are
    &lt;ul&gt;
        &lt;li&gt;Added unittest for BaseServer.get_record_file: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b5e4a4002c33d9f9a2c97184e6d9eacbeaad06a3&quot;&gt;b5e4a4002c33d9f9a2c97184e6d9eacbeaad06a3&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.get_control_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f4ce165cb8f5d6b54c1ae3836025f1e0600ade6d&quot;&gt;f4ce165cb8f5d6b54c1ae3836025f1e0600ade6d&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.get_audio_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/c8f2ccdf9675dd4ce3b146e35feda6289cce307a&quot;&gt;c8f2ccdf9675dd4ce3b146e35feda6289cce307a&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.get_video_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/933598967c845f394d2744322b1063b583bb53a9&quot;&gt;933598967c845f394d2744322b1063b583bb53a9&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_record_file: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a403b96a3baaab320578530b2ebfc502cf1973b3&quot;&gt;a403b96a3baaab320578530b2ebfc502cf1973b3&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_control_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/ab2743e221b45c980a75a9e9464f6ea61f6748a0&quot;&gt;ab2743e221b45c980a75a9e9464f6ea61f6748a0&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_control_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/b4584d1c9214a555af052b7542adfa707acc9a1b&quot;&gt;b4584d1c9214a555af052b7542adfa707acc9a1b&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_audio_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/761fd99c5519da82c79ee5e31f77cf07769a0b65&quot;&gt;761fd99c5519da82c79ee5e31f77cf07769a0b65&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added unittest for BaseServer.set_video_port: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/6963aa5bbbddbe8d25e776ca4727a509132485e5&quot;&gt;6963aa5bbbddbe8d25e776ca4727a509132485e5&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

&lt;/p&gt;


&lt;h3&gt;
    What I am planning to do
&lt;/h3&gt;


&lt;p&gt;
    I will be continuing with writing unittests for each function of the code :)
&lt;/p&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
    An off-topic thing. Getting all commits I had made in the last days on the blog page was such a headache. I have made this small little script for getting these commits and generating html code out of it &lt;a href=&quot;https://github.com/hyades/hyades.github.com/blob/master/commits.py&quot;&gt;https://github.com/hyades/hyades.github.com/blob/master/commits.py&lt;/a&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Sphinx-Documentation&quot; title=&quot;Previous Post: Sphinx Documentation&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Correcting-lots-of-stuff&quot; title=&quot;Next Post: Correcting lots of stuff&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Sphinx Documentation</title>
   <link href="http://hyades.github.io/blog/Sphinx-Documentation"></link>
   <updated>2013-07-15T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Sphinx-Documentation</id>
   <content type="html">&lt;p&gt;
    Got a bit bored from testing modules, so went into writing documentation.
&lt;/p&gt;


&lt;h3&gt;What I have done&lt;/h3&gt;


&lt;p&gt;
    I am writing documentation so that it can be made into nice looking HTML pages by &lt;a href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;. I have completed documentation for controller.py, connection.py, dbus.py and server.py.
    &lt;br&gt;
    The commits made are:
    &lt;ul&gt;
        &lt;li&gt;test for set_compose_mode;set_encode_mode doesn&#39;t work: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/5311985a8872aeb215aebbfa89182e8cf2b6848b&quot;&gt;5311985a88&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Added sphinx compatible documentation - controller.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/10c1e4b43402d2da5f999c9cea4605ba9cef2c1f&quot;&gt;10c1e4b434&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation - connection.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/a6fafa1b71a9fd35335a0a177fd66aa595a0d13c&quot;&gt;a6fafa1b71&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation-dbus.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/38c6166674af56706b7718c106fbfe26e842f27a&quot;&gt;38c6166674&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Documentation server.py: &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/f78f8d1aa35e58996a01fceb2c26d10fc8d76c42&quot;&gt;f78f8d1aa3&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    The compile the documentation by using a command like
    &lt;script src=&quot;https://gist.github.com/hyades/6000586.js&quot;&gt;&lt;/script&gt;
    And then do
    &lt;script src=&quot;https://gist.github.com/hyades/6000600.js&quot;&gt;&lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    The documentation looks something like this. Its present only for files I have mentioned above.
    &lt;a href=&quot;http://hyades.github.io/gst-switch/&quot;&gt;Gst-Switch Python API&lt;/a&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/testing-testing-testing&quot; title=&quot;Previous Post: testing testing testing&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Writing-unittests&quot; title=&quot;Next Post: Writing unittests&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>testing testing testing</title>
   <link href="http://hyades.github.io/blog/testing-testing-testing"></link>
   <updated>2013-07-13T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/testing-testing-testing</id>
   <content type="html">&lt;h3&gt;What I achieved&lt;/h3&gt;


&lt;p&gt;
    The commits are:
    &lt;ul&gt;
        &lt;li&gt;Removed unncessary files:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/d0e2cf4e001b9da785071448d56bb2a4399b1218&quot;&gt;d0e2cf4e00&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Created separate helpers class. Removed logging:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/9a9f2412522f711cbe648faafcb77ecdd468b020&quot;&gt;9a9f241252&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;small change:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/14e871ad40d929c43cfcf61d2f90256c6cddc677&quot;&gt; 14e871ad40&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;removed unneccesarry commented code:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/aa50ca622e407df6213d8deb3b77de9d63842d8b&quot;&gt;aa50ca622e&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;DBus methods getting data working:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/804436e8effaed7a402cf7363972825722b4be06&quot;&gt;804436e8ef&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Fixed typos, modified tests:&lt;a href=&quot;https://github.com/hyades/gst-switch/commit/df00cd368aadf544055ea675d9e2503d163d579e&quot;&gt;df00cd368a&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    For testing the methods, I had to create a new test.py file. After these tests, all the methods which &quot;get&quot; information from the gst-switch-srv are working. Also the method set_compose_mode is working.
&lt;/p&gt;


&lt;h3&gt;
    What problems I&#39;m currently having.
&lt;/h3&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;The method set_encode_mode is not working. Looking at how its implemented in the code of gst-switch, I found that its not implemented at all. &lt;a href=&quot;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L69&quot;&gt;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L69&lt;/a&gt; The method table has no mention of this method &lt;a href=&quot;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L969&quot;&gt;https://github.com/timvideos/gst-switch/blob/master/tools/gstswitchcontroller.c#L969&lt;/a&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;h3&gt;
    What I am planning to do
&lt;/h3&gt;


&lt;p&gt;
    Mithro had correctly pointed out that I will need a fully automatic test suite for testing the python api as well as the gst-switch. I am reading about how to use these. I have gone through py.test documentation. I will be using it for creating this test suite after I am done with very basic tests. Added to the to-do list :)
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Working-on-previews-and-plans-ahead&quot; title=&quot;Previous Post: Working on previews and plans ahead&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Sphinx-Documentation&quot; title=&quot;Next Post: Sphinx Documentation&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Working on previews and plans ahead</title>
   <link href="http://hyades.github.io/blog/Working-on-previews-and-plans-ahead"></link>
   <updated>2013-07-10T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Working-on-previews-and-plans-ahead</id>
   <content type="html">&lt;h3&gt;
    What I achieved
&lt;/h3&gt;


&lt;p&gt;
    Today I spent most of the time debugging the previously written code for preview outputs. I had written this module a week back but did not test it. I was using the alternate method of creating separate processes and dealing with them. A few tweaks were needed to get it to work. The commit link is &lt;a href=&quot;https://github.com/hyades/gst-switch/commit/fbbf832e887834964d306053a02839d380f9c16f&quot;&gt;fbbf832e88&lt;/a&gt;. I have also made a few changes to the Controller class. Till now I have just coded the Controller class but not tested till now. So these changes were needed for this purpose.
&lt;/p&gt;




&lt;h3&gt;
    Problems that will mostly arise and things that need to be done
&lt;/h3&gt;


&lt;p&gt;
    Trying to jot down whatever is coming to my mind. This list is surely not complete and I will add whatever will comes to mind later.
    &lt;ul&gt;
    &lt;li&gt;In my &lt;a href=&quot;http://hyades.github.io/blog/Connections-and-calling-methods&quot;&gt;last post&lt;/a&gt; I had talked about what methods will be implemented over the dbus. Some of these are pretty easy and straight-forward. These are the methods: get_compose_port, get_encode_port, get_audio_port, get_preview_ports. These are very simple and give simple return values.The method set_composite_mode has been tested by me in a separate script, so I don&#39;t expect any problems with that. Four methods: set_encode_mode, adjust_pip, switch and click_video will surely require some amount of testing before they are working good. I got no idea on how speakertracking related methods: mark_face and mark_tracking. I am expecting that the speakertrack system integration will take time.&lt;/li&gt;
    &lt;li&gt;Preview ports for viewing outputs is done. However previews for inputs are still remaining.&lt;/li&gt;
    &lt;li&gt;Exception handling is fully left.&lt;/li&gt;
    &lt;li&gt;Logging is partially implemented.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Connections-and-calling-methods&quot; title=&quot;Previous Post: Connections and calling methods&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/testing-testing-testing&quot; title=&quot;Next Post: testing testing testing&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Connections and calling methods</title>
   <link href="http://hyades.github.io/blog/Connections-and-calling-methods"></link>
   <updated>2013-07-07T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Connections-and-calling-methods</id>
   <content type="html">&lt;p&gt;
Blog post after a few days now. Moved on to a new city, and sadly I don&#39;t have a reliable internet connection here.Hopefully my new 3G SIM gets activated really fast! (im realizing life without fast internet is so hard :( )
&lt;/p&gt;


&lt;p&gt;
    Working mostly offline, for past few days I am trying to implement to Controller class I had earlier just made and left there. 
&lt;/p&gt;


&lt;p&gt;
    The remote methods allowed to interact with the gst-switch-srv through  dbus are:
    &lt;ul&gt;
        &lt;li&gt;get_compose_port: Returns compose port (default is 3001)&lt;/li&gt;
        &lt;li&gt;get_encode_port: Returns encode port&lt;/li&gt;
        &lt;li&gt;get_audio_port: Returns audio port&lt;/li&gt;
        &lt;li&gt;get_preview_ports: Returns a string of all preview ports&lt;/li&gt;
        &lt;li&gt;set_composite_mode: Sets the PIP mode (0 to 3). Returns true/false&lt;/li&gt;
        &lt;li&gt;set_encode_mode: Sets the encode mode (A or B). Returns true/false&lt;/li&gt;
        &lt;li&gt;new_record&lt;/li&gt;
        &lt;li&gt;adjust_pip: Inputs are dx, dy, dw, dh&lt;/li&gt;
        &lt;li&gt;switch: Inputs are channel and port&lt;/li&gt;
        &lt;li&gt;click_video: Inputs are x, y, fw, fh&lt;/li&gt;
        &lt;li&gt;mark_face: Input is dictionary (a, b, c, d) of faces&lt;/li&gt;
        &lt;li&gt;mark_tracking: Inputs is faces(dictionary)&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    The main controller class uses a dbus Connection class. This Connection class provides the low level interaction with the dbus. The Controller class is majorly a top level interface which hides all the dbus interactions from the user. 
&lt;/p&gt;


&lt;p&gt;
    The functons defined in the Controller class are almost stubs, but each of them have different parsers based on what the function does. Giving defination of each and every method will be too long, so I have tried to put some in-line documentation.
&lt;/p&gt;


&lt;p&gt;
    The Connection class handles making connection to the dbus and then calling remote functions. Each function has a different type of calling and objects returned are different and have to be parsed accordingly. I have implemented most of these functions, though still some are left. The interesting functions which will require more attention are adjust_pip, switch, click_video, mark_face, and mark_tracking. 
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Few-Changes&quot; title=&quot;Previous Post: Few Changes&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Working-on-previews-and-plans-ahead&quot; title=&quot;Next Post: Working on previews and plans ahead&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Few Changes</title>
   <link href="http://hyades.github.io/blog/Few-Changes"></link>
   <updated>2013-06-28T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Few-Changes</id>
   <content type="html">&lt;p&gt;
    The entire code is now PEP8 compliant maing it a lot easier to view. I found out a plugin for my text editor and all my future code will surely be the same.
&lt;/p&gt;


&lt;p&gt;
    Earlier i wrote about how I was not getting output correctly. The video was not &quot;pretty&quot; and clear. I had given a screenshot for comparison. This was due to a typo in the caps. Now, the video is perfect.
&lt;/p&gt;


&lt;p&gt;
    You can have a look &lt;a href=&quot;/video/record 2013-06-27 201241.data&quot;&gt;here&lt;/a&gt;. This file opens fine with vlc for me.
&lt;/p&gt;


&lt;p&gt;
    I have also made some changes in the code so that the major variables are distinguished from the unimportant ones. This will be helpful especially when debugging code.
&lt;/p&gt;


&lt;p&gt;
    Also as mithro pointed out, the path of executables is now passed as parameter to the Server. This path can also be made an optional argument in case all the executables are in some default location after build and install.
&lt;/p&gt;


&lt;p&gt;
    Also now with everything installed correctly in place, I get warnings both in the gst-switch-srv and gst-switch-ui like:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;(gst-switch-ui:11231): GStreamer-WARNING **: gstpad.c:3677:gst_pad_chain_data_unchecked:&amp;lt;overlay:sink&amp;gt; Got data flow before stream-start event
 
(gst-switch-ui:11231): GStreamer-WARNING **: gstpad.c:3908:gst_pad_push_data:&amp;lt;overlay:src&amp;gt; Got data flow before stream-start event&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;


&lt;p&gt;
    Audio is another problem. I ran gst-switch-srv followed by gst-switch-ui. I then added a audio test source on port 4000. This resulted in crashing the gst-switch-ui. The log looks something like this. 
    &lt;script src=&quot;https://gist.github.com/hyades/5884014.js&quot;&gt;&lt;/script&gt;
    It seems that an element &lt;b&gt;monoscope&lt;/b&gt; is missing. However according to &lt;a href=&quot;http://gstreamer.freedesktop.org/documentation/plugins.html&quot;&gt;http://gstreamer.freedesktop.org/documentation/plugins.html&lt;/a&gt; monoscope is a part of gst-plugins-good which is already installed.
&lt;/p&gt;


&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5&gt;
    Some things to do:
&lt;/h5&gt;


&lt;p&gt;
    There is a need for a error reporting mechanism. This will be utilizing python&#39;s Exception class. Presently, I have little knowledge of using this. I am learning how to make use of this Exception class. I have a file &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/gstswitch/exception.py&quot;&gt;exception.py&lt;/a&gt; where I will be defining some common exceptions. These will be raised at appropriate places. Work needs to be done here.
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Speakertrack-working&quot; title=&quot;Previous Post: Speakertrack working&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Connections-and-calling-methods&quot; title=&quot;Next Post: Connections and calling methods&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Speakertrack working</title>
   <link href="http://hyades.github.io/blog/Speakertrack-working"></link>
   <updated>2013-06-25T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Speakertrack-working</id>
   <content type="html">&lt;h2&gt;Gstreamer Uninstalled Script&lt;/h2&gt;


&lt;p&gt;
    I was earlier experiencing many problems installing the gstreamer package for running the speakertrack modules. This task was made easy by the gst-uninstalled script (&lt;a href=&quot;http://cgit.freedesktop.org/gstreamer/gstreamer/plain/scripts/create-uninstalled-setup.sh&quot;&gt;http://cgit.freedesktop.org/gstreamer/gstreamer/plain/scripts/create-uninstalled-setup.sh&lt;/a&gt;). I downloaded the script and ran it. This script clones the gstreamer git modules (gstreamer, gst-plugins-base, gst-plugins-good, gst-plugins-bad, gst-plugins-ugly) into &quot;~/gst/master&quot;. I replaced the gst-plugins-bad module by &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad.git&quot;&gt;Duzy&#39;s&lt;/a&gt; one from speakertrack_new branch. The gst-uninstalled script generates a script gst-master at &quot;~/gst&quot;. This script is useful in setting the environment variables correctly. These environment variables are needed to install gstreamer in a custom location so that the plugins know where the gstreamer package was installed.
    Now after doing this I followed the setting up instructions. I built like this:
&lt;/p&gt;


&lt;p&gt;&lt;script src=&quot;https://gist.github.com/hyades/6107999.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;


&lt;p&gt;
    Doing this builds the gstreamer WITHOUT any build errors. The executables - gst-launch-1.0, gst-inpect-1.0 etc are now located at ~/gst/master/gstreamer/tools/.libs/ or ~/gst/master/gstreamer/tools/ Now, I built the gst-switch in speakertrack branch doing ./autogen and then make and copied the executables from /tools/ - gst-switch-srv, gst-switch-ui and gst-switch-cap to the previous location. Now, running gst-switch-srv and gst-switch-cap worked perfectly with the modules capable of detecting my face :)
&lt;/p&gt;


&lt;p&gt;
    The environment variables can also be set using a script like this:
    &lt;script src=&quot;https://gist.github.com/6176137.js&quot;&gt; &lt;/script&gt;
&lt;/p&gt;


&lt;h2&gt;
    The Code
&lt;/h2&gt;


&lt;p&gt;
    I have made some edits. 
    &lt;ol&gt;
        &lt;li&gt;The path of the executables now needs to be specified. This will be set to some default value later.&lt;/li&gt;
        &lt;li&gt;Earlier if the server was running and while testing I get a python exception. Now since server.end() call is made afterwards, the gst-switch-srv would have kept on running in the background. Running &quot;ps -ef | grep gst-switch-srv&quot; will confirm it. Now, there is a function which can be called like server.brute_end(). This should be added to except portion in the test script like this script:
            &lt;script src=&quot;https://gist.github.com/6176144.js&quot;&gt; &lt;/script&gt;
        &lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Installation-and-Changes-to-Structure&quot; title=&quot;Previous Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Few-Changes&quot; title=&quot;Next Post: Few Changes&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Installation and Changes in Structure</title>
   <link href="http://hyades.github.io/blog/Installation-and-Changes-to-Structure"></link>
   <updated>2013-06-23T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installation-and-Changes-to-Structure</id>
   <content type="html">&lt;h2&gt;
    Installation
&lt;/h2&gt;


&lt;p&gt;
    Installation of the gst-switch from master branch works good. However I am unable to install gst-switch for the speaker-track branch. 
&lt;/p&gt;


&lt;p&gt;
    I am running Quantal and had gstreamer-1.0 installed along with all the plugins (good, bad, ugly) installed through the ubuntu repository. The version of gstreamer was 1.0.6. However, gst-switch requires the latest development version-1.1.1 to be installed. 
&lt;/p&gt;


&lt;p&gt;
    Also I would mention that installing the speakertrack branch of gst-switch does not work out correctly. Firstly the gstreamer plugins were not installed correctly. Also, I did not find the file gst-switch-cap in ~/gst/stage/bin indicating that the installation process actually installed the master branch instead of installing the speakertrack branch.
    &lt;br&gt;
    I have installed all the git packages of gstreamer and its plugin from duzy repo at &lt;a href=&quot;https://github.com/duzy&quot;&gt;https://github.com/duzy&lt;/a&gt;. I installed the following packages:
    &lt;ul&gt;
        &lt;li&gt;gstreamer &lt;a href=&quot;https://github.com/duzy/gstreamer&quot;&gt;https://github.com/duzy/gstreamer&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-base &lt;a href=&quot;https://github.com/duzy/gst-plugins-base&quot;&gt;https://github.com/duzy/gst-plugins-base&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-good &lt;a href=&quot;https://github.com/duzy/gst-plugins-good&quot;&gt;https://github.com/duzy/gst-plugins-good&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-ugly &lt;a href=&quot;https://github.com/duzy/gst-plugins-ugly&quot;&gt;https://github.com/duzy/gst-plugins-ugly&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugin-bad &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad&quot;&gt;https://github.com/duzy/gst-plugins-bad&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    Installing the gst-plugins-bad gives errors. First I try installing from the master branch. I encountered this error while doing make:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;make[4]: Entering directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;
          CC     libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo
        In file included from gstcamerabinpreview.c:31:0:
        ../../../gst-libs/gst/glib-compat-private.h:84:30: error: unknown type name &amp;#39;GStaticRecMutex&amp;#39;
        make[4]: *** [libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo] Error 1
        make[4]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    Didn&#39;t work out well. So I did a checkout to the speakertrack branch, ran the ./autogen. So I get this now:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
        + running aclocal -I m4 -I common/m4 ...
        + running autoheader ...
        + running autoconf ...
        configure.ac:204: error: possibly undefined macro: AG_GST_CHECK_GST_PLUGINS_LIBAV
              If this token and others are legitimate, please use m4_pattern_allow.
              See the Autoconf documentation.

        autoconf failed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    I also tried out the speakertrack_new branch, ran the ./autogen and then did make. This time I get this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;make[3]: Entering directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;
          CC     libgstdvbsuboverlay_la-gstdvbsuboverlay.lo
        gstdvbsuboverlay.c:71:43: error: expected &amp;#39;}&amp;#39; before &amp;#39;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&amp;#39;
        gstdvbsuboverlay.c:78:1: error: expected &amp;#39;}&amp;#39; before &amp;#39;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&amp;#39;
        make[3]: *** [libgstdvbsuboverlay_la-gstdvbsuboverlay.lo] Error 1
        make[3]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;




&lt;h2&gt;
    Code Improvements
&lt;/h2&gt;


&lt;p&gt;
    I have tried to bring some new improvements to the code. I have made a new structure for the server class so that it is extensible. Now, the main Server class is derived from three classes:
    &lt;ol&gt;
        &lt;li&gt;
            BaseServer : Handles the various properties of the Server.
        &lt;/li&gt;
        &lt;li&gt;ServerProcess : Handles all processes created by the Server. These include both controlling the server process as well as the various test sources which can be created to test the server.&lt;/li&gt;
        &lt;li&gt;ServerDBusController : Handles all interactions of the Server with the DBus&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;


&lt;p&gt;
    I have added two files:
    &lt;ol&gt;
        &lt;li&gt;connection.py : This file will have classes which will take care of the various connections which have to be made with the gst-switch-srv over dbus.&lt;/li&gt;
        &lt;li&gt;dbus.py : This file will have classes which will help in interaction with the remote objects present on the gst-switch-srv. This will be utilizing the methods defined in connection.py.&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Installation-and-Changes-in-Structure&quot; title=&quot;Previous Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Speakertrack-working&quot; title=&quot;Next Post: Speakertrack working&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Installation and Changes in Structure</title>
   <link href="http://hyades.github.io/blog/Installation-and-Changes-in-Structure"></link>
   <updated>2013-06-23T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Installation-and-Changes-in-Structure</id>
   <content type="html">&lt;h2&gt;
    Installation
&lt;/h2&gt;


&lt;p&gt;
    Installation of the gst-switch from master branch works good. However I am unable to install gst-switch for the speaker-track branch. 
&lt;/p&gt;


&lt;p&gt;
    I am running Quantal and had gstreamer-1.0 installed along with all the plugins (good, bad, ugly) installed through the ubuntu repository. The version of gstreamer was 1.0.6. However, gst-switch requires the latest development version-1.1.1 to be installed. 
&lt;/p&gt;


&lt;p&gt;
    Also I would mention that installing the speakertrack branch of gst-switch does not work out correctly. Firstly the gstreamer plugins were not installed correctly. Also, I did not find the file gst-switch-cap in ~/gst/stage/bin indicating that the installation process actually installed the master branch instead of installing the speakertrack branch.
    &lt;br&gt;
    I have installed all the git packages of gstreamer and its plugin from duzy repo at &lt;a href=&quot;https://github.com/duzy&quot;&gt;https://github.com/duzy&lt;/a&gt;. I installed the following packages:
    &lt;ul&gt;
        &lt;li&gt;gstreamer &lt;a href=&quot;https://github.com/duzy/gstreamer&quot;&gt;https://github.com/duzy/gstreamer&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-base &lt;a href=&quot;https://github.com/duzy/gst-plugins-base&quot;&gt;https://github.com/duzy/gst-plugins-base&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-good &lt;a href=&quot;https://github.com/duzy/gst-plugins-good&quot;&gt;https://github.com/duzy/gst-plugins-good&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugins-ugly &lt;a href=&quot;https://github.com/duzy/gst-plugins-ugly&quot;&gt;https://github.com/duzy/gst-plugins-ugly&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;gst-plugin-bad &lt;a href=&quot;https://github.com/duzy/gst-plugins-bad&quot;&gt;https://github.com/duzy/gst-plugins-bad&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;


&lt;p&gt;
    Installing the gst-plugins-bad gives errors. First I try installing from the master branch. I encountered this error while doing make:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;make[4]: Entering directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;
          CC     libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo
        In file included from gstcamerabinpreview.c:31:0:
        ../../../gst-libs/gst/glib-compat-private.h:84:30: error: unknown type name &amp;#39;GStaticRecMutex&amp;#39;
        make[4]: *** [libgstbasecamerabinsrc_1.0_la-gstcamerabinpreview.lo] Error 1
        make[4]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst-libs/gst/basecamerabinsrc&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    Didn&#39;t work out well. So I did a checkout to the speakertrack branch, ran the ./autogen. So I get this now:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;libtoolize: rerunning libtoolize, to keep the correct libtool macros in-tree.
        + running aclocal -I m4 -I common/m4 ...
        + running autoheader ...
        + running autoconf ...
        configure.ac:204: error: possibly undefined macro: AG_GST_CHECK_GST_PLUGINS_LIBAV
              If this token and others are legitimate, please use m4_pattern_allow.
              See the Autoconf documentation.

        autoconf failed&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


    I also tried out the speakertrack_new branch, ran the ./autogen and then did make. This time I get this:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;make[3]: Entering directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;
          CC     libgstdvbsuboverlay_la-gstdvbsuboverlay.lo
        gstdvbsuboverlay.c:71:43: error: expected &amp;#39;}&amp;#39; before &amp;#39;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&amp;#39;
        gstdvbsuboverlay.c:78:1: error: expected &amp;#39;}&amp;#39; before &amp;#39;GST_VIDEO_OVERLAY_COMPOSITION_BLEND_FORMATS&amp;#39;
        make[3]: *** [libgstdvbsuboverlay_la-gstdvbsuboverlay.lo] Error 1
        make[3]: Leaving directory `/home/hyades/Github/test/duzy/gst-plugins-bad/gst/dvbsuboverlay&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;




&lt;h2&gt;
    Code Improvements
&lt;/h2&gt;


&lt;p&gt;
    I have tried to bring some new improvements to the code. I have made a new structure for the server class so that it is extensible. Now, the main Server class is derived from three classes:
    &lt;ol&gt;
        &lt;li&gt;
            BaseServer : Handles the various properties of the Server.
        &lt;/li&gt;
        &lt;li&gt;ServerProcess : Handles all processes created by the Server. These include both controlling the server process as well as the various test sources which can be created to test the server.&lt;/li&gt;
        &lt;li&gt;ServerDBusController : Handles all interactions of the Server with the DBus&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;


&lt;p&gt;
    I have added two files:
    &lt;ol&gt;
        &lt;li&gt;connection.py : This file will have classes which will take care of the various connections which have to be made with the gst-switch-srv over dbus.&lt;/li&gt;
        &lt;li&gt;dbus.py : This file will have classes which will help in interaction with the remote objects present on the gst-switch-srv. This will be utilizing the methods defined in connection.py.&lt;/li&gt;
    &lt;/ol&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Changing-PIP-Modes&quot; title=&quot;Previous Post: Changing PIP Modes&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Installation-and-Changes-to-Structure&quot; title=&quot;Next Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Changing PIP Modes</title>
   <link href="http://hyades.github.io/blog/Changing-PIP-Modes"></link>
   <updated>2013-06-19T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Changing-PIP-Modes</id>
   <content type="html">&lt;h2&gt;
    A few changes to the executables firstly
&lt;/h2&gt;


&lt;p&gt;
    I also made a few modifications to the way gst-switch is installed. The process puts a copy of gst-switch-srv and gst-switch-ui at /usr/local/bin. These are from the master branch of gst-switch. But, I needed these executables from the speaker-track branch. So I just copied these to the folder replacing the already placed ones. Thus, now I am able to shoot off gst-switch-srv (from the speaker-track branch) just by doing it in the terminal. 
&lt;/p&gt;


&lt;h2&gt;
    Changing PIPs
&lt;/h2&gt;


&lt;p&gt;
    I have been testing the dbus connection so that it works properly. I concertrated mostly on changing PIP modes. For testing the modules that I made earlier were a LOT of help. It surely saved me the headache of starting gst-switch-srv along with 3 to 4 more processes to feed video input as well as to view the processes. My test script looks simple enough like this
    &lt;script src=&quot;https://gist.github.com/6176103.js&quot;&gt; &lt;/script&gt;
    Here I avoided attaching the gst-switch-ui and directly connected a gst-launch element to the output port.
&lt;/p&gt;




&lt;p&gt;
    In another terminal I am running my other script interacting with the gst-switch-srv module over dbus. I added a few screenshots to show these:
    &lt;br&gt;
    Firstly I start off my testing script which turns on the gst-switch-srv and adds some input test sources to it. The video output of the gst-switch is shown in the gst-launch windows in the left bottom corner. In the left terminal, I am running this script. This is the default output of gst-switch:
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:07.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:07_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
    Now, I run my script which does the work of communicating messages over dbus. Setting Mode 0
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:23.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:23_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;p&gt;
    Now, Mode 1
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:28.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:28_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    Ah, now Mode 2
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:32.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:32_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    Mode 3
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:37.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:37_1.png&quot;&gt;&lt;/a&gt;
    &lt;br&gt;
&lt;/p&gt;


&lt;p&gt;
    And now back to Mode 0 :D
&lt;/p&gt;


&lt;p&gt;
    &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:42.png&quot;&gt;&lt;img width=&quot;300&quot; height=&quot;200&quot; src=&quot;/img/screenshots/Screenshot from 2013-06-19 20:22:42_1.png&quot;&gt;&lt;/a&gt;
&lt;/p&gt;


&lt;h2&gt;
    Things left
&lt;/h2&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;
            &lt;p&gt;
                As you can see the sources don&#39;t look pretty. This is evident from the first screenshot. This indicates that there is some problem in the pipelines feeding into the gst-switch-srv. For example videotestsrc pattern=10 looks like this:
            &lt;/p&gt;
            &lt;p&gt;
                &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:13.jpg&quot;&gt;&lt;img src=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:13.jpg&quot;&gt;&lt;/a&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;br&gt;
                But actually or ideally it should be looking like this:
                &lt;br&gt;
                &lt;br&gt;
            &lt;/p&gt;
            &lt;p&gt;
                &lt;a href=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:46.jpg&quot;&gt;&lt;img src=&quot;/img/screenshots/Screenshot from 2013-06-21 13:56:46.jpg&quot;&gt;&lt;/a&gt;
            &lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;Make an object structure out of this crude script which turns communicates over the dbus with the gst-switch.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/The-SoC-coding-period-starts-off&quot; title=&quot;Previous Post: The SoC Coding Period Starts Off&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Installation-and-Changes-in-Structure&quot; title=&quot;Next Post: Installation and Changes in Structure&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>The SoC Coding Period Starts Off</title>
   <link href="http://hyades.github.io/blog/The-SoC-coding-period-starts-off"></link>
   <updated>2013-06-17T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/The-SoC-coding-period-starts-off</id>
   <content type="html">&lt;h2&gt;The Last Few Days&lt;/h2&gt;


&lt;h3&gt;Defining pipelines for test sources&lt;/h3&gt;


&lt;p&gt;I have been revamping the code. The major change was the introduction of a class structure and subsequent code to support pipelines for testing. Any pipeline can be derived using the base pipeline. It supports some basic functionalities. Of course, newer functionalities will be added into the classes which are derived from this class. I made a class for testing a video source which uses a derived and modified version of this base pipeline. This kind of a video source allows simulating a test video source without the overhead of creating a separate shell process.
&lt;/p&gt;


&lt;h3&gt;Looking into the Gio Modules&lt;/h3&gt;


&lt;p&gt;
    I have been also trying to control the gst-switch-srv through the dbus. GDbus or rather Gio is very much capable of handling the situation. It has low-level bindings. DBus on the other hand uses the libdbus library for its communication. Thus, it can be said that GDbus is far more extensible than DBus. However the problem with GDbus is that it lacks a documentation especially for the python modules. I found some good stuff at &lt;a href=&quot;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&quot;&gt;http://developer.ubuntu.com/api/ubuntu-12.10/python/Gio-2.0.html&lt;/a&gt;. Only problem here is that the documentation for the C functions and not for Python. I tried a bit but was only capable of calling remote methods which get information such has get_encode_port, get_audio_port etc. However calling methods where a parameter had to be specified &lt;strong&gt;crashed&lt;/strong&gt; the server again and again even after repeated attempts. Lack of examples and proper documentation for the Python modules was indeed a hindrance. :( 
&lt;/p&gt;


&lt;p&gt;
    So, I decided to take a deeper look into previously tested DBus module itself thinking that I might be wrong previously in underestimating DBus. DBus has an easy structure where you can define a bus first and then use functions of the bus itself to call methods on the remote object. Gst-switch-srv uses a non-default bus address at &quot;unix:abstract=gstswitch&quot;. Getting my hands dirty I found out that the DBus module internally uses a Connection class for the actual connection to the dbus. This Connection was ultimately derived by the Bus class. The Connection class had an option for providing the &quot;address&quot; of the dbus. I gave the address and as expected it worked :) The gst-switch-srv too confirmed the connection. However, the main problem arose when I tried calling a method. The dbus modules have been implemented such that they seem to be looking for the path at &quot;org.freedesktop.dbus&quot;. However, in reality such a path does not exist in the custom dbus defined by the gst-switch-srv. So, it simply gives an exception stating that it didn&#39;t find anything at &quot;org.freedesktop.dbus&quot;. So I was left again with GDbus :) I read the C implementations and tried to make sense with the corrosponding Python classes. Finally, after a day I came across a tool &quot;d-feet&quot;. This is a graphical reader of the dbus. It was probably the first thing that I had tried. It has an option for custom bus addresses. However, providing the address simply didn&#39;t work. But the source code of the module was indeed of lots of use. D-feet internally uses the GDbus modules for connections. The implementation of the introspect method here gave a clear idea of what I had to really do!
&lt;/p&gt;


&lt;h2&gt;Today&lt;/h2&gt;


&lt;p&gt;
    Using the d-feet code I tried out a test script. Its over &lt;a href=&quot;https://github.com/hyades/gst-switch/blob/python-api/python-api/test/dbusConnect2.py&quot;&gt;here&lt;/a&gt;. Using this kind of a script, I can control the PIP mode of the gst-switch-srv. And, it &lt;strong&gt;doesn&#39;t&lt;/strong&gt; crash the gst-swicth-srv :D The methods where I get information work perfect as they used to.
&lt;/p&gt;


&lt;h4&gt;Todo&lt;/h4&gt;


&lt;p&gt;
    &lt;ul&gt;
        &lt;li&gt;I need to define a class structure for these dbus interactions (the Controller class I talked about in a &lt;a href=&quot;http://hyades.github.io/blog/Beginning-with-some-code/&quot;&gt;previous blog&lt;/a&gt;). 
        &lt;/li&gt;
        &lt;li&gt;
            Although the above testing script is working, there are some cases where does cause some undesired results. These have to be dealt with too.
        &lt;/li&gt;
    &lt;/ul&gt;
    

&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Beginning-with-some-code&quot; title=&quot;Previous Post: Beginning with some code&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;           &lt;a href=&quot;/blog/Changing-PIP-Modes&quot; title=&quot;Next Post: Changing PIP Modes&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Beginning with some code</title>
   <link href="http://hyades.github.io/blog/Beginning-with-some-code"></link>
   <updated>2013-06-07T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Beginning-with-some-code</id>
   <content type="html">&lt;p&gt;
    Finally getting some fingers moving. I am pushing code at &lt;a href=&quot;https://github.com/hyades/gst-switch/tree/python-api&quot;&gt;here&lt;/a&gt;. Worked out an initial class structure for getting the things working. I am trying to put in little bit of documentation in the function itself.
    &lt;br&gt;
    Currently there are three main classes: Server, UI and Controller.
&lt;/p&gt;


&lt;h4&gt;
    The Server
&lt;/h4&gt;


&lt;p&gt;
    The Server is the interaction module with gst-switch-srv. It is capable of controlling the server. The Server class has a contructor where the user can specify the video port, audio port, control port and the output record file.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;from gstswitch import *        #importing all modules&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;server = Server()          #simple enough thing, gets the server running with default parameters.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The server can be started off forking a new process and can safely be killed. Connection to the controller can be made by invoking the Controller class.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;control = server.connectController()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    If a connection does not exist a new connection should be made to the Controller. Now that the server is running, there should be some input to the server! These are the videotestsrc elements of gstreamer. I have added options where the user can select what pattern, height, width etc can be specified. The width of the input stream should be 300 and height should be 200 always, else it might result in some strange unclear patterns coming up. If no pattern is specified a random one gets selected.
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;server.newTestVideo()      #adds a new test source to the gst-switch
        server.getAllTestVideo()    #displays all test sources feeding in the gst-switch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The Server and the test sources can be easily killed off by invoking like this. I was earlier facing a problem where the subprocess.Popen() command was making two processes. Now, while killing only one gets killed, whereas the other one was still remaining. I was using an option shell=True as an argument to the Popen command. Changing this option to shell=False allowed me to control the server class more easily as in this case only one process gets created!
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;server.end()               #kills off the server process
        server.endAllTestVideo()    #kills off all test videos that have been defined. server.end() takes care of this&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    Currently the video sources are being fed by creating new processes. I will modify these using the Gstreamer 1.0 Python Bindings defined under gi.repository.Gst
&lt;/p&gt;


&lt;h4&gt;
    The UI
&lt;/h4&gt;


&lt;p&gt;
    Now the server is running and the input sources have been specified, we need to view the output that is getting generated. For this the gst-switch-ui can be invoked. Simply the UI is run using:
    
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;ui = UI()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    The UI process is ended simply using ui.end() method.
    Once the controller is ready, the compose port can be used to view the output of the gst-switch server directly eliminating the need of the UI.
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Experiments-with-dbus&quot; title=&quot;Previous Post: Experiments with dbus&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/The-SoC-coding-period-starts-off&quot; title=&quot;Next Post: The SoC Coding Period Starts Off&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;      &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Experiments with dbus</title>
   <link href="http://hyades.github.io/blog/Experiments-with-dbus"></link>
   <updated>2013-06-01T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Experiments-with-dbus</id>
   <content type="html">&lt;p&gt;
    Messing around with the Dbus Python API. The Gst-Switch controller seems to be using a non-default bus address (unix:abstract=gstswitch). Trying to connect to the given object path. I will have to find some new ways to connect to the object.
&lt;/p&gt;


&lt;p&gt;
    Currently using code like this for testing:
&lt;/p&gt;


&lt;p&gt;
&lt;script src=&quot;https://gist.github.com/6176055.js&quot;&gt; &lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    When I try to connect, getting errors like:
&lt;/p&gt;


&lt;p&gt;
    &lt;script src=&quot;https://gist.github.com/6176075.js&quot;&gt; &lt;/script&gt;
&lt;/p&gt;


&lt;p&gt;
    Will have to use something more than using &quot;dbus.SessionBus()&quot;. The dbus python documentation says they will include connection to non-default address in a later section!. Since it is supported in the latest version, trying to get a way of getting this working...
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/hello-world&quot; title=&quot;Previous Post: hello-world&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;          &lt;a href=&quot;/blog/Beginning-with-some-code&quot; title=&quot;Next Post: Beginning with some code&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>hello-world</title>
   <link href="http://hyades.github.io/blog/hello-world"></link>
   <updated>2013-05-29T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/hello-world</id>
   <content type="html">&lt;h2&gt;
    Finally A Blog!!
&lt;/h2&gt;


&lt;p&gt;
    Powered by Jaykell and Twitter Bootstrap
    
&lt;/p&gt;


&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;/blog/Gsoc-2k13&quot; title=&quot;Previous Post: Gsoc-2k13&quot;&gt;&lt;i class=&quot;icon-chevron-left&quot;&gt;&lt;/i&gt;&lt;/a&gt;             &lt;a href=&quot;/blog/Experiments-with-dbus&quot; title=&quot;Next Post: Experiments with dbus&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 <entry>
   <title>Gsoc-2k13</title>
   <link href="http://hyades.github.io/blog/Gsoc-2k13"></link>
   <updated>2013-05-29T00:00:00+05:30</updated>
   <id>http://hyades.github.io/blog/Gsoc-2k13</id>
   <content type="html">&lt;h2&gt;Gsoc 2013&lt;/h2&gt;


&lt;p&gt;Ah.. Project for GSOC 2013 gets accepted at timvideos.us.The project aims at developing a python API for GST-Switch so that it can be easily tweaked for testing purposes and user has more control over it.&lt;/p&gt;


&lt;p&gt;
    More information at  &lt;a href=&quot;http://www.google-melange.com/gsoc/project/google/gsoc2013/hyades/36001&quot;&gt;http://www.google-melange.com/gsoc/project/google/gsoc2013/hyades/36001&lt;/a&gt; 
&lt;/p&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 column&quot;&gt;
            &lt;p class=&quot;pull-right&quot;&gt;      &lt;a href=&quot;/blog/hello-world&quot; title=&quot;Next Post: hello-world&quot;&gt;&lt;i class=&quot;icon-chevron-right&quot;&gt;&lt;/i&gt;&lt;/a&gt;    &lt;/p&gt;  
    &lt;/div&gt;

&lt;/div&gt;




&lt;div class=&quot;row&quot;&gt;   
    &lt;div class=&quot;span9 columns&quot;&gt;    
        &lt;h2&gt;Comments Section&lt;/h2&gt;
        &lt;p&gt;Feel free to comment on the post but keep it clean and on topic.&lt;/p&gt; 
        &lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
        &lt;script type=&quot;text/javascript&quot;&gt;
            /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
            var disqus_shortname = &#39;aayushahuja&#39;; // required: replace example with your forum shortname
            
            
            /* * * DON&#39;T EDIT BELOW THIS LINE * * */
            (function() {
                var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
                dsq.src = &#39;http://&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
                (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
            })();
        &lt;/script&gt;
        &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;http://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
        &lt;a href=&quot;http://disqus.com&quot; class=&quot;dsq-brlink&quot;&gt;blog comments powered by &lt;span class=&quot;logo-disqus&quot;&gt;Disqus&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- Twitter --&gt;


&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=&quot;//platform.twitter.com/widgets.js&quot;;fjs.parentNode.insertBefore(js,fjs);}}(document,&quot;script&quot;,&quot;twitter-wjs&quot;);&lt;/script&gt;




&lt;!-- Google + --&gt;


&lt;script type=&quot;text/javascript&quot;&gt;
  (function() {
    var po = document.createElement(&#39;script&#39;); po.type = &#39;text/javascript&#39;; po.async = true;
    po.src = &#39;https://apis.google.com/js/plusone.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0]; s.parentNode.insertBefore(po, s);
  })();
&lt;/script&gt;


&lt;!-- Written by hyades --&gt;



</content>
 </entry>
 
 
</feed>